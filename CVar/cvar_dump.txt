Name description=
 description=Subdirectory to use when save/load character custom head files
Bind description=Bind <keyname> <console command>
CVar::es_entity_allocator_page_heap description=Changes the Entity Allocator into PageHeap like mode to detect invalid memory access
ClearInventoryCache description=Close personal inventory and clear the cache.
ConsoleHide description=Closes the console
ConsoleShow description=Opens the console
DumpLoadingMessages description=List all messages which could appear during loading
ExitOnQuit description=0 = full shutdown, 1 = fast shutdown
FatalAtInvalidSpawnLocation description=Fatal to track spawn bug
FlyCamPlay description=Plays the flycam path
FlyCamSetPoint description=Sets a fly cam point
FreeCamDisable description=Disable the freecam
FreeCamEnable description=Enable the freecam
FreeCamLockCamera description=Stay in freecam but lock the camera, allowing player controls to resume
FreeCamUnlockCamera description=Stay in freecam unlock the camera, stopping player controls
HC_CaptureOperation description=(0/1/2) - logging of capture data for bind culling gotoPoint tests. 
 [0 - Start] 
 [1 - Stop] 
 [2 - DumpToLog/Restart]

HC_FlyMode description=(1,0) - Turn FlyCam for headless client player On or Off
HUD_setCustomSafeArea description=Set a custom safe area 0->1 is proportion or, >1 is an ID.
LoadConfig description=Load .cfg file from disk (from the {Game}/Config directory)
e.g. LoadConfig lowspec.cfg
Usage: LoadConfig <filename>
RecordClip description=Records a video clip of the game
Usage: RecordClipCmd <exec/config> <time before> <time after> <local backup (backup/no_backup)> <annotation text>
e.g. RecordClipCmd config 10 5 backup My Test Video
     Configures the recording parameters
e.g. RecordClipCmd config
     Shows the current parameters
e.g. RecordClipCmd
     Records a video clip using the stored parameters
e.g. RecordClipCmd exec 3 6 no_backup Other Test Video
     Records a video clip using the given recording parameters and updates the configuration

Screenshot description=Create a screenshot with annotation
e.g. Screenshot beach scene with shark
Usage: Screenshot <annotation text>
ShipComputer_AllowInitialDelay description=Allow a delay when triggering a response
[0/1]
ShipComputer_AllowInterruptions description=Allow a newer response to interrupt something that is currently playing
[0/1]
ShipComputer_Debug description=Enable/disable ship computer on screen debug
[0/1]
ShipComputer_ForceAllResponsesToBeQueued description=Ignore cockpit response setting and force queuing on everything
[0/1]
ShipComputer_Logging description=Enable/disable ship computer logging
[0/1]
ShipComputer_TimeoutEnabled description=Enable/disable ship computer timeouts
[0/1]
TPSMultiThreaded description=If greater than 0 then the Tactical Point System jobs will execute on the worker threads
TTSMultiThreaded description=If greater than 0 then the Tactical Target System jobs will execute on the worker threads
TestSOCExposedEntityQuery description=Test a query for entities by string: [guid].[guid].[guid]
TimeCamActionsToggle description=Toggle the player control while using the Time Camera
TimeCamDisable description=Disable the Time Camera
TimeCamEnable description=Enable the Time Camera
TriggerIssueHighlighter description=Displays a message on screen and in the log to highlight an issue.
Unbind description=Unbind <keyname>
VisualConsole description=writes console to screen
VisualConsoleSubStr description=writes console to screen if it matches substr
WeatherTimerCtrl description=Controls the weather timer. Valid args are: "pause", "resume", and "reset"
_r_SSReflRayDistScale description=Scales the maximum reflection ray distance
_r_SSReflRayDistScaleWater description=Scales the maximum reflection ray distance for water
ac_ColliderModeAI description=Force override collider mode for all AI.
ac_ColliderModePlayer description=Force override collider mode for all players.
ac_DebugFilter description=Debug specified entity name only. Also accept complete EntityID
ac_debugAnimEffects description=Print log messages when anim events spawn effects.
ac_debugAnimTarget description=Display debug history graphs of anim target correction.
ac_debugColliderMode description=Display filtered and requested collider modes.
ac_debugEntityParams description=Display entity params graphs
ac_debugLocations description=Debug render entity location.
ac_debugLocationsGraphs description=Display debug history graphs of entity locations and movement.
ac_debugMotionParams description=Display graph of motion parameters.
ac_debugMovementControlMethods description=Display movement control methods.
ac_debugSlopes description=Debug render entity ground slope result.
ac_debugText description=Display entity/animation location/movement values, etc.
ac_debugXXXValues description=Display some values temporarily hooked into temp history graphs.
ac_enableExtraSolidCollider description=Enable extra solid collider (for non-pushable characters).
ac_entityAnimClamp description=Forces the entity movement to be limited by animation.
ac_forceSimpleMovement description=Force enable simplified movement (not visible, dedicated server, etc).
ac_frametime description=Display a graph of the frametime.
ac_movementControlMethodFilter description=Force reinterprets Decoupled/CatchUp MCM specified by AG as Entity MCM (H/V overrides override this).
ac_movementControlMethodHor description=Overrides the horizontal movement control method specified by AG (overrides filter).
ac_movementControlMethodVer description=Overrides the vertical movement control method specified by AG (overrides filter).
ac_templateMCMs description=Use MCMs from AG state templates instead of AG state headers.
ac_useMovementPrediction description=When using animation driven motion sample animation for the root several frame ahead to take into account the delay between animation update and physics update.At the time of writing, animation and physics are 2-frame out-of-sync. This is due to: - The physics does not post its result to main thread until the start of next frame. - The anim motion extraction happens before physics commands are sent, but anim pose is updated after the physics commands has been sent. The anim motion extraction uses anim data from last frame.This cvar accepts 0, 1, and 2
addGoto description=Saves a goto point in XML on server (use goto via console)
Usage: addGoto <name of point> [<filename without extension>] 

addImguiGoto description=Save a goto point in XML on client (use goto via imgui)
Usage: addImguiGoto <name of point> [<filename without extension>] 

ai.SpatialResolver.DrawSearchJobsQueue description=Draws the list of current jobs in queue and their state
ai.SpatialResolver.DrawSearchProgress description=Draws the progress of the search through the SDF
ai.SpatialResolver.GEATestDraw description=Will draw the results of GetEntitiesAround around the position of an entity named TagPoint_GEA. Each obstacle is shown as an OBB
The GEA is setup to report the same results an AI pilot would get sampling from the same position.
ai.SpatialResolver.GEATest_DrawLabels description=Displays a label for each OBB found using the GEA test
ai.SpatialResolver.GEATest_IncludeGasClouds description=Consider only Gas Cloud as a source when probing GEA (ent_ignore_noncolliding is disabled)
ai.SpatialResolver.GEATest_IncludePhysEnts description=Consider only hard physical entities as a source when probing GEA (ent_ignore_noncolliding is enabled)
ai.SpatialResolver.GEATest_Radius description=Radius of the GEA search around a tag point named TagPoint_GEA. The search space is an AABB with that radius. All physical entities intersecting with the AABB will be shown
ai.SpatialResolver.NumberOfSDFSamplesToUse description=The number of (valid) samples that are considered when evaluating the path correction
ai.SpatialResolver.SDFTestDraw description=Will draw the SDF around the position of an entity named TagPoint_SDFDebug
ai.SpatialResolver.SDFTest_CutoffRadius description=Cutoff radius used when sampling distance around a point
ai.SpatialResolver.SDFTest_DrawGradients description=Displays the gradient direction for each SDF (positive) sample
ai.SpatialResolver.SDFTest_DrawLabels description=Displays a label for each SDF (positive) sample reporting the distance
ai.SpatialResolver.SDFTest_IncludeGasClouds description=Consider only Gas Cloud as a source when probing the SDF field (ent_ignore_noncolliding is disabled)
ai.SpatialResolver.SDFTest_IncludePhysEnts description=Consider only hard physical entities as a source when probing the SDF field (ent_ignore_noncolliding is enabled)
ai.SpatialResolver.TerrainSampler description=Uses the position of a tag point (named as ai_TerrainSamplerTagName) placed in the zone of a planet to show the vertical distance to the terrain (including terrain modifiers and correction for the ocean radius)
ai.SpatialResolver.TimeBudgetMillisecondsOpenSpace description=Duration of each search phase when searching for a flight path in open space
ai.SpatialResolver.TimeBudgetMillisecondsTerrain description=Duration of each search phase when searching for a flight path over terrain
ai.SpatialResolver.minTerrainClearance description=When flying over planet terrain this will be the min distance to the terrain the AI ship will try to respect when searching for the paths
ai.SpatialResolver.safeDistanceMultiplier description=The diameter of the vehicle is multiplies by this factor to computed the safe distance (distance withing which an obstacle begin to affect the ship's steering
ai.orca3D.SDFSamplesNum description=How many valid samples each ship should acquire for static obstacle discovery.
ai.orca3D.neighboursSearchRangeEVA description=The radius used to search for neighboring EVA actors (that will participate to the collision resolution.
ai.orca3D.neighboursSearchRangePilot description=The radius used to search for neighboring ships (that will participate to the collision resolution.
ai.orca3D.radiusScaleFactor description=The ORCA 3D system will scale each vehicle radius by this factor.
ai.orca3D.timeHorizonLarge description=How far ahead into the future the ORCA algorithm should predict the collision risk (in seconds).
ai.orca3D.timeHorizonMedium description=How far ahead into the future the ORCA algorithm should predict the collision risk (in seconds).
ai.orca3D.timeHorizonShort description=How far ahead into the future the ORCA algorithm should predict the collision risk (in seconds).
ai_ActivitySchedulerDebugDraw description=Shows debug information about the Activity Scheduler.
ai_AllowConversationInterrupt description=Enable to allow conversation interruption
ai_AutoPathVisualizePathInTrackview description=>0 to visualize the auto path on the selected trackview key
ai_BallisticPredictionDebugDraw description=Enables debug visualisation of tested ballistic arcs.

ai_BallisticPredictionThreadJobs description=Maximum number of threads that could work on ballistic predictions.

ai_BallisticPredictionUseMT description=Enables ballistic predictions requests on multiple threads.

ai_BubbleSystemAllowPrototypeDialogBubbles description=Enabling the visualization of the bubbles created to prototype AI dialogs
ai_BubblesSystem description=Enables/disables bubble notifier.
ai_BubblesSystemAlertnessFilter description=Specifies the type of messages you want to receive:
0 - none
1 - Only logs in the console
2 - Only bubbles
3 - Logs and bubbles
4 - Only blocking popups
5 - Blocking popups and logs
6 - Blocking popups and bubbles
7 - All notifications
ai_BubblesSystemDecayTime description=Specifies the decay time for the bubbles drawn on screen.
ai_BubblesSystemFontSize description=Font size for the BubblesSystem.
ai_BubblesSystemHeightOffsetOverride description=Height offset override for the BubblesSystem.
ai_BubblesSystemMinSizeOverride description=Minimum size override for the BubblesSystem (caps scale for distance).
ai_BubblesSystemScaleFontSizeWithDistance description=If set to 0 the fontsize will be preserved regardless of the NPC distance
ai_BubblesSystemUseDepthTest description=Specifies if the BubblesSystem should use the depth test to show the messages inside the 3D world.
ai_BubblesSystemUseFrame description=If set to 1 the text will be displayes against a white background frame
ai_CmdForceRegenerateDynamicCovers description=It will force navigation generation for all Navigation Volumes that have Dynamic Cover Component enabled.
ai_CmdForceRegenerateNavigationForSelected description=It will force navigation generation for filtered Navigation Volume. Check 'ai_MNMDebugFilterVolumes' and select 1 volume with '[' / ']' keys.
ai_CmdSubsumptionDumpSuspendedActivities description=Outputs a list of all AI actors with suspended activities to the log
ai_CmdSubsumptionGetReputation description=Get a reputation variable on an NPC/Player entity. ai_CmdSubsumptionGetReputation <PlayerName> <ReputationVariableName>
ai_CmdSubsumptionInterruptConversationForEntity description=Interrupts a running conversation for the given entity. ai_CmdSubsumptionInterruptConversationForEntity <EntityName>
ai_CmdSubsumptionSetReputation description=Set a reputation variable on an NPC/Player entity. ai_CmdSubsumptionSetReputation <PlayerName> <ReputationVariableName> <Value>
ai_CollisionAvoidanceAgentExtraFat description=Extra radius to use in Collision Avoidance calculations as a buffer.
ai_CollisionAvoidanceCandidateSolverType description=0 = Use RVO2 reference linear solver;1 = Use our own candidate sorting algorithm
ai_CollisionAvoidanceCandidateSortMode description=Only relevant when using ai_CollisionAvoidanceCandidateSolverType 1;0 = minimize distance between candidate and desired velocities (tend to slow down rather than turn);1 = maximize progress along desired velocity (tend to turn rather than slow down);2 = blend of both (prefer to turn unless it makes us go too far to the side
ai_CollisionAvoidanceIgnoreNavMeshEdgesWhenOverconstrained description=Enable ignoring of navmesh edges whenever our current set of constraints can't be solved if we include them
ai_CollisionAvoidanceIncludeNavMeshEdges description=Enable inclusion of nearby nav mesh edges as avoidance obstacles
ai_CollisionAvoidanceMinSpeed description=Minimum speed allowed to be used by ORCA.
ai_CollisionAvoidanceNavLinkIgnoreEdges description=0 = Include navmesh edges as part of collision avoidance calculation while traversing navlinks (if ai_CollisionAvoidanceIncludeNavMeshEdges is enabled)1 = Ignore navmesh edges for collision avoidance calculation while traversing navlinks
ai_CollisionAvoidanceNavMeshEdgeMinLength description=Ignore edges shorter than this for inclusion in edge avoidance
ai_CollisionAvoidancePassRadiusMatchesColliderRadius description=0 = Use configured pass radius values to determine actual pass radius to use1 = Use current physics collider radius as the pass radius to use
ai_CollisionAvoidancePathEndCutoffRange description=Distance from its current path end for an agent to stop avoiding obstacles. Other actors will still avoid the agent.
ai_CollisionAvoidanceStrafeTestMode description=Only relevant when using ai_CollisionAvoidanceCandidateSolverType 1Backward velocities for non-strafing agents: 0 = always allow; 1 = never allow; 2 = allow if doing second pass using relaxed constraints
ai_CollisionAvoidanceTargetCutoffRange description=Distance from its current target for an agent to stop avoiding obstacles. Other actors will still avoid the agent.
ai_CollisionAvoidanceUseSoftAgentSeparation description=0 = Apply inverse timestep to agent collision separation (very fast separation but can fail if agents intersect a lot)1 = Do softer collision separation (doesn't separate immediately but won't fail if agents are intersecting)
ai_ConversationComponentDebugDraw description=Draw debug information to the screen regarding the conversation component.
ai_CoverEdgeAngleTolerance description=Tolerance angle between segments to consider it a single edge.
x - Angle in degrees

ai_CoverExitForceFinishTime description=Time waiting for cover exit animation to play after which we assume something went wrong and forcibly finish the exit. Set to 0 or less to never force finish.
ai_CoverHighCoverMinimumHeight description=Minimum height for high cover.
Note: requires covers to be regenerated.

ai_CoverLocationDistanceFromSurface description=Distance from cover center location to the cover surface.
Note: requires covers to be regenerated.
x - Spacing width in meters

ai_CoverLocationSpace description=Space between cover locations.
x - Spacing width in meters

ai_CoverLocationSpaceOnEdge description=Minimum space for first cover location on the edge.
x - Spacing width in meters

ai_CoverLocationValidationAngle description=Maximum difference in angle allowed.
x - Spacing width in meters

ai_CoverLocationValidationDistance description=Maximum difference in position allowed.
x - Spacing width in meters

ai_CoverLowCoverMinimumHeight description=Minimum height for low cover.
Note: requires covers to be regenerated.

ai_CoverMaxDepth description=Maximum depth to check cover.
Note: requires (voxel sampler) covers to be regenerated.
x - Spacing width in meters

ai_CoverMaxDistanceFromSurface description=Maximum distance from cover surface that geometry is considered to be cover.
Note: requires (voxel sampler) covers to be regenerated.
x - Spacing width in meters

ai_CoverMaxEyeCount description=Max numbers of observers to consider when selecting cover.
Usage: ai_CoverMaxEyeCount <x>

ai_CoverMaximumHeight description=Maximum height for any cover.
Note: requires covers to be regenerated.

ai_CoverMinDepth description=Minimum depth that geometry is considered to be cover.
Note: requires (voxel sampler) covers to be regenerated.
x - Spacing width in meters

ai_CoverSpacing description=Minimum spacing between agents when choosing cover.
Usage: g_CoverSpacing <x>
x - Spacing width in meters

ai_CoverSystemBlacklistTime description=Time in seconds while the cover is blacklisted if it was compromised.
Usage: ai_CoverSystemBlacklistTime x
Default x is 10.0
x - Time in seconds

ai_CoverSystemPredictTargetPositionAtTime description=Enables simple cover system target location prediction.
Usage: ai_CoverSystemPredictTargetPositionAtTime x
Default x is 0.0 (off)
x - how many seconds to look ahead

ai_DebugCollisionAvoidanceForceSpeed description=Force agents velocity to its current direction times the specified value.
ai_DebugDrawAIPaths description=Enables the debug drawing of the AIPaths.
0 - disabled
1 - vertices and edges
2 - vertices properties
3 - vertices, edges and vertices properties
4 - edges properties
5 - vertices, edges and edges properties
6 - vertices properties and edges properties
6 - vertices, edges, vertices properties and edges properties

ai_DebugDrawAudioMap description=Toggles the debug drawing of the AI AudioMap
ai_DebugDrawAudioMapEventRadius description=Shows the radius of the audio events as spheres centered around the source position.
ai_DebugDrawAudioMapEventRadiusTime description=How many seconds the audio event sphere drawing will persist.
ai_DebugDrawAudioMapStats description=Enables the debug drawing of the AI AudioMap to show stats information.
ai_DebugDrawCollisionAvoidance description=Enable debugging obstacle avoidance system.
ai_DebugDrawCollisionAvoidanceMode description=0 = positions, desired velocities, modified velocities; 1 = +constraint lines on target agent; 2 = +feasible area on target agent; 3 = +constraint lines and feasible area on target agent.
ai_DebugDrawCollisionAvoidanceNavMeshEdges description=Enable debug drawing of all nearby navmesh edges that have been included as avoidance obstacles.
ai_DebugDrawCover description=Displays cover debug information.
Usage: ai_DebugDrawCover [0/1/2]
Default is 0 (off)
0 - off
1 - currently being used
2 - all in 50m range (slow)

ai_DebugDrawCoverCompromiseTests description=Renders raycast for checking compromised covers.
ai_DebugDrawCoverDistance description=Maximum distance at which we debug cover surface.

ai_DebugDrawCoverLocations description=Displays cover locations.
Usage: ai_DebugDrawCoverLocations [0/1/2]
1 = shows cover locations
2 = show cover locations as well as the action areas each location is part of
Default is 0 (off)

ai_DebugDrawCoverLocationsActionAreaRange description=The range for the cover location action area check.
This is only relevant when ai_DebugDrawCoverLocations = 2
ai_DebugDrawCoverMoveEnterTransitions description=Displays move into cover animations offsets. 1=draw offsets for successful set (regular or short), 2=draw offsets for the successful set or both (whether it succeeded or not)
ai_DebugDrawCoverMoveExitTransitions description=Displays move out of cover animations offsets. 1=draw offsets for successful set (regular or short), 2=draw offsets for regular set (whether it succeeded or not)
ai_DebugDrawCoverMoveTransitionsTime description=Debug draw time for cover move transitions.
ai_DebugDrawCoverOccupancy description=Renders red balls at the location of occupied cover.
Usage: ai_DebugDrawCoverOccupancy [0/1]
Default is 0 (off)
0 - off
1 - render red balls at the location of occupied cover

ai_DebugDrawCoverPaths description=Displays cover paths.
Usage: ai_DebugDrawCoverPaths [0/1]
Default is 1 (on)

ai_DebugDrawCoverPlanes description=Displays cover planes.
Usage: ai_DebugDrawCoverPlanes [0/1]
Default is 0 (off)

ai_DebugDrawCoverSampler description=Displays cover sampler debug rendering.
Usage: ai_DebugDrawCoverSampler [0/1/2/3]
Default is 0 (off)
0 - off
1 - display floor sampling
2 - display surface sampling
3 - display both

ai_DebugDrawCoverSamples description=Displays cover samples.
Usage: ai_DebugDrawCoverSamples [0/1]
Default is 1 (on)

ai_DebugDrawCoverSegments description=Displays cover segments.
Usage: ai_DebugDrawCoverSegments [0/1]
Default is 1 (on)

ai_DebugDrawCoverSystemValidation description=This is the main variable to enable/disable on screen information to validate the cover system.
ai_DebugDrawCoverUsers description=Debug draw cover users.
Usage: ai_DebugDrawCoverUsers [0/1]
Default is 0 (off)
0 - off
1 - on

ai_DebugDrawCoverVoxelSamples description=Display cover voxel samples.
Usage: ai_DebugDrawCoverVoxelSamples [0/1]
Default is 1 (on)

ai_DebugDrawCoverVoxelSpanGrid description=Displays cover voxel span grid.
Usage: ai_DebugDrawCoverVoxelSpanGrid [0/1]
Default is 1 (on)

ai_DebugDrawCoverVoxelSurfaces description=Displays cover voxel surfaces.
Usage: ai_DebugDrawCoverVoxelSurfaces [0/1]
Default is 1 (on)

ai_DebugDrawDynamicCoverSampler description=Displays dynamic cover sampler debug rendering.
Usage: ai_DebugDrawDynamicCoverSampler [0/1]
Default is 0 (off)
0 - off
1 - on

ai_DebugDrawNavSplines description=Enables the debug drawing of the NavSplines.
ai_DebugDrawNavSplinesDistance description=Distance in which to debug draw NavSplines.
ai_DebugDrawNavSplinesFwd description=Enables the debug drawing of the NavSpline's forward vector.
ai_DebugDrawNavSplinesMaxAccel description=Change the spline max acceleration tolerance for the segment debug drawing.
ai_DebugDrawNavSplinesOrientations description=Enables the debug drawing of the full Orientation (Quat)
ai_DebugDrawNavSplinesPrecision description=Change resolution for drawing NavSplines. Increasing the value improves the precision.
ai_DebugDrawNavSplinesTensions description=Enables the debug drawing of the NavSpline's tension values
ai_DebugDrawNavSplinesUp description=Enables the debug drawing of the NavSpline's up vector.
ai_DebugDrawPlayerEnemyKnowledge description=Toggles debug drawing of the AIs knowledge of the player.

ai_DebugDrawSequences description=[0-1] Display active sequence nodes for entities
ai_DebugDrawSkillsCatagoryFilter description=Filters AI Skills by Category name, will display Category and underlying children.
ai_DebugDrawSkillsDistance description=Distance at which AI Skills debug drawing is visible.
ai_DebugDrawSkillsFilter description=Filters AI Skills by name.
ai_DebugDrawVoxelCoverSampler description=Displays voxel cover sampler debug rendering.
Usage: ai_DebugDrawVoxelCoverSampler [0/1]

ai_DebugGlobalPerceptionScale description=Draws global perception scale multipliers on screen
ai_DebugRangeSignaling description=Enable Range Signaling Debug Screen
ai_DebugSignalTimers description=Enable Signal Timers Debug Screen
ai_DebugUnistallExitPositionOptions description=Debug which exit the MovementBlock_UnistallAgentFromInteraction takes
ai_DumpAIInfo description=Print in the log some useful information regarding all the characters running subsumption
ai_EditorForceNavigationGenerationAtExport description=[0-1] Enable/Disable forced regeneration of navigation mesh during export.
ai_EnableCollisionAvoidance description=Enable obstacle avoidance system.
ai_FilterCIGAIDebugDrawDistance description=Debug draw distance filter.
ai_FilterCIGAIDebugDrawbyAgentName description=Some of the CIG AI System debug draw can filter the debug draw on screen based on this variable.
Usage: ai_FilterCIGAIDebugDrawbyAgentName name
Default is none

ai_FlowNodeAlertnessCheck description=Enable the alertness check in AI flownodes
ai_GEATestTagName description=

ai_GameTimeDebugDraw description=Shows debug information about the Game Time Simulation.
ai_IntersectionTesterQuota description=Amount of deferred intersection tests allowed to be cast per frame.
ai_MNMAcceptMeshUpdateUpperBoundSize description=Every regeneration request originating from object whose larger extent size exceeds this value will be rejectedThis size is the half length of the larger side measure of the object bounding box.
ai_MNMAdditionalValidationMessages description=Enables reporting of additional errors used for navmesh validation.
Usage: ai_MNMAdditionalValidationMessages [0/1]

ai_MNMCalculateAccessibility description=Calculate mesh reachability starting from designers placed MNM Seeds.

ai_MNMDebugAccessibility description=[0-1] Display navigation reachable areas in blue and not reachable areas in red
ai_MNMDebugAgentType description=Enabled MNM debug draw for an specific agent type.
Usage: ai_debugMNMAgentType [AgentTypeName]

ai_MNMDebugDrawDistance description=Maximum distance for drawing navigation mesh triangles.
ai_MNMDebugDrawIslandConnectionsManager description=[0-1] Display off island connections manager infos.
ai_MNMDebugDrawNavigation description=Displays the navigation debug information.
Usage: ai_MNMDebugDrawNavigation [0/1]
Default is 0 (off)
0 - off
1 - triangles and contour
2 - triangles, mesh and contours
3 - triangles, mesh contours and external links
4 - triangles, mesh contours, external links and triangle IDs
5 - triangles, mesh contours, external links and island IDs
6 - triangles, mesh contours, external links and colors according to different cost config ID
7 - bounding volumes and exclusion areas
8 - navigation volumes aabb tree
9 - voxel navigation volume AABB tree () 
10 - voxel navigation volume with voxel merge resolution applied () 

ai_MNMDebugDrawNavigationAreas description=[0-1] Enables/disables exact area shape debug draw for navigation/cost/exclusion volumes
ai_MNMDebugDrawNavigationValidation description=[0-1] Enables/disabled debug draw navigation validation
ai_MNMDebugDrawNavigationWorldMonitor description=Enables displaying bounding boxes for world changes.
Usage: ai_MNMDebugDrawNavigationWorldMonitor [0/1]
Default is 0 (off)
0 - off
1 - on

ai_MNMDebugDrawOffMeshNavigation description=[0-1] Display off mesh navigation infos.
ai_MNMDebugDrawPlanet description=Displays the planet navigation debug information. Values can be added.
Usage: ai_MNMDebugDrawPlanet [value]
Default is 0 (off)
0 - off
1 - terrain patch border
2 - terrain patch AABB and transform location
4 - terrain patch ID description
8 - planet cube representation
16 - planet heat map
32 - planet tiles

ai_MNMDebugFilterVolumes description=[0-1] Enable filter debug draw for navigation volumes. Use 'ai_FilterCIGAIDebugDrawDistance' to specify search distance.
ai_MNMDebugLocatorName description=

ai_MNMEnableDebuggingFeatures description=[0-1] Enable debugging AI Navigation features like generation / pathfinding
ai_MNMEnableIslandGroupProcessing description=Enable processing navigation islands per tile groups.
Default is 1.
0 - off - no island grouping
1 - grouping only for planets

ai_MNMEnableRuntimeRegeneration description=[0-1] Enables/disabled the runtime regeneration of the navigation mesh. Default is 1 (on)
ai_MNMIslandConnectionsSystemProfileMemory description=Enables/Disables the memory profile for the island connections system.
ai_MNMIslandWayValidation description=Toggle extra validation on the island way pathing.
ai_MNMPriorityMapUpdateTimeInterval description=Time that needs to pass (in seconds) between multiple updates of the MNM Priority Map.
ai_MinDistanceToCustomPath description=Minimum distance a character needs to be at to directly use a designer designed path instead of first pathfind to the closest position on the path.
ai_MovementSystemDebugDraw description=Draw debug information to the screen regarding the movement system.
ai_MovementSystemDebugLogAllActor description=Log MovementSystem information for all actor. If this is off, only ai_FilterCIGAIDebugDrawbyAgentName actor is logged.
ai_MovementTeleportOnFailure description=Teleport AI characters when the move is failing to find a path.
ai_NavigationSystemAgentAdditionalHorizontalSizeOffset description=This offset is added to horizontal size of the voxel when calculating the size of the AABB for navigation anchors
ai_NavigationSystemAnchorProcessingMT description=Enables navigation anchor recalculation on separate threads.
Usage: ai_NavigationSystemAnchorProcessingMT [0/1]
Default is 1 (on)
0 - off
1 - on

ai_NavigationSystemDebugLogWorldChanges description=Enable debug logs of world changes
ai_NavigationSystemGenerationThreadJobs description=Number of tile generation jobs per thread per frame.
Usage: ai_NavigationSystemGenerationThreadJobs [1+]
Default is 8. The value is still capped to half the amount of worker thread in the job system (and minimum value is 1)

ai_NavigationSystemInternalSystemUpdateMT description=Enables navigation internal update to be multithreaded on the batch jobs.
Usage: ai_NavigationSystemInternalSystemUpdateMT [0/1]
Default is 1 (on)
0 - off
1 - on as batch

ai_NavigationSystemMT description=Enables navigation information updates on a separate thread.
Usage: ai_NavigationSystemMT [0/1]
Default is 1 (on)
0 - off
1 - on

ai_NavigationSystemMaxAnchorToProcessPerFrame description=Configures the amount of navigation anchors that can be processed each frame. 0 for allowing to process all the dirty anchors each frame.
ai_NavigationSystemTileGenerationSpatialPrioritySolver description=[0-1] Toggle the use of the spatial priority solver for the tile generation tasks.
ai_NavigationSystemTileGenerationSpatialPrioritySolverDebug description=[0-1] Toggle the debug mode of the spatial priority solver for the tile generation tasks.
ai_NavigationSystemTileGenerationSpatialPrioritySolver_MaxAge description=Priority solver params : Maximum age to consider when calculating the proximity priority
ai_NavigationSystemTileGenerationSpatialPrioritySolver_MaxAgePriority description=Priority solver params : Maximum value value assigned to the age priority
ai_NavigationSystemTileGenerationSpatialPrioritySolver_MaxProximityDistance description=Priority solver params : Maximum distance to consider when calculating the proximity priority
ai_NavigationSystemTileGenerationSpatialPrioritySolver_MaxProximityPriority description=Priority solver params : Maximum value value assigned to the proximity priority
ai_NavigationSystemTileGenerationSpatialPrioritySolver_SortSize description=Priority solver params : Maximum amount of tasks to be sorted per update
ai_NavigationSystemTileGenerationSpatialPrioritySolver_UpdateTime description=Priority solver params : Minimum time between sorting updates
ai_NavigationSystemUpdateWhileEditorBackground description=[0-1] Enable/Disable editor background update of the navigation meshes
ai_NavigationSystem_DebugPlanetPatchCreationEvents description=[0-1] Debug log sending and receiving planet patch creation events
ai_NavigationSystem_DebugVolumesPerZone description=[0-1] Debug draw navigation volumes per zone
ai_NavigationSystem_DisablePlanetMonitor description=[0-1] Enable/Disable planet monitor for navigation regeneration
ai_NavigationSystem_DisableWorldMonitor description=[0-1] Enable/Disable world monitor for navigation regeneration
ai_OffmeshOperationsTimeLimit description=Time limit for processing offmesh operations per update, a value of 0 means no limit.
ai_PathFinderAdjacentTriangleNormalDifference description=Max difference angle (in degrees) between adjacent triangle normals.A new point will be added to path on edge between adjacent triangles if the difference is bigger.
ai_PathFinderAutoPathForceStraightStart description=>0 will for a straight raycast before actually starting pathfinding, which will result in the start of the path beign straight for as long as possible
ai_PathFinderDebug description=[0-1] Enable/Disable debug draw statistics on pathfinder load
ai_PathFinderDebugDrawErrors description=Toggle debug visualization for path request errors
ai_PathFinderDebugDrawRequests description=Toggle debug visualization for path request
ai_PathFinderDebugStatsLog description=Toggle debug stats log for the path requests
ai_PathFinderFunnelExtrusionFromCorner description=Max extrusion length (in meters) from corner.
ai_PathFinderMultiAnchorUpdate description=Toggle the multi anchor pathfinder update
ai_PathFinderQuota description=Set path finding frame time quota in seconds (Set to 0 for no limit)
ai_PathfinderAlwaysAllowMultiToOneSearches description=If set to 1 all path requests between multi origins and one destination or vice versa are allowed automatically if the distance criteria is respected)
In other words, the checks skip the remaining options if level is greater than 1
Usage: ai_PathfinderAlwaysAllowMultiToOneSearches 0 or 1 

ai_PathfinderAutoPathCostFor180DegTurn description=The cost of a 180 deg turn (Influence how likely we will have turns in the autopath)
ai_PathfinderAvoidanceCostForGroupMates description=Cost used in the heuristic calculation for the avoidance of the group mates's positions.
ai_PathfinderBeautifyPath description=Toggles AI optimisation of the generated path.
Usage: ai_PathfinderBeautifyPath [0/1]
Default is 1 (on). Optimisation is on by default. Set to 0 to
disable path optimisation (AI uses non-optimised path).
ai_PathfinderConcurrentRequests description=Defines the amount of concurrent pathfinder requests that can be served at the same time.
ai_PathfinderConcurrentRequestsMultipath description=Defines the amount of concurrent pathfinder requests that can be served at the same time for multipath requests.
ai_PathfinderDangerCostForAttentionTarget description=Cost used in the heuristic calculation for the danger created by the attention target position.
ai_PathfinderDangerCostForExplosives description=Cost used in the heuristic calculation for the danger created by the position of explosive objects.
ai_PathfinderDebugFunnelPathConstruction description=Debug Funnel algorithm construction.
Usage: ai_PathfinderDebugFunnelPathConstruction [path_section_number]

ai_PathfinderExplosiveDangerMaxThreatDistance description=Range used to decide if evaluate an explosive danger as an actual threat.
ai_PathfinderExplosiveDangerRadius description=Range used to evaluate the explosive threats in the path calculation. Outside this range a location is considered safe.
ai_PathfinderGroupMatesAvoidanceRadius description=Range used to evaluate the group mates avoidance in the path calculation.
ai_PathfinderImmediatePathMaximumDistance description=The maximum distance to attempt an immediate path using navigation raycast
ai_PathfinderImmediatePathPatchMaximumDistance description=The maximum distance to attempt an immediate path patch using navigation raycast
ai_PathfinderMT description=Enable/Disable multi threading for the pathfinder.
ai_PathfinderMetricsUpdateTime description=Time in seconds between pathfinder metrics updates, disabled if its zero.
ai_PathfinderMultiSearchDistanceThreshold description=Vertical offset in meters that determines whether or not a path request involving multiple origins and destination can be allowed.
Usage: ai_PathfinderMultiSearchDistanceThreshold [meters] 

ai_PathfinderMultiSearchFilterLevel description=The filter level determines whether or not a path search between multiple starts and multiple destination can be allowed to run.
If denied the multi search will be replaced by a single search between one of the starts and one of the destinations
An exception to that is when dealing with multi to one or vice versa requests: if ai_PathfinderAlwaysAllowMultiToOneSearches is set to 1 then the multi search request is accepted automatically but only if the distance criteria is respected.
0 - No filtering : all multi to multi searches are allowed.
1 - Allow only if distance between starts and goals is within an acceptable threshold. Threshold is set  in ai_PathfinderMultiSearchDistanceThreshold
2 - Allow only if distance within an acceptable threshold and the starts and goals lie (approximately) on the same plane. Vertical offset set in ai_PathfinderMultiSearchVerticalOffsetDelta
3 - Allow only if distance and vertical offsets are withing thresholds and if starts and goals are withing the same navigation mesh island.
Usage: ai_PathfinderMultiSearchFilterLevel [level]

ai_PathfinderMultiSearchVerticalOffsetDelta description=Distance in meters that decides whether or not a path request involving multiple origins and destination can be allowed.
Usage: ai_PathfinderMultiSearchVerticalOffsetDelta [meters] 

ai_PathfinderPathLenghtLimit description=Defines the max lenght a path can have. If the lenght is exceeded during reconstruction the operation fails the path search.

ai_PathfinderPositionInTrianglePredictionType description=Defines which type of prediction for the point inside each triangle used by the pathfinder heuristic to search for the path with minimal cost.
0 - Triangle center.
1 - Advanced prediction.

ai_PathfinderRetryAttempts description=Number of retry attempts
ai_PathfinderRetryTime description=Time between each retry attempts
ai_PathfinderStringPullingIterations description=Defines the number of iteration used for the string pulling operation to simplify the path
ai_PathfinderUseSpatialPrioritySolver description=Toggle the use of the spatial priority solver for pathfinder requests.
ai_PathfinderUseSpatialPrioritySolver_Debug description=Toggle the debug draw mode of the spatial priority solver for pathfinder requests.
ai_PersonalLogColors description=Enable colors for the personal logs
ai_PlanetNavigation_ProcessAddPatches description=Planet Navigation - maximum amount of new terrain patches to be processed per update.
ai_PlanetNavigation_ProcessDestroyPatches description=Planet Navigation - maximum amount of terrain patches to be destroyed per update.
ai_PlanetNavigation_ProcessRemovePatches description=Planet Navigation - maximum amount of terrain patches to be cleaned per update.
ai_PlanetNavigation_TimeUntilDestroyPatch description=Planet Navigation - Time in seconds until a removed patch will be destroyed from Navigation data.
ai_PostureManagerDebugDraw description=[0-1] Enables/Disables posture manager debug draw
ai_PostureManagerDebugDrawFilterType description=Defines the type of posture you want to visualize.[0] - All
[1] - Peek
[2] - Aim
[3] - Blind fire
ai_PostureManagerDebugDrawForStanceId description=Id of the stance we want to use to debug draw the postures offsets[0] - All
[1] - Stand
[2] - Crouch
[5] - CoverLow
[6] - CoverHigh

ai_PostureManagerDebugDrawRaycasts description=[0-1] Enables/Disables posture manager debug draw raycasts
ai_PostureManagerDebugDrawRaycastsTimeout description=How many seconds the rays for posture manager will persist.
ai_PriorityBeaconDebug description=Toggle debug mode for the priority beacon manager
ai_PriorityBeaconDebug_DebugEntities description=Toggle searching and adding beacons from debug entities with the name starting with 'DebugPriorityBeacon'
ai_PriorityBeaconDebug_DebugEntities_Duration description=Duration of the debug entity beacons
ai_PriorityBeaconDebug_DebugEntities_UpdateTime description=Update frequency of the debug entity beacons
ai_RayCasterQuota description=Amount of deferred rays allowed to be cast per frame.
ai_RayCasterQuotaCover description=Amount of deferred rays allowed to be cast per frame for cover.
ai_ReservationManagerDebugDraw description=Draw debug information on reserved entities or points.
1 draw entities, 2 draw points, 3 draw both.
ai_SDFTestTagName description=

ai_SpatialPrioritySolverDebug_Distance description=Maximum debug draw distance
ai_SpatialPrioritySolverDebug_Mode description=Debug mode:
0 - only sorted tasks
1 - all tasks

ai_SpatialPrioritySolverDebug_PriorityValues description=Toggle the debug draw of the priority values
ai_SubsumptionActivityDebug_ActivityVariableFilter description=Filter for Activity Variables to be displayed in Activity Debug

ai_SubsumptionActivityDebug_ColWidth description=Override Column width for Subsumption On Screen Activity Debug
ai_SubsumptionActivityDebug_FontSize description=Font size for on screen Subsumption Activity Debug
ai_SubsumptionActivityDebug_LineSizeScale description=Line size scale (applied to Font Size) for on screen Subsumption Activity Debug
ai_SubsumptionActivityDebug_X description=Initial X position for Subsumption On Screen Activity Debug
ai_SubsumptionActivityDebug_Y description=Initial Y position for Subsumption On Screen Activity Debug
ai_SubsumptionAssignmentDebugDraw description=Enable subsumption assignment debug draw.
ai_SubsumptionDebugDraw description=This is the main variable to enable/disable Subsumption debug draw information for the characters.1 = enabled the default subsumption debug draw on screen for the specified character in ai_FilterCIGAIDebugDrawbyAgentName.
2 = enable the draw of a summary of the following information 'Activity > (Primary|Secondary)' on top of the characters.
3 = enable the logging of subsumption information (used mostly for release builds)
4 = 3D On screen activity debug draw 
5 = 3D On screen debug draw with framed Background  
6 = 3D On screen debug draw with the whole activity tree

ai_SubsumptionDebugDrawAttributes description=Enables/disables the display of the attributes on the entities running subsumption. It requires ai_SubsumptionDebugDraw to be enabled.
ai_SubsumptionDebugDrawEventDispatcher description=Visualize on screen the information related to the Event Dispatcher.
ai_SubsumptionDebugDrawMemoryUsage description=Shows debug information about Subsumption memory usage on screen.
ai_SubsumptionDebugDrawMissionName description=If this is set, draw debug information about the subsumption mission of the given name (if it is running).
Usage: ai_SubsumptionDebugDrawMissionName name
Default is none

ai_SubsumptionDebugDrawRange description=Set range for drawing current (sub-) activity and mastergraph states
ai_SubsumptionDebugDrawScale description=Scaling multiplier for subsumption on screen debug text - must be set on server.
ai_SubsumptionDebugDrawSuspendedActivities description=Visualize on screen the list of the blacklisted activity instances running on the entities.
ai_SubsumptionDisableBehaviors description=Enables/Disables behavior updating.
ai_SubsumptionDisableBehaviorsActivityException description=Names in the cvar are used to filter the disabling of the subsumption behaviors. Activity names should be separated by a comma.
For example: 'ATC_Controller, PU_Civilian'
ai_SubsumptionDisableMastergraph description=Enables / Disables mastergraph.
ai_SubsumptionDisableMissions description=Enables/Disables mission starting and updating.
ai_SubsumptionDisableSuspension description=Enables/Disables the suspention of subsumption updates.
ai_SubsumptionEnableDebugLogToConsole description=Enables/Disables outputting subsumption personal logs to the console/log files.
ai_SubsumptionEnableDebugNodes description=Enables/Disables the execution of subsumption debug nodes.
ai_SubsumptionFindFailureDelayTime description=Delay time when a find task fails before outputting Fail.
ai_SubsumptionHighPriorityBehaviors description=Names in the cvar are used to filter the disabling of the subsumption behaviors. Activity names should be separated by a comma.
For example: 'ATC_Controller, PU_Civilian'
ai_SubsumptionLimitUpdateToFilteredAgent description=If set to 1 only the agent specified in ai_FilterCIGAIDebugDrawbyAgentName will run Subsumption logic
ai_SubsumptionMissionLogDebugDrawFlags description=Flags to specify which messages should be pushed into the subsumption personal log for missions:
t - tasks success and failure status
f - function messages
r - function variables
e - errors and warnings
v - events received
p - personal messages
Default is tfrevp
ai_SubsumptionNPCActivityLogToFile description=If this is set to the name of an NPC entity, the NPC activity will be logged to a file
Usage: ai_SubsumptionNPCActivityLogToFile name
Default is none

ai_SubsumptionPersonalLogAddEntityIdToFilename description=If this is set, the personal log filename for mission logs will have the entity id of the mission entity appended: Logs/Subsumption/YY MM DD [HH MM SS][Server_InstanceNumber]/MissionName_EntityId.log.
Usage: ai_SubsumptionPersonalLogAddEntityIdToFilename 0/1
Default is 1

ai_SubsumptionPersonalLogDebugDrawFlags description=Flags to specify which messages should be pushed into the subsumption personal log:
a - activity changes
s - subactivity changes
c - secondary subactivity changes
t - tasks success and failure status
p - personal messages
f - function messages
e - errors and warnings
v - events received
o - possible function changes
l - relative probability function changes
r - function variables
m - mastergraph changes
Default is asctpfem
ai_SubsumptionPersonalLogMaxLines description=Sets the max number of debug lines stored in the personal log for activities and missions.
Usage: ai_SubsumptionPersonalLogMaxLines number
Default is 100

ai_SubsumptionPersonalLogToFile description=If this is set, the personal log will logged to a file: Logs/Subsumption/YY MM DD [HH MM SS][Server_InstanceNumber]/MissionName.log.
Usage: ai_SubsumptionPersonalLogToFile 0/1
Default is 1

ai_SubsumptionPersonalLogWithTime description=If this is set, the personal log will include the current time for each logged line.
Usage: ai_SubsumptionPersonalLogWithTime 0/1
Default is 1

ai_SubsumptionRandomSeed description=The value to use to see the subsumption manager random number generator, if set to 0 a random seed will be used.
ai_SubsumptionSerializationActivity description=Toggle for the subsumption network serialization of the current activity
ai_SubsumptionSerializationDebugDraw description=Toggle for the subsumption network serialization debug draw mode.
ai_SubsumptionSerializationMastergraphState description=Toggle for the subsumption network serialization of the current mastergraph state
ai_SubsumptionSerializationSubActivity description=Toggle for the subsumption network serialization of the current subactivity
ai_SubsumptionSuspendFailingActivities description=When enabled, allows Subsumption to move the failing activity instances into a blacklist that can be visualized. This allows the system to avoid activities to fail continuosly causing performance issues.
ai_SubsumptionUseOnlyLocalFiles description=This variable controls how subsumption run-time code loads the files. If set to 0, the regular engine priority is used.
Any other value will make sure subsumption won't load the files in the pak.

ai_SubsumptionVisualizerDisplayObjectEntityIds description=Sets whether entity ids should be displayed alongside entity names in the visualizer for an Object variable.
Usage: ai_SubsumptionVisualizerDisplayObjectEntityIds 0/1
Default is 1

ai_SubsumptionVisualizerMaxObjectsDisplayed description=Sets the max number of entity names displayed in the visualizer for an Object variable.
Usage: ai_SubsumptionVisualizerMaxObjectsDisplayed number
Default is 5

ai_TPSMetricsUpdateTime description=Time in seconds between TPS metrics updates, disabled if its zero.
ai_TPSPredictionTimeHorizonForReferencePointPosition description=Time to predict where the reference object will be in time to then consider its position for any validation
ai_TPSUpdateHighPrioritySlots description=Defines the amount of slots reserved for high priority requests. The number is capped to max the half of the pool size.
ai_TPSUpdatePoolSize description=The maximum number of jobs to be created to execute Tactical Point queries in parallel
ai_TPSUpdateTime description=Maximum allowed update time for each Tactical Point query being executed on worker threads
ai_TTSUpdatePoolSize description=The maximum number of jobs to be created to execute Tactical Target queries in parallel
ai_TTSUpdateTime description=Maximum allowed update time for each Tactical Target query being executed on worker threads
ai_TacticalQueryUseSpatialPrioritySolver description=Toggle the use of the spatial priority solver for tactical query requests.
ai_TacticalQueryUseSpatialPrioritySolver_Debug description=Toggle the debug draw mode of the spatial priority solver for tactical query requests.
ai_TerrainSamplerTagName description=

ai_aimedAtParams.startAimedAtDelay description=Number of seconds needed to aim at target before target is notified
ai_aimedAtParams.stopAimedAtDelay description=Number of seconds needed to aim away from target before target is notified
ai_audioMapUsesAIZoneObjects description=If set to 1 the AudioMap will be using the more efficient QueryObjects version when collecting the candidate (AI) entities to receive audio events
ai_audioVisualStimuliIntensityParams.ignoreAudioIntensity description=Ignore visual intensity
ai_audioVisualStimuliIntensityParams.ignoreVisualIntensity description=Ignore visual intensity
ai_buddy.debugDraw description=Debug draw for Buddy AI ( 0 / 1 ).
ai_buddy.movementDistanceOnLeaderForFollowRequest description=Minimum movement distance from leader before starting to follow him after a stop.
ai_buddy.sideAngleThreshold description=Threshold angle used when changing sides.
ai_buddy.sideOffsetAngle description=Angle for the side offset position ( 0 - 90 ).
ai_buddy.sideOffsetMagnitude description=Distance from leader to follower position.
ai_communication.DebugContextualResponse description=Used for debugging contextual response system.
0 - Off
1 - On screen debug draw
2 - Output query results to log
3 - Continuously sends a concept to the player

ai_communication.DebugDrawCommunication description=Displays communication debug information.
Usage: ai_communication.DebugDrawCommunication [0/1/2]
 0 - disabled. (default).
 1 - draw playing and queued comms.
 2 - draw debug history for each entity.
ai_communication.DebugDrawCommunicationHistoryDepth description=Tweaks how many historical entries are displayed per entity.
Usage: ai_communication.DebugDrawCommunicationHistoryDepth [depth]
ai_communication.LogVerbosity description=Log verbosity for communications (0 = Off, 1 = Played lines, 2 = Everything)
ai_communication.RecordStats description=Turns on/off recording of communication stats to a log.
ai_coverMaxDistanceFromAttentionTargetToUsePrediction description=Maximum distance of target entity from attention target perceived position in order to use movement prediction.

ai_debugDrawComp.enable description=Enable debug drawing through AIDebugDrawComponent

ai_debugDrawComp.flightPath description=Enable debug drawing of Ship NavPath.
ai_debugDrawComp.movementTrail description=Enable debug drawing of NPC Movement Trail for selected NPC (ai_FilterCIGAIDebugDrawbyAgentName)
ai_debugDrawComp.shipTrails description=Enable debug drawing of Ship Trails
1 - Simple trails
2 - Ghost vehicle
3 - Both
ai_debugDrawComp.shipTrailsTime description=Time to display Ship Trails.
ai_debugDrawSkills description=Enable debug drawing of AI Skills.
ai_grenade.debugDrawPrediction description=Calculate ideal throw velocity from animation
ai_grenade.underhandMaxAngleDegrees description=Max vertical angle to use for underhand grenade throw (tend to look silly if we allow too much vertical on short throws)
ai_grenade.underhandMaxDist description=Max distance to use underhand grenade throw before switching to overhand
ai_hearingParams.audioPropagation.enableSoundProofingChecks description=If set to 1 the checks for sound proofing are enabled. Any attenuation of the audio amplitude caused by closed doors along the path are taken into consideration.
This cvar is only relevant if ai_hearingParams.audioPropagation.enabled is set
ai_hearingParams.audioPropagation.enableZeroPressureChecks description=If set to 1 audio events can only be propagated to the NPC if the audio path does not traverse any zero-pressure environment.
This cvar is only relevant if ai_hearingParams.audioPropagation.enabled is set
ai_hearingParams.audioPropagation.enabled description=If set to 1 it enables the AudioPropagation checks for all NPCs.
Whether or not any entity is able to perceive an audio stimuli is only related to range and its own setup of perception curves.
ai_hearingParams.distanceEffectForBulletRain description=Distance to bullet that will affect bullet rain
ai_hearingParams.numBulletsForBulletRainEffect description=Number of bullets that trigger bullet rain effect
ai_hearingParams.timeEffectForBulletRain description=How long the bullet will keep the effect
ai_miniMap.enable description=Show mini map
ai_miniMap.scale description=Scale of the mini-map
ai_miniMap.size description=Distance from center of the mini map to one of the side
ai_miniMap.useClientOrientation description=Mini map should rotate based of client orientation
ai_navObstacles.debug description=Draws a sphere around each of the virtual obstacles attached to a Navigation Obstacle:
0 - Disabled
1 - Draws all existing virtual obstacles
2 - Draws only virtual obstacles that are a Sphere area shape type
3 - Draws only virtual obstacles that are generated from a Box area shape type

ai_navigation.pathFollower.timeToPerformStopMovement description=
ai_pathUseNavigationAnchors description=Enable active path to use navigation anchors for path regeneration.
ai_pathingComponentSerialization description=Toggle the Pathing component serialization.
ai_perception.bullet_hitSoundRadiusMultiplier description=Multiplier for bullet hit sound radius
ai_perception.debugDraw description=Enable debug draw for perception component
ai_perception.debugdrawAimedAt description=Draw the aimed at status of NPCs
ai_perception.debugdrawCharacterPerceptionAttentionTarget description=Draws selected attention targets
ai_perception.debugdrawCharacterPerceptionAudio description=Draws Audio events
ai_perception.debugdrawCharacterPerceptionLastSeenPositon description=Draws visibility status
ai_perception.debugdrawCharacterPerceptionName description=Display only this character perception info
ai_perception.debugdrawCharacterPerceptionRadar description=Draws Radar contacts
ai_perception.debugdrawCharacterPerceptionTarget description=Display the perception of this target
ai_perception.debugdrawInvestigation description=Draw covers to check during investigation
ai_perception.drawGroupMembers description=Draws the group membership of NPCs
ai_perception.drawGroupPerceptionUpdateDecayTimer description=Decay timer for drawing group perception updates
ai_perception.drawGroupPerceptionUpdates description=Draws how the perception updates are being pushed between group members. Blue = group member to group entity, Green = group entity to group members
ai_perception.explosion_soundRadiusMultiplier description=Multiplier for explosion sound radius
ai_perception.grenade_throwCollisionSoundRadius description=Radius for grenade landing sound
ai_perception.ignoreAll description=If set to 1 then the perception notification for all entities are ignored
ai_perception.ignoreAudioPerception description=If set to 1 then the audio perception notification are ignored
ai_perception.ignorePlayer description=If set to 1 then the perception notification for players are ignored
ai_perception.ignoreVisualPerception description=If set to 1 then the visual perception notification are ignored
ai_perception.landed_baseRadius description=Base radius for the AI sound generated when player lands
ai_perception.landed_speedMultiplier description=Multiplier applied to fall speed which is added on to the radius for the AI sound generated when player lands
ai_perception.logGroupSubsumptionTaskWarnings description=Enable the logging of warnings for the group subsumption tasks.
ai_perception.movement_crouchMovingMultiplier description=Multiplier for crouched movement speed effect on footstep sound radius
ai_perception.movement_crouchRadiusDefault description=Default value for crouching footstep sound radius multiplier (overridden by surface type)
ai_perception.movement_ledgeMovementSoundMultiplier description=Multiplier for ledge movement effect on footstep sound radius
ai_perception.movement_movingSurfaceDefault description=Default value for movement speed effect on footstep radius (overridden by surface type)
ai_perception.movement_standingMovingMultiplier description=Multiplier for standing movement speed effect on footstep sound radius
ai_perception.movement_standingRadiusDefault description=Default value for standing footstep sound radius (overridden by surface type)
ai_perception.movement_useSurfaceType description=Toggle if surface type should be used to get the base radius instead of cvars
ai_perception.thresholdOnSerializedDataSize description=Only log the SerializedData size is its length is greater than this value
ai_perception.throwable_soundRadiusMultiplier description=Multiplier for object being thrown hitting the ground sound radius
ai_perception.weapon_firedSoundRadiusMultiplier description=Multiplier for weapon fired sound radius
ai_specialAction.debugDodge description=Debug draw AI special action dodge
ai_specialAction.debugMeleeAttackLimitations description=Debug draw AI melee attack limitations
ai_specialAction.dodgeAimingAtHeadTime description=Aiming time from target towards head to trigger a dodge
ai_specialAction.dodgeAimingTime description=Aiming time from target to trigger a dodge
ai_target.debugDraw description=Draw AI attention Targets.
ai_vision.maxDistanceForSecondaryVisibilityChecks description=Maximum distance for checking visibility on observable secondary positions
aim_altNormalization.enable description=Enables/disables alternative input code
aim_altNormalization.hud_ctrl_Coeff_Unified description=Analog controller rotation scale
aim_altNormalization.hud_ctrl_Curve_Unified description=Analog controller rotation curve
al_default_power description=if airlocks without real power connections are powered(1) or not(0)
al_log_debug description=log airlock debug: enabled(1) or disabled(0)
ann_debugAnnouncer description=If 1, enable announcer debugging.
auto_test_done description=set to 1 when the test is over
autoconnect description=Start a client, automatically load the frontend, and once the frontend has fully loaded connect to a server (with backend services connected).
autoconnect_home_location description=Overrides the player's home location to the one with specified name, for use with autoconnect. This is equivalent to picking a "primary residence" in the frontend. Note that using this requires bootstrap/services (it won't make any difference in offline mode).
autotest_enabled description=1 = enabled autotesting, 2 = enabled autotesting with no output results written.
autotest_quit_when_done description=quit the game when tests are done
autotest_state_setup description=setup string for autotesting
autotest_verbose description=output detailed logging whilst running feature tests
backend.metrics.statsd.debug description=Debug logging enabled/disabled
backend.metrics.statsd.host.namespace description=Namespace for localhost
backend.metrics.statsd.ip description=Address/name of the endpoint the StatsD client should send to
backend.metrics.statsd.port description=Port the StatsD client should send to
ban_timeout description=Ban timeout in minutes
br_breakmaxworldsize description=The maximum value used for breakage world positions
br_breakworldoffsetx description=Break world origin
br_breakworldoffsety description=Break world origin
c_shakeMult description=
ca_AttachmentCullingRation description=ration between size of attachment and distance to camera
ca_AttachmentCullingRationMP description=ration between size of attachment and distance to camera for MP
ca_CharEditModel description=
ca_ClothAngularTeleportThreshold description=If the cloth entity has rotated more than this value between updates consider it a teleport
ca_ClothLinearTeleportThreshold description=If the cloth entity has moved more than this value between updates consider it a teleport
ca_ClothSimMaxLOD description=if the animation LOD of the instance is larger than this, the cloth sim is disabled
ca_ClothSimPruneUnusedSimTris description=if set to 1, will remove unused triangles from the sim topologies during load
ca_DebugDrawClothSimulation description=debug draw cloth sim. bitwise or of values :
TOPOLOGY = 1
BEND CONSTRAINTS = 2
LONG RANGE ATTACHMENTS = 4
TETRAHEDRA = 8
EXTERNAL_COLLISIONS = 16
SELF_COLLISIONS = 32
COLLISION_PARTICLES = 64
RENDER_BOUNDS = 128
RENDER_VELOCITIES = 256
COLLISION_SHAPRES = 512
EXTRUDED_CAGE = 1024
INVALID_VERTICES = 2048
CAGE_TETS = 4096
BLENDED_POSITION_AND_MASK= 8192

ca_DebugMessageCPUSkinningActive description=Prints a message on screen if a CPU skinned character is rendered
ca_DebugMessageDynamicProtos description=Prints a message on screen if a dynamic CPU Skinned Protos is rendered
ca_DrawCC description=if this is 0, will not draw the CC characters
ca_DrawCGA description=if this is 0, will not draw the CGA characters
ca_DrawCHR description=if this is 0, will not draw the CHR characters
ca_EnableClothSimulation description=if set to 1, will enable per-vertex cloth simulation
ca_EyeStabilization description=1 removes the roll out the the view matrix
ca_FilterJoints description=
ca_FootPinning_Enabled description=If this is set to 1, the game will be able to request foot pinning
ca_ForceAnimationProcessing description=Always process character animations, even if they have no update flags set or no playing animations.
ca_ForceUpdateSkeletons description=If positive, always update all skeletons, even if not visible. If negative, ignore force update requests.
ca_GroundAlignCreature_DebugDraw description=Creature GroundAlign - Debug draw flags, use 127 to draw everything
ca_GroundAlignCreature_UseGroundClearance description=Creature GroundAlign - Enables the use of ground clearance joints
ca_GroundAlignCreature_UseSecondaryJoints description=Creature GroundAlign - Enables the use of secondary joints
ca_GroundAlign_AABBExtend description=GroundAlign - the minimum XY size of the BBox around the player
ca_GroundAlign_AlignWithPlane description=GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_DebugDraw description=Flags for enable GroundAlign debug drawing.
1 - Draw basic info, blend values, and gameplay ActorEntity's smooth ground disc
2 - Draw groundtrace rays, and gameplay ActorEntity's smooth ground normal
4 - Draw step traces
8 - Draw foot trace hits
128 - Draw simplified raytest environment

ca_GroundAlign_HeadStabilizationOnStairs description=Ground Align - Hips offset is reduced by this factor to keep head more stable in 1P while on special stairs collision type.
ca_GroundAlign_HipsDownFast description=0.10 - GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_HipsDownFast1P description=0.10 - GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_HipsDownSlow description=0.10 - GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_HipsDownSlow1P description=0.10 - GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_HipsOffset description=GroundAlign - only for CharEdit
ca_GroundAlign_HipsSpeedOffset description=GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_HipsUpFast description=GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_HipsUpFast1P description=GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_HipsUpSlow description=GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_HipsUpSlow1P description=GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_Iterations description=GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_LLegOffsetX description=GroundAlign - only for CharEdit
ca_GroundAlign_LLegOffsetY description=GroundAlign - only for CharEdit
ca_GroundAlign_LegsDownFast description=0.05 - GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_LegsDownSlow description=0.05 - GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_LegsUpFast description=GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_LegsUpSlow description=GroundAlign - forces targeting weight to always be one.
ca_GroundAlign_LogValues description=GroundAlign - only for CharEdit
ca_GroundAlign_RLegOffsetX description=GroundAlign - only for CharEdit
ca_GroundAlign_RLegOffsetY description=GroundAlign - only for CharEdit
ca_GroundAlign_Scale description=GroundAlign - only for CharEdit
ca_GroundAlign_Seconds description=GroundAlign - forces targeting weight to always be one.
ca_HeadLowpassOverrideEnable description=Enable or disable lowpass override
ca_HeadLowpassOverrideX description=Force lowpass X offset
ca_HeadLowpassOverrideY description=Force lowpass Y offset
ca_HeadLowpassOverrideZ description=Force lowpass Z offset
ca_HeadSnapStabilizationX description=the left/right distance to snap rather than smooth headcam position
ca_HeadSnapStabilizationY description=the forward/backward distance to snap rather than smooth headcam position
ca_HeadSnapStabilizationZ description=the up/down distance to snap rather than smooth headcam position
ca_HeadStabilization description=removes disruptive translations from the head and headcam
ca_LogModelStatistics description=if > 50, log memory used by instances and models. The cvar sets the frames that pass between updates
ca_MaelstromShareMeshAggregate description=If true, Maelstrom entities will share MeshAggregates and combine draw calls across entities
with the drawback being that they have to update the transforms every frame when detached.
ca_MaelstromShareMeshAggregateRadiusSqrd description=The squared distance at which we decide to break up shared MeshAggregates.
Sharing MeshAggregates increases performance but grows entity AABBs a lot.
ca_ParametricPoolSize description=Size of the parametric pool (Note: this uses virtual memory)
ca_ReloadAllCHRPARAMS description=reload all CHRPARAMS
ca_StoreAnimNamesOnLoad description=stores the names of animations during load to allow name lookup for debugging
ca_StreamCHR description=Set to enable CHR streaming
ca_UnloadAnimationCAF description=unloading streamed CAFs as soon as they are not used
ca_UnloadAnimationDBA description=if 1, then unload DBA if not used
ca_UseIMG_AIM description=if 1, then we use the IMG file. In development mode it is suppose to be off
ca_UseIMG_CAF description=if 1, then we use the IMG file. In development mode it is suppose to be off
ca_UseJointMasking description=Use Joint Masking to speed up motion decoding.
ca_UsePhysics description=the physics is not applied (effectively, no IK)
ca_UseRecoil description=If this is set to 1, then we enable procedural recoil
ca_Validate description=if set to 1, will run validation on animation data
ca_checkSanity_0x900 description=additional sanity checks for the controller classes.
ca_computeSkinning description=Enables compute skinning
ca_dnaDeformerDebug description=Visualizes DNA deformers on screen. One bit per deformer, e.g. BIT(0)=Standard, BIT(1)=OriginalSkin, BIT(2)=Protos. Use ComputeSkinning ImGUI Menu for easy usage.
ca_extendPhysicalSkeleton description=Enable physical extension of skeleton physics when attaching a skin with physics in it's chunk data
ca_jointNameTextSize description=Size of text for rendering joint names with the Skeleton -> Joint Names Display Option
ca_logAnimHeadLowpass description=log lowpass value from animations
ca_logSkelExtensions description=if 1, we write all performed skel extension into the log
ca_mouthAdjust1PX description=Mouth adjust X position in first person
ca_mouthAdjust1PY description=Mouth adjust Y position in first person
ca_mouthAdjust1PZ description=Mouth adjust Z position in first person
ca_optimizeSpaceshipPhysicsPartAnimPosDelta description=Enable optimization that doesn't recalculate properties of ship physical entity in case of negligible part position update from animation update
ca_optimizeSpaceshipPhysicsPartAnimRotDelta description=Enable optimization that doesn't recalculate properties of ship physical entity in case of negligible rotation on a part (in degrees) from animation update
ca_physicsImpactOnHeadCam description=Percentage value how much of the physical impulse you apply to the head camera
ca_physicsImpactScale description=Percentage value how much of the physical impulse you apply to the skeleton
ca_physicsImpactWeaponWeight description=determines how strong the weapons are linked to the physical motions of the headcam
ca_physicsProcessImpact description=Process physics impact pulses.
ca_setProcHeadLowpass description=set an example lowpass value from code. will be overwritten if the LPF exists in animation
ca_syncAllAnims_Batched description=Enables Sync All animations batched
ca_tangentReconstructionMaxLod description=Maximum LOD for tangent reconstruction. This can be used to temporarily disable tangent reconstruction (Any negative number).
Keep in mind that changing this value at runtime to an higher LOD than initially, e.g. from 1 to 2, requires to precompute some data.
You can enforce that with e_StreamSkinPoolSize = 0, then change it back to the previous value.
ca_unloadTimeForUnusedDBAs description=seconds how long it takes to unload an unsed DBA.
ca_useAnimHeadLowpass description=use lowpass value from animations
ca_useFeetLockTargets description=If this is set to 1, then the feet locking will use the IK targets from the animation
ca_useFeetLocking description=If this is set to 1, then lock the feet to prevent sliding when additive animations are used. Setting to 1 will also disable full body aim poses
ca_useGroundAlignment description=activate GroundAlignment.
ca_useMouthAdjust1P description=Enable or disable mouth position adjust when in first person
ca_useSTCs description=if 1, we can change the DNA-Matrix in SWVertexAnimation
ca_useSpecialHandIK1P description=special hand IK for 1P to keep the original deformation of the wrists
ca_vaComplexVertexAnimationMaxLod description=Enables Complex Vertex Deformation techniques for GPU or CPU up to and including this LOD. Any negative number disables any deformations.
ca_vertexShaderDrivenWrapDeformer description=If turned on, wrap deformation will be applied in the vertex shader and not in a preprocess compute job. Only works in conjunction with ca_computeSkinning turned on. May not be supported for all wrap deformers.
ca_wrinkleMapDebug description=Select a wrinkle channel to maximise. All other channels will turn off.
ca_wrinkleMapExaggerate description=Debugging multiplier for the effect of all wrinkle maps
cameraviewmanager_popgroup description=Removes the camera group found in the top of the stack. Use with caution!!!
capture_async description=Faster frame-rate when capturing by not stalling the GPU. NOTE: This will miss the last few frames of recording.
capture_file_format description=Specifies file format of captured files (jpg, tga, tif, exr, png).
capture_file_name description=If set, specifies the path and name to use for the captured frame
capture_file_prefix description=If set, specifies the prefix to use for the captured frame instead of the default 'Frame'.
capture_folder description=Specifies sub folder to write captured frames.
capture_frame_once description=Makes capture single frame only
capture_frames description=Enables capturing of frames. 0=off, 1=on
capture_image_scale description=Image size. [0-1] = scale value. >1 = actual pixels for image width
capture_imgui description=Determines if imgui should be part of frame capturing. 0=off, 1=on
capture_jpg_quality description=JPG image quality 0-100 (Default: 90)
capture_reset_temporal_effects description=Delays capture by 10 frames after resetting temporal effects. 0=off, 1=on
capture_use_scale description=Specifies that the image scale cvar should be used
cig_awards.hack_badge description=Adds the given BadgeId to the clients' local badge list. DOES NOT give the badge to the account. Although this utilizes the BadgeId as seen from HEAP the badge must be defined in cig::RSIBadge in code. This utilizes a hack to add the badge to the current session. Usage: Pass in a BadgeId (must be in cig::RSIBadge). Client Only.
cig_awards.ignoreSessionBadges description=When enabled will ignore badges acquired in this session, allowing the same badge tested multiple times without restarting the client.
cig_awards.log description=Enable/Disable logging of CCIGAwardService.
cig_awards.request_award description=Request an Award. Usage: <awardId> <playerId> | AwardId found in the AwardConfig record. playerId only required if called on DGS.
cig_bRetryCreateDatagramSocket description=If 1, retries to create UDP socket if previously failed.
cig_maxRetriesCreateDatagramSocketBeforeExit description=Number of retries to create UDP socket if previously failed (calls CryFatal if reaches max retries).
cig_peak_detection_enabled description=Enables automatic analyzing of peak frames once the framerate drops below a certain threshold.
cig_profile_auto_logging_capture_duration description=Number of Frames the auto capture is active when triggered.
cig_profile_auto_logging_enabled description=Enables auto captures of profiling information to disk whenever frame rate drops below a certain threshold.
cig_profile_auto_logging_enabled_during_level_load description=If auto captures are enabled it controls whether captures should be taken during times of level (un)loading.
cig_profile_auto_logging_enabled_frame_delay_after_level_load description=If auto captures during level (un)loading are disabled specifies the number of frames to delay re-activation of auto captures after level (un)load.
cig_profile_auto_logging_max_captures description=Maximum number of auto captures to take per session (to avoid filling up hard drive space).
cig_profile_auto_logging_output_path description=file path to write the auto capture to (expects single forward slashes as seperators)
cig_profile_auto_logging_slow_frame_threshold description=Frame rate threshold below which an auto capture is triggered.
cig_profile_auto_logging_slow_frame_tolerance description=Percentage of frames within slow frame window to exceed the slow frame threshold and still trigger an auto capture. (Range [0..1])
cig_profile_auto_logging_slow_frame_window description=Number of seconds frame rate is observed before triggering an auto capture.
cig_profile_etw_trace_enabled description=
cig_profile_filter_max_depth description=Maximum depth of nested markers to capture
cig_profile_filter_min_interval description=Minimum marker interval to capture (measured in milliseconds)
cig_profile_json_summary_output description=Enable/Disable JSON Logging
0: Logging is disabled
1: JSON file logging enabled.
cig_profile_json_summary_output_name description=Filename to write telemetry to. (should not end with .json)
cig_profile_log_path description=Path to write the combined profiling results to. (should not contain the file extension)
cig_profile_optick_file_output description=toggle optick file capture
cig_profile_optick_file_output_name description=toggle optick file capture
cig_profile_optick_server_port description=port that is listening for an incoming connection from the optick ui
cig_profile_sampling_rate description=Sets the Sampling Rate
cig_profile_startlogging description=Starts json and rad profiling at once. Arg 1 can specify filename else uses <cig_profile_log_path>. Optionally can specify time to profile for as the trailing arg.
cig_profile_stoplogging description=Stops json and rad profiling, writes the result into <cig_profile_log_path>
cl_AISystem description=Load and use the AI system on the client
cl_ETColorOverrideB description=Global color override (BLUE)
cl_ETColorOverrideEnable description=Global color override
cl_ETColorOverrideG description=Global color override (GREEN)
cl_ETColorOverrideR description=Global color override (RED)
cl_ETFontSizeMultiplier description=Global font size multiplier
cl_ETHideAIDebug description=Hide AI debug tags
cl_ETHideAll description=Hide all tags (overrides all other options)
cl_ETHideBehaviour description=Hide AI behavior tags
cl_ETHideFlowgraph description=Hide tags created by flowgraph
cl_ETHideReadability description=Hide AI readability tags
cl_ETLog description=Logging (0=off, 1=editor.log, 2=editor.log + AIlog.log)
cl_ETMaxDisplayDistance description=Max display distance
cl_ViewSystemDebug description=Sets Debug information of the ViewSystem.
cl_ads_sensitivity description=Set ADS mouse sensitivity multiplier. Expecting  0.1f to 2.0f
cl_allowFPSFreeLook description=IF 1, allow player to look away from weapon in FPS
cl_cameraEffectsDebug description=Debug camera effects: 1=stack, 2=details, 3=both
cl_camera_nearz description=Sets the default near z-range for the camera.
cl_camera_noise description=Adds hand-held like camera noise to the camera view. 
 The higher the value, the higher the noise.
 A value <= 0 disables it.
cl_camera_noise_freq description=Defines camera noise frequency for the camera view. 
 The higher the value, the higher the noise.
cl_comment description=Hide/Unhide comments in game-mode
cl_crouchToggle description=To make the crouch key work as a toggle
cl_fov description=field of view.
cl_fovCombat description=Combat field of view.
cl_fovSocial description=Social field of view.
cl_interactionPromptDisplayInputIcon description=Interaction Prompts 0: Hide key text in interaction prompts ; 1: Show key text in interaction prompts
cl_interactionToggle description=Interaction Mode 0: Non-Toggle Mode; 1: Toggle Mode; 2: Toggle Mode with tapping (new action to trigger)
cl_invertController description=Controller Look Up-Down invert
cl_invertMouse description=mouse invert?
cl_leanToggle description=To make the lean key work as a toggle
cl_multiTapTheshold description=The time threshold between consecutive button presses to be considered part of a double (or more) tap sequence
cl_prefer1PTrackviewCameras description=If set to 1 (Prefer Gameplay Camera), default trackview cameras will behave as optional, leaving the player in 1st or 3rd person perspective, depending on which mode it was.
If set to 2 (Prefer Cinematic Camera), optional cameras will behave as default, activating the trackview camera when available. 
Mandatory cameras still switch the view
cl_proneToggle description=To make the prone key work as a toggle
cl_sensitivity description=Set mouse sensitivity!
cl_sensitivityController description=Set controller sensitivity! Expecting 0.0f to 2.0f
cl_serveraddroverride description=Server address override for local Windows server setup, i.e. set to localhost/127.0.0.1 to connect to local server via the frontend UI
cl_serverportoverride description=Server port override for local Windows server setup, i.e. set to 64047 or 64090 to move between 2 local servers, servers will need -game_server_port 64047 / 64090 cvar setting
cl_sprintToggle description=To make the sprint key work as a toggle
cl_useCurrentUserNameAsDefault description=Use the current user name instead of the default profile's name
cl_visualLog description=Enables Visual Logging.
cl_visualLogFolder description=Specifies sub folder to write logs to.
cl_visualLogImageFormat description=Specifies file format of captured files (jpg, bmp).
cl_visualLogImageScale description=Image size. [0-1] = scale value. >1 = actual pixels for image width
cl_zoomToggle description=To make the zoom key work as a toggle
cl_zoom_sensitivity_multiplier description=Set ADS mouse sensitivity multiplier. Expecting  0.0f to 3.0f
cl_zoom_sensitivity_multiplier_enabled description=Enable ADS mouse sensitivity multiplier. Expecting  0 or 1
client.login.defaulthomelocation description=Set a home location, if you already have one it will be overriden
client.login.show.dialog description=Show the development login dialog (login creator). 0=don't show, 1=always show, 2=only show if loginData.json is missing
comms_cubemapModeFarPlane description=Sets the camera's far plane in comms calls when in cubemap backdrop mode.
comms_geometryType description=Quality of scene geometry rendering in comms calls
0: Render a cubemap backdrop and nearby entities.
1: Render the full scene.
comms_lightingType description=Quality of scene lighting in comms calls
0: Only apply indirect lighting from the scene.
1: Apply all lights in the scene.
comms_notifications_phase_change_minimum_delay description=Comms notifications triggered from mission phase changes are delayed by at least this many seconds
comms_p2p_webrtc_RTTHeight description=Height in pixels to render RTT. Restart streaming in order to change it at runtime.
comms_p2p_webrtc_RTTWidth description=Width in pixels to render RTT. Restart streaming in order to change it at runtime.
comms_p2p_webrtc_customLightRig_envLight description=Enable/Disable the environment light for the custom light rig. Restart streaming in order to change it at runtime.
comms_p2p_webrtc_customLightRig_faceLight description=Enable/Disable face light for the custom light rig. Restart streaming in order to change it at runtime.
comms_p2p_webrtc_debugPlane description=Enable/Disable debug preview window. Restart streaming in order to change it at runtime.
comms_p2p_webrtc_debugPlaneSize description=Scale between 0 (smallest) and 1 (largest)
comms_p2p_webrtc_debugPlaneX description=Between -1 (left side) and 1 (right side)
comms_p2p_webrtc_debugPlaneY description=Between -1 (bottom side) and 1 (top side)
comms_p2p_webrtc_geometryType description=Geometry type in comms calls. Restart streaming in order to change it at runtime.
0: Use a cubemap as fake background.
1: Renders full scene.
comms_p2p_webrtc_lightingType description=Quality of scene lighting in comms calls. Restart streaming in order to change it at runtime.
0: Only apply indirect lighting from the scene.
1: Apply all lights in the scene.
comms_p2p_webrtc_only description=Only use WebRTC streaming for player to player comms call.
comms_p2p_webrtc_renderType description=Render type for geometry rendering in comms calls. Restart streaming in order to change it at runtime.
0: Forward Rendering.
1: Tiled Forward Rendering.
2: Deferred Rendering.
comms_p2p_webrtc_sunEnable description=Enable/Disable sun rendering. Restart streaming in order to change it at runtime.
comms_renderType description=Quality of scene render in comms calls
0: Forward Rendering.
1: Tiled Forward Rendering.
2: Deferred Rendering.
comms_sunEnable description=Creates a projector light to mimic the sun in comms calls
con_autocompleteSubstring description=cvar autocomplete finds a substring anywhere in the name (eg. prosp finds MISC_prospector)
con_debug description=Log call stack on every GetCVar call
con_display_last_messages description=
con_line_buffer_size description=
con_showonload description=Show console on level loading
connect description=Start a client and connect to a server
contract_broker.apply_not_for_release_token description=Used to add or remove the NotForRelease token to a player to allow them to see NotForRelease contracts in mG. Use <player name> [r=remove]
contract_broker.contracts_updated_per_refresh description=Maximum number of missions to update on each mission availability refresh
contract_broker.create_contracts_with_failed_properties description=If any property fails to generate: 0 - don't create contract, 1 - create contract but hide in mobiGlas, 2 - create contract and show in mobiGlas
contract_broker.emit_not_for_release_contract_errors description=If set, emits cigDataErrors for contracts that are marked as NotForRelease
contract_broker.enable_generator_update description=Enables the contract generator Update
contract_broker.error_max_length description=Sets the maximum characters to truncate reported contract errors.
contract_broker.generator_contract_filter description=Name filter for limiting which contracts are generated (string matches the contract debug name)
contract_broker.generator_record_filter description=Name filter for limiting which generator records are used when generating contracts
contract_broker.ignore_prerequisites description=Flags for ignoring types of prerequisites for all missions
.-1 - all flags enabled
j - required journal entries
l - locality
m - required missions
o - once only
p - prison
r - reputation
c - completion tags

contract_broker.log_property_generation_errors description=If set, logs out property generation errors during contract generation
contract_broker.override_current_date description=Overrides the current date in game when looking for active contracts in the calendar as a string in ISO 8601 format (yyyy-mm-ddThh:mm:ss.sssZ)
contract_broker.query_contract_filter description=Filter Contracts by name or contract definition ID
Comma separated list.
-<filter> will exclude this contract
contract_broker.query_generator_record_filter description=Filter Contracts by a given generator record (Record name or GUID)
Comma separated list.
-<filter> will exclude this contract
contract_broker.refresh_time description=How often to refresh the available contract generator missions (in seconds)
contract_broker.seed description=Seed number for the contract generator random number generator, if zero the system time will be used as a seed
contract_broker.simulate_shipping_build description=Disables all debug override settings and enforces the Not For Release setting on contracts in a dev build
contract_broker.skip_not_for_release description=Fully skip creation of contracts not marked for release
contract_broker.strict_property_type_checks description=If set, any null value types in properties will cause property generation to fail
contract_broker.time_advance description=Advances time for the contract generator
contract_broker.time_scale description=Scale factor for the contract generator timer
contract_broker.use_online_mission_service description=Use the online mission service rather than the offline mission service implementation
contract_broker.use_service description=Use the contract broker service rather than the offline contract broker implementation
controller_full_turn_multiplier_x description=The multiplier applied when x rotation has been at full lock for the required time
controller_full_turn_multiplier_z description=The multiplier applied when x rotation has been at full lock for the required time
controller_multiplier_x description=Vertical linear sensitivity multiplier
controller_multiplier_z description=Horizontal linear sensitivity multiplier
controller_power_curve description=Analog controller input curve for both axes
conv_conversations_reload description=Reset the Conversation System and reload all conversations.
conv_debugConversations description=Enable/Disable the conversation system debug output.
conv_debugStickyFilter description=Enable/Disable the sticky filtering debug output.
conv_disableMovementFilter description=Disable the sticky filter movement and rotation effects.
conv_eyeContactOffset description=How far below NPC eyes the rectangle is centered.
conv_maxScreenEffectsDistance description=Distance at which DOF / FOV effect begins being applied
conv_maxScreenEffectsLookAt description=Look at angle at which DOF / FOV effect begins being applied
conv_minScreenEffectsDistance description=Distance at which max DOF / FOV is applied
conv_minScreenEffectsLookAt description=Look at angle which max DOF / FOV is applied
conv_play description=Plays a conversation on the client actor.
 Usage: conv_play [Conversation_Name]
 e.g. conv_play E1C01S02
conv_showSubtitlesDuringGameplay description=Turn on/off subtitle display during regular gameplay (using the Character Talk functionality).
conv_subtitleDisplayLengthScale description=Scale applied to the duration of subtitle display.
conv_subtitleDisplayMinimumTime description=Minimum duration of subtitle display.
cr_Logging description=Enable/disable cockpit response (ship computer) logging
[0: off, 1:enable logging, 2:verbose logging, 3:extra verbose mode]
ctrlr_OUTPUTDEBUGINFO description=Enable controller debugging.
cvDoVerboseWindowTitle description=
damage description=Take 1 damage to torso from the direction of the camera
change damage: add a positive number
change BodyPart: add <arml/armr/legl/legr/head/torso>
change direction: add <f/b/l/r/u/d/n>
debugGUI_enable description=Enable/Disable DebugGUI.
designer_warning_enabled description=designer warnings are enabled
designer_warning_level_resources description=Designer warnings about resource load during run-time
diff_event description=Diffusion Event Test
diff_rpc description=Diffusion RPC Test
diff_test description=Diffusion Test
disconnect description=Stop a game (or a client or a server)
dlg_allowUnlinked description=Allow unlinked audio (audio without any associated subtitle) to play.
dlg_enableComponentUpdate description=Allow DialogueComponents to regularly update.
dlg_enableSubtitles description=Enable/Disable the subtitles from the dialogue system.
dlg_maxSubtitleDistance description=Maximum distance at which the dialogue system will trigger a subtitle. Zero or negative values imply infinite distance.
dlg_showMissingSubtitleWarnings description=Show console warnings for dialogue that is played but has no subtitles.
dlm_check description=Test DistributedLockManager check.
Usage: dlm_check <sessionId>
dlm_lock description=Test DistributedLockManager lock.
Usage: dlm_lock <0 or sessionId(any number)> <holder> <key> [<key>...] 
dlm_release description=Test DistributedLockManager release.
Usage: dlm_release <sessionId> <holder> <key> [<key>...] 
dlm_test_session_leak description=Test DistributedLockManager session leak detection.
Usage: dlm_test_session_leak <sessionId>
door_allow_animated_player description=0 - disable animated player 1 - enable animated player
door_authority_state_grace_time description=allow local doors this amount of time before they must accept a new authoritative state
door_authority_state_time_debt description=If 1, states may locally try to catch up with authority based on time elapsed since the state change
door_default_power description=if doors without real power connections are powered(1) or not(0)
door_draw description=draw door info
door_draw_dist description=distance for drawing door debug
door_draw_name_filter description=name filter for drawing door debug
door_ignore_rn_power description=0 - door will listen to Resource Network 1 - door will ignore Resource Network when determining if it's powered
door_local_state_grace_time description=allow local doors new state this amount of time before they revert to authoritative state
door_log description=log out door information
door_max_transition_time description=the maximum time an animating door is allowed to be in opening or closing state before it is forced to opened/closed
door_proximity_sensor description=Debug draw proximity sensor areas, use door_proximity_draw_aproach to draw approaching actors0: off
1: Show basic info
2: show info actor approach directions

door_proximity_sensor.show_helpers description=If not 0, the debug info for door_proximity_sensor is drawn for 'helper' sensors instead. By default (0) only 'master' sensors are drawn.
door_use_update_flags description=if 1, doors will only keep updating after state change when they believe they have work to do
door_use_visportals description=door use visportals
draw_visArea_offset description=displays offset point(red sphere) for doors with enabled visarea connection
drink description=Refill thirst stat by 1000 or specified amount. [ActorName, ThirstAdjust]
dump_action_maps description=Prints all action map bindings to console
dump_maps description=Dumps currently scanned maps
dumpnt description=Dump ItemString table.
e.JumpTunnel.Debug.Curvature description=Debug draw jump tunnel curvature
e.JumpTunnel.Debug.Obstacles description=Debug draw jump tunnel obstacles
e.JumpTunnel.Debug.SplineOrientation description=Debug draw jump tunnel spline orientation
e.JumpTunnel.Debug.SurfaceTangents description=Debug draw jump tunnel surface tangents
e.JumpTunnel.Debug.Wireframe description=Debug draw jump tunnel wireframes
e.JumpTunnel.Physics.Enable description=Pass the rendering mesh of the jump tunnel to Physics
e.JumpTunnel.Shape.Mode description=0 = Original circular tube, 1 = SDF mode
e.JumpTunnel.Shape.Rebuild description=Rebuild jump tunnel
e.JumpTunnel.Shape.SDFMode.AspectRatio description=SDF Mode: Force tunnel width/height aspect ratio
e.JumpTunnel.Shape.SDFMode.ClearPath description=SDF Mode: Generate new spline that defines an unobstructed/clear path through the tunnel
e.JumpTunnel.Shape.SDFMode.ClearPath.Offset description=SDF Mode: Distance from obstacle from which the spline starts to curve around the obstacle defined as a ratio of the tunnel radius
e.JumpTunnel.Shape.SDFMode.Debug.CullInsideVerts description=SDF Mode: Cull vertices with a negative SDF
e.JumpTunnel.Shape.SDFMode.Debug.DisableObstacles description=SDF Mode: Disables obstacles
e.JumpTunnel.Shape.SDFMode.Debug.DistanceToTunnel description=SDF Mode: Debug distance and direction to tunnel of positions along the spline
e.JumpTunnel.Shape.SDFMode.Debug.DistanceToTunnel.Angle description=SDF Mode: Positions' angle of rotation from spline
e.JumpTunnel.Shape.SDFMode.Debug.DistanceToTunnel.Offset description=SDF Mode: Positions' offset from spline
e.JumpTunnel.Shape.SDFMode.Debug.DistanceToTunnel.Rotation description=SDF Mode: Number of positions' rotations along the spline
e.JumpTunnel.Shape.SDFMode.Debug.DistanceToTunnel.Samples description=SDF Mode: Number of positions along the spline
e.JumpTunnel.Shape.SDFMode.Debug.DistanceToTunnel.Segment description=SDF Mode: Restrict positions to specific tunnel segment (-1 for all segments)
e.JumpTunnel.Shape.SDFMode.Debug.DrawObstacleAxis description=SDF Mode: Draw obstacle axis
e.JumpTunnel.Shape.SDFMode.Debug.DrawTunnelAxis description=SDF Mode: Draw tunnel axis
e.JumpTunnel.Shape.SDFMode.Debug.DrawTunnelWireframe description=SDF Mode: Draw tunnel wireframe
e.JumpTunnel.Shape.SDFMode.Debug.PlugHoles description=SDF Mode: Generate & connect vertices to cover holes in the mesh
e.JumpTunnel.Shape.SDFMode.Debug.SegmentIdx description=SDF Mode: Generate a single tunnel segment for debug purposes (set to negative value to generate all of them)
e.JumpTunnel.Shape.SDFMode.DebugObstacle.CenterDirectionX description=SDF Mode: Debug Obstacle Mode: Direction from the spline to the center of the obstacle (in the X axis)
e.JumpTunnel.Shape.SDFMode.DebugObstacle.CenterDirectionY description=SDF Mode: Debug Obstacle Mode: Direction from the spline to the center of the obstacle (in the Y axis)
e.JumpTunnel.Shape.SDFMode.DebugObstacle.DistanceRatio description=SDF Mode: Debug Obstacle Mode: Distance from spline to obstacle as a percentage of tunnel radius. 0 = in the middle, 1 = at the tunnel edge
e.JumpTunnel.Shape.SDFMode.DebugObstacle.Enable description=SDF Mode: Enable debug obstacle mode
e.JumpTunnel.Shape.SDFMode.DebugObstacle.RadiusRatio description=SDF Mode: Debug Obstacle Mode: Radius of the obstacle as a percentage of tunnel radius
e.JumpTunnel.Shape.SDFMode.DebugObstacle.Smoothing description=SDF Mode: Debug Obstacle Mode: Smoothing factor that controls the curve between tunnel and obstacle
e.JumpTunnel.Shape.SDFMode.DebugObstacle.SplineIndex description=SDF Mode: Debug Obstacle Mode: Location of the debug obstacle on the spline
e.JumpTunnel.Shape.SDFMode.Iterations.Holes description=SDF Mode: Max number of steps to converge vertices towards the tunnel with obstacles SDF for hole filling
e.JumpTunnel.Shape.SDFMode.Iterations.Obstacles description=SDF Mode: Max number of steps to converge vertices towards the tunnel with obstacles SDF
e.JumpTunnel.Shape.SDFMode.Iterations.SampleDistance description=SDF Mode: Max number of iterations used to find to closest position in the tunnel surface
e.JumpTunnel.Shape.SDFMode.Iterations.Tunnel description=SDF Mode: Max number of steps to converge vertices towards the tunnel SDF
e.JumpTunnel.Shape.SDFMode.Radius description=SDF Mode: Force tunnel radius
e.JumpTunnel.Shape.SDFMode.RotationFollowsCurvature description=SDF Mode: Rotate tunnel slices according to tunnel curvature
e.JumpTunnel.Shape.SDFMode.RotationFollowsCurvature.Epsilon description=SDF Mode: If curvature at point below this value (epsilon), tunnel will ignore it for rotation purposes (i.e., keeps previous rotation)
e.JumpTunnel.Shape.SDFMode.RotationFollowsCurvature.Offset description=SDF Mode: Offset to apply on top of curvature rotation (0 = no extra rotation, 1 = 90 degrees extra rotation
e.JumpTunnel.Shape.SDFMode.Smoothing description=SDF Mode: Force smoothing factor that controls the curve between tunnel and obstacle
e.JumpTunnel.Shape.VertCircle description=Vertices per circle along the tunnel
e.JumpTunnel.Shape.VertLength description=Vertices along length (multiple of tunnel width)
e.JumpTunnel.TestComponent description=Enable additional debug rendering:
 Labels on control points to identify the source spline & index
 Distance/vector from linked SurfaceDistQuery entity to nearest surface
 In game mode, distance/vector from player ship to nearest 
e_3dEngineLogAlways description=Set maximum verbosity to 3dengine.dll log messages
e_AreasDebug description=Enable Debug Rendering of entity areas
 1: Draw the world space AABBs of each Area
 2: Draw the per-zone AABB tree of all static area bounds
 3: Draw enclosing AABB for all objects inside an Area
 4: Draw the world space shape of each Area
 5: Draw the world space shape of each Area along with their tracked tags

e_AreasEnableDifferingHeightsDataAssert description=Enable the shape check data asserts which report areas with polygons of differing z-heights.
e_AreasFilterName description=Only show the Areas that contain the given filter.
e_AreasFilterType description=Shows areas of a specific shape type only.
-1: Draw all area types (default)
 0: Draw 2.5d areas only
 1: Draw box areas only
 2: Draw sphere areas only
 3: Draw solid areas only
 4: Draw ellipsoid areas only
 5: Draw torus areas only
 6: Draw multisegment areas only

e_AreasLabelDisplayDistance description=Adjusts the minimum distance at which area labels are drawn.
e_AreasPolygonHeightCheckTolerance description=The minimum difference between the z-heights of a point before which a polygon area shape is reported as erroneous.
e_AreasShowZones description=Shows Area Zones below their labels. Needs e_AreasDebug to be set from 4 to 5.
e_AtlasAllocDistScaleVal description=Controls how the particle atlas alloc scales based on distance. Lower value gives faster drop
e_AtlasTargetMaxAlloc description=The maximum portion of the DL atlas we aim to fill up, e.g. 0.9 = we'll be scaling back the allocations when the total alloc exceeds 90%
e_AtlasUpdateFPSTarget description=The target FPS at which the particle light atlas will get updated, e.g. if set to 30 and the game runs at 90 FPS we update the atlas every 3rd frame.
e_AutoPrecacheCgf description=Force auto pre-cache of CGF render meshes. 1=pre-cache all meshes around camera. 2=pre-cache only important ones (twice faster)
e_AutoPrecacheCgfMaxTasks description=Maximum number of parallel streaming tasks during pre-caching
e_BBoxes description=Activates drawing of bounding boxes
e_Brushes description=Draw brushes
e_CGFMaxFileSize description=will refuse to load any cgf larger than the given filesize (in kb)
-1 - 1024 (<0 off (default), >0 filesize limit)
e_CameraFreeze description=Freeze 3dengine camera (good to debug object culling and LOD).
The view frustum is drawn in write frame.
 0 = off
 1 = activated
e_CameraGoto description=Move cameras to a certain pos/angle
e_CameraOverrideFStop description=Override all cameras to have this F-Stop
e_CameraOverrideFocalDistance description=Override all cameras to have this focal distance
e_CameraOverrideFocalRange description=Override all cameras to have this focal range
e_CameraRotationSpeed description=Rotate camera around Z axis for debugging
e_CharLodMin description=Min LOD for character objects
e_CheckMeshStrippedCGF description=Validate CGF files with mesh data being stripped out
e_Clouds description=Enable clouds rendering
e_CompoundNodesMergingViewDistRatio description=Defines ratio distance for switching the compound node to the merged version.
e_CoverCgfDebug description=Shows the cover setups on cfg files
e_CoverageBufferBias description=Depth bias for coverage buffer
e_CoverageBufferDebug description=Display content of main camera coverage buffer
e_CoverageBufferDebugRange description=Constant factor to scale the zbuffer debug drawing
e_CoverageBufferDebugReprojection description=Display boxes for current frame and reprojected position (should lag on player movement but not on zone movement)
e_CpuParticleContainerLimit description=The limit on the number of cpu particles a container can emit at any one time.
e_CpuParticleSpriteVertexLimit description=The limit on the number of vertices can be drawn for sprite rendering particles in one frame
e_CubemapPortalCullingRecursionCount description=Maximum recursion depth when searching for not visible VisAreas containing object which are visible in runtime cubemap pass.
e_CullFromLightAtlasThresh description=Controls how the particles gets culled against the frustum when rendered to atlas. Higher value gives less culling.
e_CullVegActivation description=Vegetation activation distance limit; 0 disables visibility-based culling (= unconditional activation)
e_DamageMap_DebugLogShaderImpactsRenderedPerFrame description=Outputs the Damage Values processed each frame. [0: Off; 1: GPU; 2: CPU/Server; 3: Both]
e_DamageMap_DebugQueryAreaAhead description=Toggle to query and display the damage map area of radius e_DamageMap_DebugQueryRadius directly in front of the camera.
e_DamageMap_DebugQueryRadius description=The radius of the area to be queried for damage from the damage map directly in front of the camera, controlled by e_DamageMap_DebugQueryAreaAhead
e_DamageMap_DebugShowOverallDamage description=Displays the overall damage and repair percentages of the nearest damage maps.
e_DamageMap_DebugViewDamageOwners description=Displays a list of the owners of any specific amount of damage for this frame.
e_DamageMap_DebugVisualiseShaderImpact description=Displays a visual representation of the values passed to the shader. Red == Thickness, Green == Deformation, Blue == Burn.
e_DamageMap_DumpStateOnFail description=Should the damage map fail to process thrown an error with the current state of the damage map to be captured by a jira
e_DamageMap_GameToShaderConversion description=Multiplier that acts on all 4 damage types from gameplay values.
e_DamageMap_ImpactDuration description=For impacts the duration can be set for testing purposes.
e_DamageMap_ImpactSizeExponent description=How much of the damage force is reduced by impact radius.
e_DamageMap_KeepDamageOnEntityReset description=Clear damage map on Entity reset
e_DamageMap_LoadPreviousFormats description=Enables the ability to load damage maps from a previous version for the purpose of converting to the newer format!0 - Disabled
1 - Enabled
e_DamageMap_LogHitInfo description=Outputs to the log the hit info passed to the DamageMap Tech.
e_DamageMap_LogPositionBoneMapRenderingProcess description=Output the PositionBone Map rendering process to the log file.
e_DamageMap_MinimumImpactRadiusMultiplier description=Multiplier on the minimum impact radius available from the damage map resolution.
e_DamageMap_PBMRenderingFrameDifference description=only render PBM if mesh was rendered within the last N frames.
e_DamageMap_RenderDamageMapEveryFrame description=Render the damage position/bone map every frame
e_DamageMap_ShaderParamTestValues description=Use special preset shader param values for testing purposes
e_DamageMap_ShaderParamTestValues_Burnt description=Requires e_DamageMap_ShaderParamTestValues to be 1. If this value is true then Burnt uses test values
e_DamageMap_ShaderParamTestValues_Deformation description=Requires e_DamageMap_ShaderParamTestValues to be 1. If this value is true then Deformation uses test values
e_DamageMap_ShaderParamTestValues_Temperature description=Requires e_DamageMap_ShaderParamTestValues to be 1. If this value is true then Temperature uses test values
e_DamageMap_ShaderParamTestValues_Thickness description=Requires e_DamageMap_ShaderParamTestValues to be 1. If this value is true then Thickness uses test values
e_DebugDraw description=Draw helpers with information for each object (same number negative hides the text)
 1: Name of the used cgf, polycount, used LOD
 2: Color coded polygon count
 3: Display LOD info
 4: Display object texture memory usage
 5: Display color coded number of render materials
 6: Display ambient color
 7: Display average size of smallest tris (in cm) per entity/rendernode (could include multiple meshes) - determines LOD distances
 8: Display average size of smallest tris (in cm) per CGA/CGF - factors into LOD distances
 9: Display average size of smallest tris (in cm) per sub-mesh - factors into LOD distances
10: Render geometry with simple lines and triangles
11: Combined objects and draw call count
12: Mesh merging performance heuristic, combined objects and instance count
13: Display occlusion amount (used during AO computations). Warning: can take a long time to calculate, depending on level size! 
15: Display helpers
16: Display debug gun
17: Streaming info (buffer sizes)
19: Physics proxy triangle count
20: Display Character attachments texture memory usage
21: Display animated object distance to camera
22: Display object's current LOD vertex count
23: Display shadow casters in red
24: Trigger Custom Render pass for the object in front of camera (same number negative disables Custom Render pass in the object)
25: Tint with Host VisAreaID      - Not necessarily the final visarea we end up in
26: Tint with Enclosing VisAreaID - Not necessarily the final visarea we end up in
----------------debug draw list values. Any of them enable 2d on-screen listing type info debug. Specific values define the list sorting-----------
 100: tri count
 101: verts count
 102: draw calls
 103: texture memory
 104: mesh memory
e_DebugDrawDistance description=Draw distance of e_DebugDraw info in meters, 0 for infinite
e_DebugDrawFilter description=Show a specified text on DebugDraw
e_DebugDrawListBBoxIndex description=enables BBOX drawing for the 'n' element of the DebugDrawList (starting by 1.   0 = no bbox drawing).
e_DebugDrawListCMD description=Issue commands to control e_DebugDraw list debuginfo behaviour
'Freeze' (F) - stops refreshing stats
'Continue' (C) - unfreezes
'DumpLog' (D) - dumps the current on-screen info into the log
e_DebugDrawListSize description=num objects in the list for e_DebugDraw list infodebug
e_DebugDrawShowOnlyCompound description=e_DebugDraw shows only Compound (less efficient) static meshes
e_DebugDrawShowOnlyFileLocation description=e_DebugDraw shows only StatObjs from specified location.
0: Any
1: P4K
2: Local
e_DebugDrawShowOnlyLod description=e_DebugDraw shows only objects showing lod X
e_DebugDrawTarget description=e_DebugDraw shows only objects directly in front of camera
e_DebugGeomPrep description=enable logging of Geom preparation
e_DebugVisualization description=Tint objects for debugging
0: No debug color
1: Color all objects within the same Zone with the same color
2: Color all objects with the same ZoneData (VisArea or Zone) with the same color
3: Color all objects with the same VisArea (stencil ID) with the same color
4: Color all objects which are marked to be affected by sunlight in the same color
5: Color all shadow casters by max sun cascade key, non shadow casters orange, and unidentified objects as grey
6: Color all shadow casters that are alpha tested red, else default as grey
7: Color all motion blurred objects green and non-motion blurred red
8: Color all objects with the same dev team ID in the same color
9: Color all objects (per chunk) that pass the ZPrePass check in green and objects that didn't pass as red
10: Color each each entity(renderproxy) in range red, else blue
11: Color each GPU-PSO cache in a different color
12: LayerBlend drawcall merging, key shows reason that mesh chunk couldn't merge with the next chunk
13: Colors all objects with green if they're of the unified mesh format and red if they're using the legacy format
14: Colors all objects in a somewhat random color dependent on their unique ID
15: Colors all objects in forward transparent pass red, else default as grey
16: Colors all objects with tessellation red, else default as grey

e_Decals description=Activates drawing of decals
e_DecalsRange description=Less precision for decals outside this range
e_DecalsTimeScale description=Time scale for dynamic decals spawned by game logic
e_Decals_AlwaysAffectsThisAreaOnly description=Overrides AffectsThisAreaOnly for debugging decals
e_DeferredCollisionOnRenderMesh description=Enable precise collision test against render mesh of target entity
e_DeferredCollisionOnVegetation description=Enable precise collision test against vegetation statobj
e_DeferredPhysicsEvents description=Enable to Perform some physics events deferred as a task/spu job
e_DeformableObjects description=Enable / Disable morph based deformable objects
e_Dissolve description=Objects alphatest_noise_fading out on distance and between lods
e_DissolveTime description=Time in seconds for the dissolve between LODs to occur
e_DrawDefaultObjects description=Draw 'replace me' spheres in place of missing meshes
e_DumpStreamingObjects description=Dump the objects memory and polycount information being currently streamed to .csv file 
e_DynamicLights description=Activates dynamic light sources
e_DynamicLightsForceDeferred description=Convert all lights to deferred (except sun)
e_EnableBackgroundSkinStreaming description=Enable or disable background skin streaming
e_EnableBackgroundStatObjStreaming description=Enable or disable background statobj streaming
e_EnableBackgroundTextureStreaming description=Enable or disable background texture streaming
e_EnableMeshVisAreaOverrideInterior description=Enables changes to make tagged interior meshes inside exit portals always use the lighting of the interior visarea.
e_EnableSearchingForStartingVisAreaInChildZones description=When a child zone is encountered during culling:
0 - Disables this feature and always places the camera outside all child zone visareas.
1 - (Default) Enables looking up this visarea the camera is inside within the child zone.
2 - (New) Looks for visareas inside the child zone and only places the camera inside exit portals if any are found.
e_Entities description=Activates drawing of entities and brushes
e_EntitySuppressionLevel description=Defines the level at which entities are spawned.
Entities marked with lower level will not be spawned - 0 means no level.
Usage: e_EntitySuppressionLevel [0-infinity]
Default is 0 (off)
e_EnvironmentProbeSaveRes description=Resolution to save environment probes (if this doesn't match CV_r_EnvironmentProbeRes, use [HDRCubemap_highQ]'s maxtexturesize in  in rc.ini to force conversion
e_Fog description=Activates global height/distance based fog
e_FogVolumes description=Activates local height/distance based fog volumes
e_FoliageBranchesDamping description=Damping of branch ropes
e_FoliageBranchesStiffness description=Stiffness of branch ropes
e_FoliageBranchesTimeout description=Maximum lifetime of branch ropes (if there are no collisions)
e_FoliageBrokenBranchesDamping description=Damping of branch ropes of broken vegetation
e_FoliageStiffness description=Stiffness of the spongy obstruct geometry
e_FoliageWindActivationDist description=If the wind is sufficiently strong, visible foliage in this view dist will be forcefully activated
e_ForceOfflineRendering description=Force the engine to run through offline rendering and streaming
e_FourierShadows description=Activates drawing of fourier shadows
e_FourierShadowsMinShadowRes description=Set minimum res of an individual fourier shadow.
e_GasCloudSortingEpsilon description=Scales how tolerant gasclouds are to slight overlaps when calculating sorting
e_GeomCacheDecodeAheadTime description=Time in seconds that data will be decoded ahead for geom cache streaming. Default: 0.5
e_GeomCacheLerpBetweenFrames description=Interpolate between geometry cache frames. Default: 1
e_GeomCacheMaxBufferAheadTime description=Time in seconds maximum that data will be buffered ahead for geom cache streaming. Default: 5.0
e_GeomCacheMaxPlaybackFromMemorySize description=Maximum size of geometry cache animated data in MB before always streaming from disk ignoring the memory playback flag. Default: 16
e_GeomCacheMinBufferAheadTime description=Time in seconds minimum that data will be buffered ahead for geom cache streaming. Default: 2.0
e_GeomCachePreferredDiskRequestSize description=Preferred disk request size for geometry cache streaming in KB. Default: 1024
e_GeomCaches description=Activates drawing of geometry caches
e_GsmCascade0Size description=Cascade 0 size
e_GsmCascade1Size description=Cascade 1 size
e_GsmCascade2Size description=Cascade 2 size
e_GsmCascade3Size description=Cascade 3 size
e_GsmCascade4Size description=Cascade 4 size
e_GsmDepthBoundsDebug description=Debug GSM bounds regions calculation
e_GsmExtendLastLodUseAdditiveBlending description=Enable Additive Blending on shadows from terrain
e_GsmLodsNum description=Number of GSM lods (0..5)
e_GsmRange description=Legacy cvar which was removed but temporarily added back so that any track view sequences that relied on this value, can still function and adjust cascade sizes like before.
e_GsmScatterLodDist description=Size of Scattering LOD GSM in meters
e_GsmStats description=Show GSM statistics 0=off, 1=enable debug to the screens
e_IgnoreCameraCutsWithinNFrames description=Skip flagging camera cut if we had a camera cut in the previous N frames (to prevent redundant temporal resets)
e_JointStrengthScale description=Scales the strength of prebroken objects' joints (for tweaking)
e_LightBoxDebug description=Enable debug rendering of light boxes used by currently visible lights (as seen by light entities)
e_LightVolumes description=Allows deferred lighting for registered alpha blended geometry
0 = Off
1 = Enabled
2 = Enabled just for sun light

e_LightVolumesDebug description=Display light volumes debug info
0 = Off
1 = Enabled

e_LodBoxOpacity description=Opacity of LOD Boxes
e_LodCullDebug description=Specifies how to handle rendering of objects with no appropriate LOD for current distance (missing or too detailed - threshold set by e_LodCullMinPolySizePixels).
0: Cull objects
1: Render cubes with 'Missing LOD' texture
e_LodCullMinPolySizePixels description=Multiplier on max distance beyond which high poly LODs are culled. Default is to cull meshes with pixels smaller than 0.30 pixels.
e_LodCullMissingLODs description=Cull meshes with missing LOD
e_LodFaceAreaTargetSize description=Threshold used for LOD computation.
e_LodMax description=Max LOD for objects
e_LodMergeEnableFailedMergeLogging description=Allow logging of all the pairs that failed to merge for various reasons.
e_LodMergeLodCullMinPolySizePixels description=Specifically for LODMerge lodSettings calculation. Multiplier on max distance beyond which high poly LODs are culled. Default is to cull meshes with pixels smaller than 0.75 pixels.
e_LodMergeLodFaceAreaTargetSize description=Specifically for LODMerge lodSettings calculation. Threshold used for LOD computation.
e_LodMergeLodMax description=Specifically for LODMerge lodSettings calculation. Max LOD for objects
e_LodMergeLodMin description=Specifically for LODMerge lodSettings calculation. Min LOD for objects
e_LodMergeLodRatio description=Specifically for LODMerge lodSettings calculation. LOD distance ratio for objects
e_LodMergeVisualStateTolerance description=Allow merging of objects with different wear/dirt values within some tolerance percentage.
e_LodMin description=Min LOD for objects
e_LodRangeFactorsRecalculate description=Forces the LODRangeFactors for all visible stat objects to be recalculated.
e_LodRatio description=LOD distance ratio for objects
e_LodSkinMode description=0 - Use screensize of AABB to determine LOD 
1 - Use average poly size to determine appropriate LOD for a given distance
e_LogRenderNodeDataEnable description=Enables if render node data is output to the log file for debugging.
e_MainReferenceFrameMode description=Mode used to detect the main reference frame (used to decide if motion vectors are written/objects can be occluders for CPU reprojection culling).
 0: Use the the Rendering Camera as the Main Reference Frame 1: Use the Zone with the most objects in it as Main Reference Frame 2: Use the Zone Group of stationary to each other Zones, as the Main Reference Frame
e_MaxDrawCalls description=Will not render CGFs past the given amount of drawcalls
(<=0 off (default), >0 draw calls limit)
e_MaxViewDistance description=Far clipping plane distance
e_MergedMeshes description=Show runtime merged meshes
e_MergedMeshesActiveDist description=Active distance up until merged mesh patches will be streamed in
e_MergedMeshesBulletLifetime description=MergedMesh Bullet approximations lifetime
e_MergedMeshesBulletScale description=MergedMesh Bullet approximations size scale
e_MergedMeshesBulletSpeedFactor description=MergedMesh Bullet approximations speed factor
e_MergedMeshesDebug description=enable debug drawing of runtime merged meshes
2: Show AABB + debug info (position, state, size, visibility)
64: Show the calculated wind
256: Draw colliders of objects influencing the merged meshes
544: Draw spines
1056: Draw simulated spines
2080: Draw spines with LOD info (red/blue)

e_MergedMeshesDeformViewDistMod description=distance modifier applied to view dist ratios after which deformables stop updating
e_MergedMeshesInstanceDist description=Distance fudge factor at which merged meshes turn off animation
e_MergedMeshesLodRatio description=merged meshes lod ratio
e_MergedMeshesOutdoorOnly description=MergedMeshes will receive ERF_OUTDOORONLY by default
e_MergedMeshesPool description=amount of main memory (in kb) that merged meshes are allowed to sustain
e_MergedMeshesPoolSpines description=percentage of the pool for spines
e_MergedMeshesTesselationSupport description=Enable or disable support for tessellation on mergedmeshes
e_MergedMeshesUseSpines description=MergedMeshes use touchbending
e_MergedMeshesViewDistRatio description=merged meshes view dist ratio
e_MeshAggregateDisplayInfo description=Display MeshAggregate memory stats in DisplayInfo
(needs MESHAGGREGATE_TRACK_STATS defined in IMeshAggregate.h too)
e_MeshCombining description=Activate the mesh combining system on level export
e_MeshCombiningDebugFilter description=Break in various stages of the LODMerger analyzing process when the editor base object name matches the filter.
e_MeshCombiningDistanceReductionPower description=Each decreasing distance level max view distance limit be reduced by a power of this value.
e_MeshCombiningValidation description=Activate the validation phase for checking if objects have incorrect transforms or vis areas.
e_MeshVisAreaModeDebug description=Enable debug tinting of tagged meshes on StatObjs to visualize whether they're treated as interior or exterior.
Set to 2 to also draw bounding boxes around Auto subobjects to check their sorting Bright Yellow: Exterior (Auto)
 Dark Yellow:   Exterior (Manually tagged)
 Bright Blue:   Interior (Auto)
 Dark Blue:     Interior (Manually tagged)

e_ObjQuality description=Object detail quality
e_ObjShadowCastSpec description=Object shadow casting spec. Only objects with Shadow Cast Spec <= e_ObjShadowCastSpec will cast shadows
e_ObjectsTreeBBoxes description=Debug draw of object tree bboxes
e_OcclusionCullingViewDistRatio description=Skip per object occlusion test for very far objects - culling on tree level will handle it
e_Ocean description=Activates drawing of ocean.
e_OceanSimulation description=Activates ocean FFT simulation rendering
e_OnDemandMaxSize description=Specifies the maximum size of vegetation objects that are physicalized on-demand
e_OnDemandPhysics description=Turns on on-demand physicalization (0=off, 1=brushes only
e_ParallelLoadCGF description=Allow loading CGFs in parallel for object containers
e_ParticleAutoTestIsRunning description=Set to '1' when the auto test is running, to make the GPU particle orientation consistent between runs and hide CPU particles.
e_ParticleAutoTestProfile description=Set to '1' when the particle auto tests should capture Optick profiles. Used by the VFX Regression FG setup.
e_ParticleAutoTestRenderDoc description=Set to '1' when the particle auto tests should capture RenderDocs. Used by the VFX Regression FG setup.
e_ParticleBinaryLoading description=Enables binary conversion of effects xml data, alternative loading option for effects
e_ParticleCameraDistanceFOVScaled description=Enables particle camera distance variables to be scaled with regards to the current fov scale.0 = disable | 1 = enabled
e_ParticleCinematicLighting description=Enables HQ per-pixel particle lighting
e_ParticleCullDistanceOverride description=Defines the max distance where particles are visible & updated
e_ParticleDebugDrawSizeScale description=Used to scale size on certain particle related debug draw elements
e_ParticleEmissionDebugDraw description=Toggle visualization of the emission size bounding box
e_ParticleEnableCameraShake description=If enabled particle effects are allowed to trigger camera shakes.
e_ParticleEnableClearRenderResources description=Re-enable clearing particle emitter resources when a level is unloading. Only use if things are obviously breaking due to this change
e_ParticleEnableHalfRes description=Enables the ability to render particles half-res
e_ParticleEnablePlanetEffectPreAge description=Enable/Disable pre-aging or dynamic clean up of planet effect particles once moving outside of spawned area
e_ParticleFieldSDFEnable description=Enable the particle field SDFs in game. (0: Off, 1: On)
e_ParticleFreezeTime description=Freezes the particle animation/update
e_ParticleHalfResThreshold description=Render to Display resolution ratio below which half-res is disabled automatically
e_ParticleLightingIntensityScale description=Globally applied intensity multiplier, i.e. affects intensity of all particles affected by light sources
e_ParticleListEffects description=Writes all effects used and counts to log
e_ParticleListEmitters description=Writes all emitters to log
e_ParticleLoadClientIgnoreFile description=Enables the filtering of libraries to exclude on client through 'ClientIgnoredLibs.txt'
e_ParticleMaxActiveCount description=The max number of of particles a sub emitter can request to be allocated
e_ParticleNewLightingConversion_AlphaGamma description=Controls a gamma curve of the particle's alpha
e_ParticleNewLightingConversion_OmniScale description=Defines how 'Diffuse Backlighting' will convert to the new lighting's 'Omni Scattering'
e_ParticleNewLightingConversion_TranslucencyScale description=Defines how 'Diffuse Backlighting' will convert to the new lighting's 'Translucency'
e_ParticleParamsLoadThreaded description=Activates threading for preloading of effect params
0 - off
1 - Activates threading for gathering xml nodes
2 - Activates threading for xml nodes and params creation

e_ParticlePathLoadingError description=Enables data error for effects that's loaded from path instead of GUID
e_ParticlePrerecordMode description=Controls how the pre-recorded values in the effect XML will apply to the emitter buffer sizes
0 - Pre-recorded load disabled
1 - Only apply pre-recorded load to effects with 'Force Prerecord Buffer Sizes' enabled
2 - Pre-recorded load enabled on all effects

e_ParticleReferenceResolution description=Reference resolution for particle effects' min/max pixels
e_ParticleShadowLightCullRadiusMultiplier description=Shadow casting lights will not be spawned outside the the light radius multiplied with this CVar. Outside this radius, a normal non-shadow casting light will spawn.
e_ParticleShadowLightDebugDrawSize description=Draw a sphere for the currently rendered shadowcasting lights. Value defines the size [in meters]
e_ParticleShadowLightEnable description=Toggle spawning shadow casting lights from the shadowcasting light pool for CPU particles
e_ParticleShadowLightPoolSize description=The amount of shadow casting lights available globally for CPU particle effects
e_ParticleShadowsNumGSMs description=Number of shadow GSMs used for particle shadows
e_ParticleSplineMaxScatteringQueries description=The max amount of scattering queries allowed for a spline guided particle effect
e_ParticleTimerFPSClamp description=Use this to set a clamp for how low the FPS can go. Can be used to improve visuals for certain nondeterministic VFX at low FPS but might also make the VFX appear to move in slow mo
e_Particles description=Activates drawing of particles
e_ParticlesAnimBlend description=Blend between animated texture frames
Usage: e_ParticlesAnimBlend [0/1/2]
0 = Off
1 = On
2 = Force
e_ParticlesAudio description=Enable audio triggered from particle effects.
e_ParticlesCullAgainstOcclusionBuffer description=Cull Particles against the Occlusion Buffer
e_ParticlesCullAgainstViewFrustum description=Cull Particles against the view-frustum
e_ParticlesDamage description=Enable damage from (legacy) particles:
  0 = disable, 1 = SP client only, 2 = Always
e_ParticlesDebug description=Particle debug flags: <flags> to set, <flags>+ to add, <flags>- to remove 1 = show basic stats m = show memory usage r = show reiteration, rejection, and collision stats b = draw bounding boxes and labels, show bounding box stats s = only perform debug rendering on currently selected particle effect (dependent on editor options to highlight selected geometry) x = show bounding box stats d = force dynamic bounds and update for all emitters c = disable clipping against water and vis area bounds z = freeze particle system
e_ParticlesDebugDisplayId description=The ID of the emitter to display, used for non-selectable emitters in the editor.
e_ParticlesDebugDisplaySubEmitterId description=The ID of the sub-emitter to display.
e_ParticlesDebugFilter description=Filter e_ParticlesDebug output by emitter name
e_ParticlesDebugRecordingDuration description=The duration for which certain debug data is recorded
e_ParticlesDumpMemoryAfterMapLoad description=Set to 1 to dump particle memory informations after map load
e_ParticlesEnableFogVolumes description=Toggle the particles-to-fogvolumes feature
e_ParticlesEnableTextureStreaming description=Toggle the streaming capability on particles.
e_ParticlesForceManagedAudio description=Force particles to use managed audio objects.
e_ParticlesLifetimeMinCap description=The smallest lifetime a particle can have
e_ParticlesLightMinColorThreshold description=Threshold for minimum particle light color
e_ParticlesLightMinRadiusThreshold description=Threshold for minimum particle light radius
e_ParticlesLights description=Allows to have light source attached to every particle
0 = Off
1 = Deferred lights

e_ParticlesLightsViewDistRatio description=Set particles lights view distance ratio
e_ParticlesLod description=Multiplier to particle count
e_ParticlesMaxDrawScreen description=Screen size max per particle -- fade out earlier
e_ParticlesMaxScreenFill description=Screen size max of total particles to draw
e_ParticlesMinDrawAlpha description=Alpha cutoff for rendering particles
e_ParticlesMinDrawPixels description=Pixel size min per particle -- fade out earlier
e_ParticlesMotionBlur description=Motion blur for particles
Usage: e_ParticlesMotionBlur [0/1/2]
0 = Off
1 = On
2 = Force
e_ParticlesObjectCollisions description=Enable particle/object collisions for SimpleCollision:
  1 = against static objects only, 2 = dynamic also
e_ParticlesPhysEnvMaxDistanceThreshold description=Sets the max distance between particles that get grouped in the same Phys Env
e_ParticlesPoolSize description=Particle system pool memory size in KB
e_ParticlesProfile description=1 - always show statistics about particle pools usage
2 - disable the warning message when running out of pool memory
e_ParticlesQuality description=Particles detail quality
e_ParticlesSerializeNamedFields description=Save effects libraries with named fields for future compatibility (compatible with versions >= 24)
e_ParticlesShadows description=Shadows on particles
Usage: e_ParticlesShadows [0/1/2]
0 = Off
1 = On
2 = Force
e_ParticlesSoftIntersect description=Render appropriate particles with soft intersection
Usage: e_ParticlesSoftIntersect [0/1/2]
0 = Off
1 = On
2 = Force
e_ParticlesSortQuality description=Minimum sort quality for new particle insertion:
  0 = basic, 1 = better, 2 = best
e_ParticlesStreamingSyncThreshold description=How many frames after the streaming last touched an emitter it will be removed from the active-update list
e_ParticlesTexCoordLoopRange description=The range for when the connected particle's tex coords will loop
e_ParticlesUseLevelSpecificLibs description=Allows searching for level-specific version of effects files
0 = Off
1 = Enabled

e_ParticlesVisualizeGravVector description=Toggle visualization of the particle gravity, wind and up directions.
Green arrow: Gravity; Red arrow: wind at position; Dark red arrow: smoothed wind; Blue arrow: up direction;
0: Off;
1: Show full effect path;
2: Show short effect path;
e_ParticlesVisualizeOrientation description=Sets the size of visualization of the particle orientation (red: x-axis; green: y-axis; blue: z-axis) [in meters]
e_ParticlesWindFrequencyDamping description=Dampens sudden changes in wind direction and speed for deterministic particles. Acts as a multiplier for the particle lifetime. Higher values means slower adjustment to the new wind speed.
e_Particles_CPURender description=Activates drawing of CPU particles (lights, fog, meshes, sprites)
e_PhysFoliage description=Enables physicalized foliage
1 - only for dynamic objects
2 - for static and dynamic)
e_PhysFoliageBranchAttachDebug description=Prints information into the log if a branch (spine) of a foliage asset gets attached to another branch (spine) of the same asset.
e_PhysFoliageBranchAttachThreshold description=Threshold below which a foliage branch (spine) attaches to another branch (spine).
e_PhysFoliageBranchAttachThresholdMode description=Defines the branch threshold mode
0 - relative to the foliage branch's/spine's length
1 - absolute in meters
e_PhysFoliageRuntimeSetup description=Allows the physicalization of foliage at runtime
e_PhysProxyTriLimit description=Maximum allowed triangle count for phys proxies (based on the 65536 vertex limit)
e_PhysicsBrushCloning description=Brushes will clone their physics instead of physicalizing individually
e_PhysicsBrushQueueSize description=number of brushes to physicalize in a batch during loading
e_PlanetDaylightTime description=Override day time query for effect, light and audio systems (-1: Real value; 0.0: Force night time; 1.0: Force day time; inside range [0.0; 1.0] fade between night/day)
e_PlanetTerrainPatch_Hole_DebugDraw description=Debug rendering of holes in planet terrain patches
0 - off
1 - wireframe + opaque + no depth test
2 - solid + additive blend + depth test
e_PortalCullingRecursionCount description=Maximum recursion depth when searching for not visible VisAreas containing object which are visible
e_Portals description=Activates drawing of visareas content (indoors), values 2,3,4 used for debugging
e_PortalsBlend description=Blend lights and cubemaps of vis areas connected to portals 0=off, 1=on
e_PrecacheDeadlineTime description=Amount of time for a precache round to complete (realtime seconds, default 1.0f)
e_PrepareDeformableObjectsAtLoadTime description=Enable to Prepare deformable objects at load time instead on demand, prevents peaks but increases memory usage
e_ProceduralVegetation description=Activates drawing of distributed objects like grass
e_RNTmpDataPoolMaxFrames description=Cache RNTmpData at least for X frames
e_RParticleEmitterBoundsArraySize description=The number of AABB's used in a ring buffer to compute the total AABB.
e_RParticleResetRefPosThreshold description=The distance traveled when the ref pos gets reset to the current pos (lower gives better precision but too low can impact perf)
e_RParticleSpaceloopCullDist description=Defines the far clip plane(as fraction of space loop brick size). Used in order to reduce distribution pattern errors
e_RParticleUpdateInVS description=If the particle update is computed in VS instead of CS.
e_RTT_AlwaysSyncAfterRegularObjectsQuery description=Restores previous behavior of always syncing after the RTT objects query regardless of other RTTs being rendered in it
e_RTT_IncludeListShadowRendering description=Allow objects in the RTT include list to be submitted for shadow map rendering
e_RTT_RenderInLightQuery description=Render RTT objects as part of the light query to avoid syncing on the main pass query.
e_RTT_ReplaceSyncBarriers description=Replaces RTT SyncBarrier() calls with SyncBatchJobs() after both light and regular objects queries, to prevent RTTs waiting on main pass objects query
e_ReloadSurfaces description=Reload physical properties of all materials
e_RenderMeshCollisionTolerance description=Min distance between physics-proxy and rendermesh before collision is considered a hole
e_RenderMeshUpdateAsync description=Enables async updating of dynamically updated rendermeshes
0 - performs a synchronous update
1 - performs the update in an async job (default))
e_Roads description=Activates drawing of roads
e_Ropes description=Turn Rendering of Ropes on/off
e_RopesMeshUpdateScreenspaceThreshold description=Minimum screenspace size for a rope to update its render mesh. Value <= 0 effectively turns this off, updating the mesh regardless of screenspace size.
e_ScatteredDecals_AlwaysAffectsThisAreaOnly description=Disables Stencil Ref on POC Decals
e_ScissorDebug description=Debug light scissor rectangles (used for shadow mask bboxes)
0 - Off
1 - Show debug lines around sphere bounds
2 - Show final scissor rectangle in purple
3 - Show spherical scissor in red, frustum scissor in blue, overlap in purple
e_ScreenSpaceDistanceCullingMinPixels description=Min number of pixels (approximated) needed on screen to draw 
e_ScreenSpaceDistanceCullingMinPixelsCubemapPass description=Min number of pixels (approximated) needed on screen to draw in the runtime cubemap pass. We assume fixed resolution of 1080 even though cubemap pass renders to 512
e_ScreenSpaceDistanceCullingMinPixelsImposterPass description=Min number of pixels (approximated) needed for an imposter to draw 
e_ScreenSpaceDistanceCullingMinPixelsShadowPass description=Min number of pixels (approximated) needed on screen to draw in the shadow pool.
e_ScreenSpaceDistanceFixedResolution description=Fixed resolution for distance culling on screen space size
e_SecondsBeforeStreamOperationConsideredExcessive description=How many seconds before we report a code failure for a streaming operation that hasn't finished
e_ShadowFrustumDebugDraw description=1: Renders a debug draw of the shadow frustum using the frustum camera
2: Renders shadow frustum with resolution-estimator ball
3: Renders shadow frustum with frustum camera in light green, and shadow frustum from view-projection matrix in dark green
e_ShadowPoolSortingDebug description=Display debug information regarding the sorting of the shadow pool tree layers.
1: Opaque Shadows 
2: Fourier Shadows
e_ShadowPoolTreeAllocationDebug description=Display debug information regarding the shadow pool tree allocations.
1: Opaque Shadows 
2: Fourier Shadows
e_ShadowResCalcFOVClamp description=When calculating Shadow Resolution the FOV of the main camera used in this calculation will be clamped by this CVar to stop the shadow resolutions being scaled too high.

e_ShadowResMaxScale description=Maximum multiplier on shadow resolution for individual lights. Values greater than 1 are used by art to manually adjust shadow texel density for key locations.
e_ShadowResScaleAffectsCulling description=Toggle between old behaviour of where shadows culling logic did not take scale into account
e_ShadowStaticMapUpdate description=Trigger updates of static shadow map: 0=no update, 1=one update, 2=continuous updates
e_ShadowStaticRegionBBoxDebug description=0=off, 1=visualize the volume encompassed by the shadow region node, 2=Additionally render a cross at volume center location (blue), near plane (green) and far plane (red) locations.
e_ShadowStaticRegionEnable description=Enable usage of static region shadows based on entity parameters.
e_ShadowStaticRegionSubTriggerTargetRatio description=Ratio to determine what the target sub region trigger distance should be from the max trigger dist
e_ShadowStaticRegionSunDirThreshold description=Threshold to determine when to re-render static region shadows once sun direction has changed enough from last trigger. Measured in degrees.
e_ShadowSunDebugQuantization description=Debug render shadow pool block texel grid. Showing cascade center location in world space and shadow map space
e_ShadowSunSemiDynamicCascades description=Number of cascades that will exclude specific render objects from rendering into the shadow map. Starts from highest cascade down. Updated on alternative frames. 
All EERType render node types will be rendered EXCEPT for PlanetTerrainPatch, RenderProxy with zones (ships), Light, LightWeightRenderNode, Decal, Road and Geomcache 

e_ShadowTexelWidthInPixels description=Width of shadow texels measured in pixels .
e_Shadows description=Activates drawing of shadows
e_ShadowsBlendCascades description=Blend between shadow cascades: 0=off, 1=on
e_ShadowsBlendCascadesVal description=Size of cascade blend region
e_ShadowsCascadesCullingDebug description=Visualize objects being culled in a previous cascade and where the camera frustum / cascade AABB planes were generated. 
If plane culling is enabled then it also draws a blue line to show distance between furthest point of object OBB along plane normal to a point on the plane. 
Eg value of 2 will show objects that were culled by cascade 1 (IsContained or Plane test) 
White - Camera frustum, Cyan - Cascade AABB, Yellow - Frustum / cascade intersection points 
Green bounding box - Culled by IsContained check 
Red bounding box - Culled by Plane test.
e_ShadowsCascadesDebug description=0=off, 1=visualize sun shadow cascades on screen
e_ShadowsCascadesPlaneCullingIdx description=Enable culling of objects that are fully behind planes generated from camera frustum and previous cascade AABB intersection points. 
-1 = Off, 0 - 3 = Test a specific plane for culling. Greater than 3 = Test all 4 planes for culling.
e_ShadowsCascadesUseOBBCheck description=Use OBB for testing objects are fully contained in a cascade.
e_ShadowsCastViewDistRatio description=View dist ratio for shadow maps casting from objects
e_ShadowsCastViewDistRatioLights description=View dist ratio for shadow maps casting for light sources
e_ShadowsMinShadowRes description=Set minimum res of an individual shadow.
e_ShadowsMipMax description=The singular maximum shadow map resolution calculation based upon the MIP of the ShadowPool Resolution.
e_ShadowsMipMaxStaticRegion description=The maximum Static region shadow map resolution calculation based upon the MIP of the ShadowPool Resolution.
e_ShadowsMipMaxSun description=The maximum Sun shadow map resolution calculation based upon the MIP of the ShadowPool Resolution.
e_SkyBox description=Activates drawing of skybox and moving cloud layers
e_SkyQuality description=Quality of dynamic sky: 1 (very high), 2 (high).
e_SkyUpdateRate description=Percentage of a full dynamic sky update calculated per frame (0..100].
e_Sleep description=Sleep X in C3DEngine::Draw
e_SpaceloopDebugFreeze description=Used for debugging spaceloop
e_SpaceloopJitterOffset description=The relative distance a brick can offset
e_SplineDebugSubmittedControlPoints description=Render spline control points and rotations that have been submitted this frame
e_StarsIntensityContrast description=Power factor which will modify stars intensity for greater variation
e_StarsMaxIntensity description=Maximum value of the range of intensity values for the stars
e_StarsMinIntensity description=Minimum value of the range of intensity values for the stars
e_StarsTextureResolution description=The size of the uncompressed stars texture that will be generated
e_StarsWriteTextureToDisc description=Flag to activate the process of calculating and saving the texture data, automatically reset to zero after being enabled
e_StatObjMergeMaxTrisPerDrawCall description=Skip merging of meshes already having acceptable number of triangles per draw call
e_StatObjMergeUseThread description=Use a thread to perform sub-objects meshes merging
e_StatObjSetMassValidation description=Enables validating the availability of physical geometry when physicalizing a StatObj and the mass is explicitly set in the properties.
0 = Off
1 = Write to Log using CryWarning()
2 = Data assert

e_StatObjStoreMesh description=Store the mesh if enabled, used for cheat detection purposes (they will be stored by default on the dedi server)
e_StatObjTessellationMaxEdgeLenght description=Split edges longer than X meters
e_StatObjTessellationMode description=Set they way pre-tessellated version of meshes is created: 0 = no pre-tessellation, 1 = load from disk, 2 = generate from normal mesh on loading
e_StatObjValidate description=Enable CGF mesh validation during loading
e_StreamAssumedFOV description=Assumed FOV for streaming in the main view (in degrees, default 55)
e_StreamCgf description=Enable streaming of static render meshes
e_StreamCgfDebug description=Draw helpers and other debug information about CGF streaming
 1: Draw color coded boxes for objects taking more than e_StreamCgfDebugMinObjSize, also shows if LOD's are a single CGF or were split into several CGF's
 2: Trace into console every loading and unloading operation [Available in Release] 
 3: Print list of currently active objects taking more than e_StreamCgfDebugMinObjSize KB [Available in Release]
 4: Force sync load points 
 5: Display the meshes with the highest priority in the streaming system (max 30 meshes) [Available in Release] 

e_StreamCgfDebugFilter description=Show only items containing specified text
e_StreamCgfDebugInvalidRenders description=Show colored cubes in-place of meshes that are requested with an invalid lod.
e_StreamCgfDebugMinObjSize description=Threshold for objects debugging in KB
e_StreamCgfDebugMismatchedRenderLods description=Show colored cubes when the actual rendered mesh is different to the one that's initially requested to be rendered.
e_StreamCgfDebugMissing description=Show colored cubes in-place of meshes that haven't been streamed in.
e_StreamCgfDebugShowKey description=Show key colours for missing lod object debug
e_StreamCgfMaxNewTasksPerUpdate description=Maximum number of files requested from streaming system per update
e_StreamCgfMaxTasksInProgress description=Maximum number of files simultaneously requested from streaming system
e_StreamCgfPoolSize description=Render mesh cache size in MB
e_StreamCgfVisObjPriority description=Priority boost for visible objects
0 - visible objects has no priority over invisible objects, camera direction does not affect streaming
1 - visible objects has highest priority, in case of trashing will produce even more trashing
e_StreamSaveStartupResultsIntoXML description=Save basic information about streaming performance on level start into XML
e_StreamSkinPoolSize description=Skin cache size in MB
e_StreamingCombineStatObjAndSkinBudgets description=Use the same budget for StatObjs and Skins (requires background streaming)
e_StreamingHiddenRenderNodes description=Allow Streaming RenderNodes which are hidden.
e_StreamingRoundAgeBeforeStaleStreamingRequest description=Amount of streaming rounds before a resource update request is considered stale
e_Sun description=Activates sun light source
e_SunAngleSnapDot description=Sun dir snap control
e_SunAngleSnapSec description=Sun dir snap control
e_SunDistance description=Scale of the sun direction vector
e_SunFilterBySolarSystem description=Filter GetClosestSun checks by solar system
e_SunShadowsClipPlaneRange description=Distance relative to the sun used for clipping objects.
e_SunShadowsHullCullingFarPlaneMultiplier description=Multiplier for extending the location of where objects are culled for the hull far plane
e_SunShadowsRenderPlaneRange description=Factored into near plane used for rendering
e_SunShadowsVisualizeHullCullingPlanes description=Debug render planes used for zone system hull culling. 2 = continuously update locations, 1 = Use last updated locations. 
e_Terrain description=Activates drawing of terrain ground
e_TerrainBBoxes description=Show terrain nodes bboxes
e_TerrainDrawThisSectorOnly description=1 - render only sector where camera is and objects registered in sector 00
2 - render only sector where camera is
e_TerrainLodRatio description=Set heightmap LOD
e_TerrainLog description=Debug
e_TerrainTextureDebug description=Debug
e_TerrainTextureStreamingPoolItemsNum description=Specifies number of textures in terrain base texture streaming pool
e_Tessellation description=HW geometry tessellation  0 = not allowed, 1 = allowed
e_TessellationMinScreenSize description=Minimum size of object in screen distance as a percentage of screen height at which tessellation will be enabled
e_TimeOfDay description=Current Time of Day
e_TimeOfDayDebug description=Display time of day current values on screen
e_TimeOfDaySpeed description=Time of Day change speed
e_TransparentMBAndDoFNearCutoffDist description=Threshold for minimum particle light radius
e_UsePrecreatedPhysicalArchetypes description=cgf proxies are shared across brushes if enabled
e_VegetationBoneInfo description=Logs information about number of bones in each vegetation object loaded
e_VegetationMinSize description=Minimal size of static object, smaller objects will be not rendered
e_VegetationSphericalSkinning description=Activates vegetation spherical skinning support
e_ViewDistRatio description=View distance ratio for objects
e_ViewDistRatioDetail description=View distance ratio for detail objects
e_ViewDistRatioLights description=View distance ratio for light sources
e_VisAreaDrawShadowGeometry description=Enable Drawing of hole fix up geometry for VisAreas when the zone system is used
e_VisAreaStartInDeactivatedPortalBias description=Bias of how far the camera can be beyond the portal center to be till considered on the non occluded side
e_VisAreasDebug description=Enable Debug Rendering of VisAreas (positive values show labels, negative ones hide them).
Additionally highlights concave VisAreas and relevant point-plane pairs.
 1: Draw all VisAreas
 2: Draw all VisAreas and hide normal geo
 3: Draw all VisAreas sorted over geo
 4: List all VisAreas and highlight the one the camera is inside
 5: Draw all VisAreas and highlight invalid portals

e_VisAreasDrawDistance description=Adjusts the minimum distance at which visarea will be drawn.
e_VisAreasEnableDifferingHeightsDataAssert description=Enable the shape check data asserts which report visareas with polygons of differing z-heights.
e_VisAreasFilter description=Only show the VisAreas that contain the given filter.
e_VisAreasHelperDisplayDistance description=Adjusts the minimum distance at which helper labels are drawn such as portal connections or concave helpers.
e_VisAreasLabelDisplayDistance description=Adjusts the minimum distance at which visarea labels are drawn.
e_VisAreasPolygonHeightCheckTolerance description=The minimum difference between the z-heights of a point before which a polygon visarea shape is reported as erroneous.
e_VisAreasShowGUIDs description=Shows VisArea GUIDs below their labels. Needs e_VisAreasDebug to be set from 1 to 3.
e_VisAreasShowZones description=Shows VisArea Zones below their labels. Needs e_VisAreasDebug to be set from 1 to 3.
e_VisAreasSkipOppositeFacingExitPortals description=Enable VisArea culling changes that are currently being tested for accuracy.
e_VolObjShadowStrength description=Self shadow intensity of volume objects [0..1].
e_WaterVolumes description=Activates drawing of water volumes
1: use usual rendering path
2: use fast rendering path with merged fog
e_Wind description=Debug
e_WindAreas description=Debug
e_WindBendingDistRatio description=Wind cutoff distance for bending (linearly attenuated to that distance)
e_ZoneSystemConservativeVisAreaIntersectionCheck description=Use the Inner portal plane instead of the outside one, this will prevent potential object popping at the cost of more rendered objects
e_ZoneSystemCullChildZones description=Cull whole childs zones against the query before doing the per object checks
e_ZoneSystemCullZonePartitions description=Cull whole ZonePartitions against the camera before doing the per object checks
e_ZoneSystemDebugQueries description=Enable Debug/Profile Rendering of Zone System for Queries
e_ZoneSystemDebugQuery description=Perform a custom zone query and output results console/file
[Usage]
e_ZoneSystemDebugQuery aiobject				: query all AIObject's and write result summary to console
e_ZoneSystemDebugQuery audioobject			: query all AudioObject's and write result summary to console
e_ZoneSystemDebugQuery entity					: query all Entities and write result summary to console
e_ZoneSystemDebugQuery rendernode			: query all RenderNode's and write result summary to console
e_ZoneSystemDebugQuery decal						: query all Decal's and write result summary to console
e_ZoneSystemDebugQuery entity bob.csv	: query all entities and save results to file bob.csv in comma separate value format for use in Excel
e_ZoneSystemDebugQuery entity console	: query all entities and print results to console
e_ZoneSystemDebugQuery entity log			: query all entities and print results to log
e_ZoneSystemDebugQuery +q bob					: copy query params from existing 3DEngine zone query with name 'bob', but still allow overrides below
e_ZoneSystemDebugQuery +p							: enable portal culling from main camera
e_ZoneSystemDebugQuery -p							: disable portal culling
e_ZoneSystemDebugQuery +o							: enable occlusion culling
e_ZoneSystemDebugQuery -o							: disable occlusion culling
e_ZoneSystemDebugQuery +f I E					: enable render node flag culling with include flags I and excludes flags E
e_ZoneSystemDebugQuery -f							: disable render node flag culling 
e_ZoneSystemDebugQuery +d N						: enable distance culling beyond N from the main camera
e_ZoneSystemDebugQuery -d							: disable distance culling
e_ZoneSystemDebugQuery +t N						: enable type culling with type N
e_ZoneSystemDebugQuery -t							: disable type culling
e_ZoneSystemDebugQuery +s X Y Z R			: enable sphere culling with position X,Y,Z and radius R
e_ZoneSystemDebugQuery -s							: disable sphere culling
e_ZoneSystemDebugQuery +b x y z X Y Z	: enable aabb culling with min x,y,z and max X,Y,Z
e_ZoneSystemDebugQuery -b							: disable aabb culling
e_ZoneSystemDebugQuery +c							: enable frustum culling from main camera
e_ZoneSystemDebugQuery -c							: disable frustum culling
e_ZoneSystemDebugQuery +a N						: copy main camera and override aspect ratio to be N for the camera used by the debug query

e_ZoneSystemDebugVisAreas description=Enable Debug/Profile Rendering of Zone System for VisAreas
e_ZoneSystemDebugZones description=Enable Debug/Profile Rendering of Zone System for Zones
e_ZoneSystemDumpVisAreasAndAreas description=Dump all Existing VisAreas/Areas into the console
e_ZoneSystemEnablTagsCulling description=Enable culling of objects by Tags.
e_ZoneSystemEnableAABBCulling description=Enable culling of object against aabbs
e_ZoneSystemEnableCulling description=Enable culling of objects (master flag to disable all culling operations
e_ZoneSystemEnableFlagCulling description=Enable culling of object against their flags
e_ZoneSystemEnableFrustumAgainstAABBCulling description=Enable culling of object's aabbs against camera frustums
e_ZoneSystemEnableFrustumAgainstOBBCulling description=Enable culling of object's OBBs against camera frustums
e_ZoneSystemEnableHiddenRenderNodeCulling description=Enable culling of render nodes that are hidden.
e_ZoneSystemEnableHierarchicalCulling description=Enable culling optimization to re-use culling results of objects higher in the hierarchy
e_ZoneSystemEnableHullCulling description=Enable culling of object against hulls consisting of planes
e_ZoneSystemEnableOcclusionCulling description=Enable culling of object against occlusion buffer
e_ZoneSystemEnablePortalCulling description=Enable culling of objects against portals (aka VisAreas)
e_ZoneSystemEnablePortalDistanceCulling description=Enable culling of Portals by their distance
e_ZoneSystemEnablePortalIntersectionCulling description=Enable culling of objects by Portal Intersection.
e_ZoneSystemEnableScreenSizeCulling description=Enable culling of object based on the projected screen size
e_ZoneSystemEnableSphereCulling description=Enable culling of object against spheres
e_ZoneSystemObjectsFullyContainedWithinVisAreaOptimization description=Optimization that avoids rendering of objects that are fully contained withing vis-areas that aren't directly visible
e_ZoneSystemPartition32BitThreshold description=Diameter of a Zone Partition after which 64bit precision should be used (setting this to 0 forces all operations as double)
e_ZoneSystemPartitionForce64Bit description=Force all Partitions to be 64 bit (to verify correctness and performance analyzes
e_ZoneSystemPartitionObjectCountThreshold description=Number of objects a Zone Partition must reach before the next smaller level is used
e_ZoneSystemVerifyBounds description=Set to 1 to enable debug code to catch broken logic in Partition BBox Updates
e_asteroidDumpHarvestableData description=Dumps a batch of harvestable logging data to the logfile
e_asteroidHarvestablesForceUpdate description=Forces an update harvestables spawned for streaming bubbles, skipping checking whether they've moved or not.
e_asteroidHarvestablesLogSpawning description=Log through cell generation
e_asteroidsDebugDraw description=Asteroid field debug draw.
1 = Show overview text of active fields
2 = Draw active cells
3 = Draw active cells and their indices
4 = Draw physicalized asteroids
5 = Draw bounding boxes of occupants
6 = Draw bounding boxes of occupants and physicalized asteroids

e_asteroidsFreezeBounds description=Freeze visible bounds on asteroid fields.
e_asteroidsGetNumPhysicalized description=Gets number of physicalized asteroids, together with asteroid field containing most of them.
e_asteroidsHarvestablesLogCellPurges description=Log if active cell purges are happening
e_asteroidsMaxDistanceKm description=Max distance to generate cells (in km). Will have a significant impact on performance.
e_asteroidsQueryCellsPerStep description=Number of asteroid cells to spawn in each query processing step.
e_asteroidsQueryDebugDraw description=Show overview text of active queries.
e_asteroidsStreamingBubblePortion description=The portion of a streaming radius that we use for spawning harvestables
e_asteroidsSyncUpdates description=Number of updates over which syncing of asteroid physics is distributed.
e_dump_loaded_statobjs description=Dumps all loaded statobjs to a file and to log
e_enablePhysClusterMeshes description=Enables physics cluster mesh geometry type (physicalized render geometry)
e_enableSQGrid description=Enables the scattering query grid to be processed
e_enableSdfLoadingFromCgf description=Enables SDF data to get loaded from CGF
e_globalCubemapDebugInfo description=Debug tracking of global cubemaps. Outputs light and OC name when multiple global cubemaps are submitted for rendering in the same frame.
e_hologramsUseFullScreenRT description=Always render holograms in full screen RT in RTT.
e_hologramsVisibleFromMainCam description=Render the objects flagged as holograms from the main camera.
e_levelStartupFrameDelay description=Set to number of frames to wait after level load before beginning fps measuring
e_levelStartupFrameNum description=Set to number of frames to capture for avg fps computation
e_lightWeightRenderNodes description=Turn Rendering of LightWeightRenderNodes on/off
e_lightWeightRenderNodesKeepPhysicsFrames description=Number of Frames to keep Physical Entities around when an object is out of range
e_lightWeightRenderNodesOnDemandPhysicsRange description=Range around camera where lightweight render nodes are physicalized
e_lightWeightRenderNodesShadows description=Turn Rendering of LightWeightRenderNodes on/off in shadow pass
e_planetCubemap description=Enable automated runtime cubemaps on/near planets.
e_planetCubemapCaptureDistanceMax description=Maximum distance between planet cubemap captures in meters.
e_planetCubemapCaptureDistanceMin description=Minimum distance between planet cubemap captures in meters.
e_planetCubemapCaptureDistanceMultiplier description=Multiplier on distance between planet cubemap captures.
e_planetCubemapDebug description=Show debug info on runtime planet cubemaps.
e_planetCubemapDebugForceRender description=Force the planet cubemap to be queued for processing every frame. (Only processes when previous one is finished)
e_planetCubemapExtentsMax description=Maximum size of the planet cubemap's bounds in meters.
e_planetCubemapExtentsMin description=Minimum size of the planet cubemap's bounds in meters.
e_planetCubemapFalloff description=Falloff on planet runtime cubemaps (between 0 and 1, where 0 means no falloff).
e_planetCubemapMinHeightAboveSurface description=Minimum height above the surface for planet cubemap captures.
e_planetCubemapProbeDistanceMultiplier description=Multiplier on distance between planet probe position updates (as a fraction of capture distance).
e_planetCubemapVisAreaOffset description=Distance outside the nearest exit portal to perform the capture when the camera is in a vis area.
e_renderNodesDebugDraw description=Turns off debug draw mode for RenderNodes
e_runtimeCubemapAllowManualUpdateOverride description=Allow manual updates to be triggered before the initial streaming update request
e_runtimeCubemapDebugDisplayInfo description=Usage [1] - Display various debug information about the processed and queued runtime cubemaps. Also renders cube at location of cubemap. 
Usage [2] - Gather and output additional logging for tracking how and when each cubemap was requested to update.
e_runtimeCubemapDebugReRenderLastProcessed description=Continuously re-queue and render the last processed runtime cubemap
e_runtimeCubemapDebugStep description=Repeatedly run the given cubemap processing step on the current cubemap.
e_runtimeCubemapDebugStepFilter description=Filter e_runtimeCubemapDebugStep to only execute on the specified runtime cubemap
e_runtimeCubemapDebugUpdateFilter description=Filter runtime cubemap updates (based on cubemap name) to only allow processing for the specified cubemap.
e_runtimeCubemapEnable description=Allow queuing and rendering of runtime cubemaps.
e_runtimeCubemapEnableDebugVerify description=Enable various debug code to verify specific stages of cubemap processing. 
Usage [1] - Capture various debug information about runtime cubemap commands, and output if specific assert triggers. 
Usage [2] - Check whether a recent processed cubemap exists in the internal queued lists again.
e_runtimeCubemapEnableOfflineCapture description=Allow runtime system to be used for offline cubemap generation
e_runtimeCubemapFadeDuration description=Number of seconds taken for a runtime cubemap to fade in regenerated cubemaps.
e_runtimeCubemapFireBurnPercentageMinTrigger description=The current fire burn percentage value has to exceed this minimum in order to be considered for triggering cubemap update
e_runtimeCubemapFireBurnPercentageRatioTrigger description=Ratio that the fire burn percentage must change by since last capture in order to queue another update.
e_runtimeCubemapLodTargetSizeMult description=LOD face area target size multiplier to force rendering of objects at lower quality LODs than main render view.
e_runtimeCubemapMaxDiffuseBounceLightIterations description=Number of diffuse bounce lighting iterations for runtime cubemaps, can override per entity number of bounces param.
e_runtimeCubemapProcessingStepsPerFrame description=Number of steps (that does not involve regular scene rendering ) to process in a single frame for the runtime cubemap.
e_runtimeCubemapScreenSizeCull description=Any cubemaps that have a screen size below this value will be culled and not requested to update.
e_runtimeCubemapScreenSizeRatioTrigger description=Ratio that the screen size of the runtime cubemap must change by since last capture in order to queue another update.
e_runtimeCubemapSunAngleThreshold description=The sun angle (in degrees) that needs to change since last update (in local space), in order to re-render cubemap.
e_runtimeCubemapSyncBatchJobsEnable description=Enable syncing on LightsAndVisareas job during rendering of cubemap faces, rather than a general barrier.
e_runtimeCubemapUseTextureStreaming description=Register cubemap in texture streaming system, which will determine when to trigger rendering and releasing of cubemap
e_shadowMipMinCinematic description=The MIP level of the ShadowPool Resolution to which the light type will be culled.
e_shadowMipMinDecorative description=The MIP level of the ShadowPool Resolution to which the light type will be culled.
e_shadowMipMinKey description=The MIP level of the ShadowPool Resolution to which the light type will be culled.
e_shadowMipMinSecondary description=The MIP level of the ShadowPool Resolution to which the light type will be culled.
e_shadowMipMinStandard description=The MIP level of the ShadowPool Resolution to which the light type will be culled.
e_shadowMipStaticCinematic description=The MIP level of the ShadowPool Resolution to which the light type will be static.
e_shadowMipStaticDecorative description=The MIP level of the ShadowPool Resolution to which the light type will be static.
e_shadowMipStaticKey description=The MIP level of the ShadowPool Resolution to which the light type will be static.
e_shadowMipStaticSecondary description=The MIP level of the ShadowPool Resolution to which the light type will be static.
e_shadowMipStaticStandard description=The MIP level of the ShadowPool Resolution to which the light type will be static.
e_streamCgfMinLodBias description=Minimum fractional LOD bias for CGFs in resource streamer.
e_streamPrecacheDist description=Distance value which is used when pre-caching assets, e.g. during trackview sequences
e_streamSkinMinLodBias description=Minimum fractional LOD bias for Skins in resource streamer.
e_streamingCallbackSyncOnBatchJobs description=Run async object streamer callback syncs on batch jobs.
Note! Not enabled when the graphics backend is D3D regardless of the value of this CVar.
e_testrunnerFlownodes description=Loads testrunner flownodes from DevTools.
ea_bet.increaseBet description=If Server-viewport is enabled (-server3d) , will watch the player with supplied identifier string (EntityID, Player Name, or Player Index) -- no parameters stops watching and closes render window
ea_bet.log description=Enable/Disable EABetting Logging
ea_bet.logAllBets description=Print out all betting information.
ea_frontend.applyFilter description=Apply a Filter to GameMode Selection. Usage: Provide Integer for each filter to apply in same or follow-up commands, use -1 to clear filters.
ea_frontend.customSetting.matchCycling description=Overrides enabled status of match cycling in custom games
ea_frontend.customSetting.scoreLimit description=Overrides score limit custom setting of current game mode
ea_frontend.customSetting.teamBalancing description=Overrides enabled status of team balancing in custom games
ea_frontend.customSetting.teamSwitching description=Overrides enabled status of team switching from the scoreboard in custom games
ea_frontend.customSetting.timeLimit description=Overrides time limit custom setting of current game mode
ea_frontend.debugRelease description=Enable to debug the frontend as if it was a release version.
ea_frontend.enableMapSelection description=Enable map selection
ea_frontend.forceReady description=Force Ready Status
ea_frontend.log description=Enable/Disable Playable Area Debug Logging
ea_frontend.useVehicleLoadoutInHangar description=Enable/Disable using the saved loadout on the spawned vehicle in the hangar.
ea_lobby.log description=Enable/Disable EALobby logging
ea_lobby.reconnect description=Attempt to reconnect. Must be used after Frontend is ready.
ea_lobby.sync description=Attempt to sync the lobby. Only for Custom Lobbies.
ea_lobby_forceOffline description=Enable/Disable using EALobbyOffline
ea_logEverything description=Enable / disable all EA logging cvars
ea_objectives.Complete description=Completes next available objective
ea_objectives.StartNextPhase description=Increment Phase Number by X. Can be used to go back phases with negative values. Usage: ea_objectives.StartNextPhase <Increment> -- Default: 1
ea_objectives_interactable.log description=Enable/Disable EA Interactable Objectives Logging
ea_pickups.log description=Enable/Disable logging the pickup module
ea_playablearea.active description=Enable/Disable Playable Area ExitReaction. Usage: ea_playablearea.active <0 or 1> -- Default: Toggles Playable Areas
ea_playablearea.debugdraw description=Show debug information and boundary for EAPlayableAreas. 1=OnScreenText+VisibleBoundary, 2=OnScreenText Only
ea_playablearea.log description=Enable/Disable Playable Area Debug Logging
ea_playablearea.svenabled description=(Authority only) Enable/Disable Playable Area. Clients can set by RemoteCmd: ea_playablearea.active
ea_player.log description=Enable/Disable PlayerEAUIProvider Logging
ea_race.triggerDNF description=Trigger DNF after countdown. Usage: Provide Float to set timer, or nothing to use gamerules settings.
ea_rounds.log description=Enable/Disable EARounds logging
ea_scoring.give description=Gives score to a player. Command syntax : % s <entityName> <score> < score - type 0..9>
ea_spawn.advanceGunGameArmorLevel description=Advances the armor level for gun game. Positive to advance forward and negative to advance back.
ea_spawn.advanceGunGameArmorSet description=Advances the armor set for gun game. Positive to advance forward and negative to advance back.
ea_spawn.advanceGunGameWeaponLevel description=Advances the weapon level for gun game. Positive to advance forward and negative to advance back.
ea_spawn.overridePlayerLoadoutIndex description=Overrides the player loadout index if set.
ea_spawn.overridePlayerSpecialLoadout description=Overrides the player loadout index if set.
ea_spawnscreen.enable_fps_equipment description=Enable/Disable Customize equipment menu on the spawnscreen
ea_spawnscreen.enable_fps_loadout description=Enable/Disable Selecting loadouts on the spawnscreen
ea_spawnscreen.log description=Enable/Disable EAUISpawnScreenComponent Logging
ea_state.overrideGameStartTimer description=Override for game mode pre match game start timer. Disabled if -1.
ea_state.overrideRequiredPlayerCount description=Override for game mode required player count. Disabled if -1
ea_team.change description=Change team via teamId or auto fill -- Usage: ea_team.change [1/2]. Default: Provide no teamId to switch team (assumes 2 teams)
ea_team.debug description=Prints debug information for teams into output log. Usage: 1 to display all teams with info, 2 to display all teams and their players.
ea_team.log description=Enable/Disable EA Teams LWogging.
ea_team.rename description=Provide a new name and it will change your own team's name. Alternatively provide team Id and then the new name to change a specif team's name. Usage: ea_team.rename MyNewTeamName, ea_team.rename 0 MyNewTeamName
ea_team.stopBeingSmart description=If enabled, will force any game mode attempting to use SmartBalancing to use regular Balancing. Hack to address broken team balance phase
ea_transport.log description=Enable/Disable EA Transport Logging
ea_uimsg.timeoutEnabled description=Enable/Disable timeout of UI Messages
ea_victoryConditions.changeTime description=Changes the game mode timer by the value provided (in minutes). Usage: ea_victoryConditions.changeTime <Minutes>
ea_victoryConditions.log description=Enable/Disable VictoryConditions Logging
ea_victoryConditions.win description=Makes a player win the game. If in a team game the players team will win. Command syntax : % s <entityName>
ea_vote.log description=Enable/Disable EAVotingModule logging
ea_vote.vote description=CIG_TODO DESCRIPTION
eat description=Refill hunger stat by 1000 or specified amount. [ActorName, HungerAdjust]
ec_crafter.clearOutput description=Cause the nearest crafter to clear its output item if any, making room for another item to be crafted. Usage: g_crafter.clearOutput
ec_crafter.debugAnalytics description=Used to log crafting analytics events to the console. Default: 0 (off). Set to 1 to activate.
ec_crafter.debugDist description=Range in which to debug crafters.
ec_crafter.tryCraftIndex description=Cause the nearest crafter to try to craft its Nth recipe (zero-indexed). Usage: g_crafter.tryCraftIndex [int: recipe index]
ec_emotion.showDebug description=If enabled, shows on screen information for the emotion component
ec_harvestable.clear_provider_location_filter description=Clears the harvestable provider locations filter.
ec_harvestable.debug_OC_slots description=Debugs harvestable OC slots near the player.
1: filled slots
2: empty slots
3: all slots
ec_harvestable.debug_OC_slots_distance description=Distance in meters to show harvestable OCs when using debug_OC_slots. Use the Harvestable slots debugGUI for tagpoint distance filter.
ec_harvestable.debug_OC_slots_streaming description=If > 0, shows extra information related to Zones and Streaming Groups when using debug_OC_slots.
ec_harvestable.debug_analytics description=Used for debugging harvestable analytics events by printing the JSON to the console. Default 0 = OFF, 1 = ON.
ec_harvestable.debug_ecosystems description=If > 0, debugs ecosystem cells
ec_harvestable.debug_provider_depletion description=Shows debug info for harvestable depletion
ec_harvestable.debug_provider_location_filter.id description=ID component of harvestable provider location filter. Location filter is used to filter harvestable provider logging and debug visualization such that it only includes location(s) matching the filter.
ec_harvestable.debug_provider_location_filter.x description=X component of harvestable provider location filter. Location filter is used to filter harvestable provider logging and debug visualization such that it only includes location(s) matching the filter.
ec_harvestable.debug_provider_location_filter.y description=Y component of harvestable provider location filter. Location filter is used to filter harvestable provider logging and debug visualization such that it only includes location(s) matching the filter.
ec_harvestable.debug_provider_location_filter.z description=Z component of harvestable provider location filter. Location filter is used to filter harvestable provider logging and debug visualization such that it only includes location(s) matching the filter.
ec_harvestable.debug_provider_locations description=Shows harvestable locations near the player, [0=Off, 1=On]
ec_harvestable.debug_provider_locations_distance description=Distance in meters to show harvestable locations when using debug_provider_locations
ec_harvestable.depletion_enabled description=Enables harvestable depletion using the service backend and static data
ec_harvestable.enable_entity_creation_analytics description=Enable the cigTrace entity creation analytics events for harvestables. Designed to measure potential load on PES backend.
ec_harvestable.log_spawns description=Logs harvestable spawn requests, outcomes, and when harvestables despawn. 0 = no logging, 1 = basic logging, 2 = include distance from player when despawned on client.
ec_harvestable.print_cell_initial_depletion description=Logs the super GUID of the closest provider to the client, in the server console, and prints the initial cell depletion data for the cell the client is in
ec_harvestable.regenerate_OC_slots description=Regenerates the contents of the harvestable OC that owns the nearest harvestable tag point.
ec_harvestable.set_provider_location_filter description=Sets the harvestable provider locations filter, which is used to filter harvestable provider logging and debug visualization such that it only includes location(s) matching the filter.
Usage: ec_harvestable.set_provider_location_filter [int: x] [int: y] [int: z] [int: id]
Alternative usage: use the letter 'c' in place of any of the parameters to clear that parameter to the default value (which is not zero!)
ec_harvestable.slot_respawn_time_override description=If > 0, overrides the slot respawn time for all slot spawned harvestables to this value (in seconds), ignoring their dataforge settings.
E.g a value of 10 would cause all slot spawned harvestables to respawn in 10 seconds.
Should be entered on the server if you need to change it at runtime, or in the user.cfg in dev builds.
ec_harvestable.spawning_determinism description=If > 0, sets the seed for each provider / slot spawn, which is usually random, and controls harvestable locations
ec_harvestable.spawning_enabled description=Enables spawning from harvestable providers and slots
ec_harvestable.special_harvestable description=Enables spawning of special harvestables for seasonal events, multiple events possible by using commas to separate them e.g. event_1,event_2,event_3
ec_harvestable.start_creation_stats_capture description=Starts capturing stats about how many entities the harvestable system is creating. Use 'ec_harvestable.stop_creation_stats_capture' to stop the capture and log the results.
ec_harvestable.stop_creation_stats_capture description=Stops the currently running capture that was started by 'ec_harvestable.start_creation_stats_capture' and logs the results.
ec_lootable.blockAllInteractions description=If enabled, all interactions in an entity with a lootable container will be hidden if local player doesn't have access.
ec_lootable.showDebug description=If enabled, shows on screen information for the lootable component
ec_mineable.debug description=If enabled, shows on screen information for the mineable component. Set to 2 to ignore itemport mineables
ec_mineable.log_transactions description=If enabled, adds logging for mining transactions
ec_mineable.stall_prevention description=If enabled, a series of preventive fixes designed to avoid an exploit are enabled. Disable if anomalous behaviour is expected.
ec_simple_rotation_dump_state description=Dump the current state of simple rotation objects
ec_spawner.debug description=If enabled, shows on screen general debug for CEntityComponentSpawner.
ec_spawner.debugRange description=The range from the player for showing debug for entities with CEntityComponentSpawner, if <= 0 it will show the debug for all relevant entities.
ec_spawner.showRespawnTimers description=If enabled, shows on screen the respawn timers for itemports in the CEntityComponentSpawner.
ec_toolArm.debugDrawState description=Shows tool arm debug state. 
Default = 0, 
Draw List = 1 
 Draw at world pos = 2
ec_toolArm.debugLogStateChanges description=Logs tool arm state changes. Default=0
echo description=Echo's the text back to the console and log files.
ent_GroupEntity.DebugEntityNameFilter description=Filter entity effects debug information based on (partial and case-sensitive) entity name comparison
ent_GroupEntity.debugShow description=Debug render group entity member names.
0 = off, 1 = show current members, 2 = show recently removed members
entitysystem.allocator.page.heap description=Use PageHeap mode for the Entity Allocator to catch memory corruptions
eocc_updateFreq_internalRuleEnabled description=If 1, CEntityObjectComponentCharacter will apply update frequency based on lod; otherwise it will only use externally set update frequency.
eocc_updateFreq_maxLodAsVisible description=Maximum lod at which CEntityObjectComponentCharacter, disables any reduced update frequency (same as being visible).
eocc_updateFreq_minLodAsInvisible description=Minimum lod at which CEntityObjectComponentCharacter decides it is too small to be seen, allowing reduced update frequency etc.
es_AggregateEnterInRangeRequiredScreenSizeInPixel description=Size in Pixels required for aggregates to be considered in range
es_AggregateIsVisibleLeaveDelay description=Number of frames to delay before an aggregate/entity/component is considered no longer IsVisible
es_AggregateLeaveInRangeRequiredScreenSizeInPixel description=Size in Pixels required for aggregates to start leave InRange (must be less/equal to es_AggregateEnterInRangeRequiredScreenSizeInPixel)
es_DebrisLifetimeScale description=Usage: es_DebrisLifetimeScale 1.0
es_DebugEntitiesAtOrigin description=Debug active physicalized entities at the origin, a common cause of bugs and framerate issues
es_DebugEntityUsage description=Draws information to the screen to show how entities are being used, per class, including total, active and hidden counts and memory usage
Usage: es_DebugEntityUsage update_rate
update_rate - Time in ms to refresh memory usage calculation or 0 to disable
es_DebugEntityUsageFilter description=Filter entity usage debugging to classes which have this string in their name
es_DebugEvents description=Enables logging of entity events
es_DebugFindEntity description=
es_DebugTimers description=This is for profiling and debugging (for game coders and level designer)
By enabling this you get a lot of console printouts that show all entities that receive OnTimer
events - it's good to minimize the call count. Certain entities might require this feature and
using less active entities can often be defined by the level designer.
Usage: es_DebugTimers 0/1
es_DetectConcurrentComponentRegister description=Turn on a Fatal to find concurrent component creation
es_EntityLifetimeDebug description=Toggles the Entity Lifetime Debug component.
Usage: es_EntityLifetimeDebug [0/1]
es_EntityLifetimeDebug_ClassFilter description=Filters the addition of the Entity Lifetime Debug component to the filtered entity classes (as a list of comma separated substrings, case-insensitive).
Usage: es_EntityLifetimeDebug_ClassFilter = npc, gladius
Default is off (no filter)
es_EntityUpdatePosDelta description=Indicates the position delta by which an entity must move before the AreaManager updates position relevant data.
Default: 0.1 (10 cm)
es_ExportPhysicsGridVoxelData description=If set, physics proxy will export the voxel data to a file when creating a local physics grid in the editor
es_FarPhysTimeout description=Timeout for faraway physics forceful deactivation
es_HitDeadBodies description=specifies whether dead bodies are affected by bullet hits (0 or 1)
es_ImpulseScale description=Usage: es_ImpulseScale 0.0
es_MaxImpulseAdjMass description=Usage: es_MaxImpulseAdjMass 2000.0
es_MaxPhysDist description=Physical entities farther from the camera than this are forcefully deactivated
es_MaxPhysDistCloth description=Cloth entities farther from the camera than this are forcefully deactivated
es_MaxPhysDistInvisible description=Invisible physical entities farther from the camera than this are forcefully deactivated
es_MaxPhysDistToTimeout description=Rigid entities further away than this are forced to timeout
es_MinImpulseVel description=Usage: es_MinImpulseVel 0.0
es_SkipAttachLocksDuringSpawn description=Skip locks during CEntity::AttachChild when inside Spawn Batches (as they should not be needed there).
Default: 0 (off)
es_UpdateScript description=Usage: es_UpdateScript [0/1]
Default is 1 (on).
es_UsePhysVisibilityChecks description=Activates physics quality degradation and forceful sleeping for invisible and faraway entities
es_aggregates_debug_draw description=Enables Debug Draw for Aggregates
es_assert_on_illegal_entity_access_deletion description=Enables/Disables asserts when Entity Illegal accesses happen during deletion
es_assert_on_illegal_entity_access_spawning description=Enables/Disables asserts when Entity Illegal accesses happen during spawning
es_auto_destroy_expensive_threshold description=General threshold for physics reporting expensive entities (in ms, set <= 0 to disable to fully disable the feature)
es_bboxes description=Toggles entity bounding boxes and displays entity names in game.
Usage: es_bboxes [0/1/2]
Default is 0 (off). Set to 1 to display render bounding boxes. Set to 2 to display streaming and update bounding boxes.
es_bboxes_classfilter description=Set an entity class filter es_bboxes to draw, works with substrings.
Usage: es_bboxes_classfilter = human
Default is off (no filter).
es_bboxes_componentfilter description=Set an entity component filter es_bboxes to draw, works with component id such as 'Vehicle' or 'EntityPhysicsController'.
Usage: es_bboxes_componentfilter = Vehicle
Default is off (no filter).
es_bboxes_drawPreciseRenderBounds description=Toggles es_bboxes drawing precise render bounds, as opposed to the Entity Rendering Radius which is drawn by default.
Usage: es_bboxes_drawPreciseRenderBounds [0/1]
Default is 0 (off).
es_bboxes_drawRadiusText description=Toggles es_bboxes drawing additional debug text about the rendering or streaming radius.
Usage: es_bboxes_drawRadiusText [0/1]
Default is 0 (off).
es_bboxes_maxdist description=Set the max dist for es_bboxes to draw at.
Usage: es_bboxes_maxdist = 10
Default is 0 (no max dist).
es_bboxes_namefilter description=Set an entity name filter es_bboxes to draw, works with substrings.
Usage: es_bboxes_namefilter = bob
Default is off (no filter).
es_bboxes_tagfilter description=Set an entity tag filter es_bboxes to draw, works with substrings of tag names.
Usage: es_bboxes_tagfilter = area
Default is off (no filter).
es_breaklog description=allow for logging of debug information into the console
es_change_auto_destroy_expensive_rule description=Change one physics expensive entities rule. Usage: es_change_auto_destroy_expensive_rule <index> <threshold> <frames>
Use es_show_auto_destroy_expensive_rules to see all active rules.
es_check_illegal_entity_access_deletion description=Enables/Disables Entity Illegal access checks during deletion
es_check_illegal_entity_access_spawning description=Enables/Disables Entity Illegal access checks during spawning. Only disable if absolutely necessary, CTG-15602 will remove the option completely.
es_crash_on_kinematic_cargo description=If enabled, the game will throw an error if a cargo box is made kinematic.
es_debugDrawEntityIDs description=Displays the EntityId of all entities.
Default is 0 (off), any other number enables it.
Note: es_bboxes must be set to 1 also (or else the EntityId won't be displayed)
es_debugDrawEntityTags description=Displays the Tags of all entities that have any.
Default is disabled (0), enabled(1), full(2).
Note: es_bboxes must be set to 1 also (or else the tags won't be displayed)
es_debugEntityCreation description=Debug log individual entities creation
es_debugEntityIdGeneration description=Debug entity id generation
es_debugEntityLifetime description=Debug log entities spawn and deletion
es_debugOwnership description=Debug entity ownership
es_debug_activate_location description=Activate (create an update bubble there) a certain location
0: to disable again
-1: to activate all locations
es_debug_activate_locations_without_deactivating_others description=Allow es_debug_activate_location calls to stack (i.e. don't deactivate previously created fake update bubbles)
es_debug_aggregate_radius_estimates description=Checks pre-spawning streaming radius estimates against the actual aggregate radius of the spawned entity.
Debugbreaks if they differ by more than the specified amount. Eg es_debug_aggregate_radius_estimates=0.25 means debugbreak if >25% difference between the estimate and real value
-1 to disable
es_debug_event_callstacks description=Enables tracking and storing event callstacks for debugging
es_default_destroy_on_never_streamed_in_timeout description=Default auto-bury timeout in seconds for entities created with EEntityLifeTimePolicy::DestroyOnStreamOut
es_default_streaming_radius_estimate description=Default streaming radius in meters
es_densityManagerDebug description=If enabled, found cluster will be rendered
es_densityManagerDeleteCenterSpawn description=Delete rogue entities spawned at 0,0,0
es_densityManagerEnabled description=Enable Density Management for Entities
es_densityManagerEnabledInEditor description=1 = Enables Density Management in Editor if also es_densityManagerEnabled = 1.
NOTE: As of May 2025 this is an experimental feature and could have unforeseen consequences. Proceed with caution and report any issues you discover.
es_densityManagerPlanetCenterBlackHole description=If enabled, We have a black hole inside Planets to destroy entities ending up there
es_densityManagerPlanetCenterBlackHoleRadius description=Radius of the planet black hole
es_densityManagerPlayerRecovery description=Recover player when fallen X meters under terrain, set to 0 disable.
es_densityManagerUnattendedVehicleCleanupEnabled description=Enable Density Management subsystem for cleaning up unattended vehicles
es_density_manager_on_duplicate_entities_in_filter_request description=Determines operations when duplicating entities are submitted to filter. (0: DoNothing; 1: Assert, 2: Auto fixup and progress)
es_density_manager_streaming_filter_enabled description=Enables OC Streaming Filtering Entities (0: Off; 1: On)
es_destroy_unattached_itemports description=If enabled, will destroy the unattached item port entities in finalize.
es_doFinalizeParentChecks description=If enabled, sanity check parent/owner of each entity in spawn batch Finalize
es_dump_child_ownership description=Dumps ownership of an entity and of all those entities that it owns
Usage: es_dump_child_ownership <entity name>|<entity id>

es_dump_entities description=Dumps current entities and their states!
Usage: es_dump_entities [<entity name>|<entity id>|<class name>] [<flags>]*
<entity name>|<entity id>: Filter output to only single entity
<class name>: Filter output to only entities of the supplied entity class
<flags>: Use '+'/'-' followed by combinations of the following flags to enable/disable them (all on by default):
  * = all flags
  h = hidden
  i = initializing
  r = removing
  g = garbage
  n = network replicated
  c = client/server only
  s = show status
  p = show pos
  f = show flags
  t = show totals
  u = show tags

es_dump_entity_classes description=Dumps all entity classesUsage: es_dump_entity_classes
es_dump_entity_classes_in_use description=Dumps all used entity classesUsage: es_dump_entity_classes_in_use [<flags>]*
<flags>: Use '+'/'-' followed by combinations of the following flags to enable/disable them (all on by default):
  * = all flags
  h = hidden
  i = initializing
  r = removing
  g = garbage
  n = network replicated
  c = client/server only

es_dump_entity_source description=Log the source object container for an entity. Usage: es_dump_entity_source <entity name>|<entity id>
es_dump_light_counts description=Dumps out a summary of Light entities and their source OCs - useful for finding potential places to add LightGroups
es_dump_owned description=Dumps the entity and all entities in its ownership hierarchy
Usage: es_dump_owned <entity name>|<entity id>

es_dump_owners description=Dumps the entity and all that own it
Usage: es_dump_owners <entity name>|<entity id>

es_dump_ownership description=Dumps ownership of named entity
Usage: es_dump_ownership <entity name>|<entity id>

es_enableServerAuthorityCheck description=Enable/disable debug check that ensures a server or single player client gets authority over all entities it spawns
es_enableSpawnParallelAuthorityFlush description=Enable/disable flushing authority change events in parallel after spawning. If disabled the events will be flushed serially
es_enableUnremovablePlayerFatal description=If enabled, MP server code will fatal on attempting to remove the player entity of a connected client
es_enable_async_entity_creation description=Enable entity creation on a background job
es_enable_async_entity_deletion description=Enable entity deletion on a background job
es_enable_skipping_hidden_entities description=Enable to skip queueing events to hidden entities
es_entity_logSpawnbubble description=If enabled, will log the setting of spawn position of update bubble.
es_fatalAtSpawnBatchSize description=If a spawn batch is above this size, fatal error
es_globalDynamicScopeIdRequestAttempts description=Number of times a request to the Id Broker will be re-tried if it returns errors getting IDs
es_globalDynamicScopeIdRequestTimeout description=Time the GEID broker will wait for a GEID request before a FatalError is raised
es_globalDynamicScopeIdServerSizeMin description=Minimum number of remaining continuous Global Dynamic scope entity ids before server will request more from id broker
es_globalDynamicScopeIdServerSizeRequest description=Number of continuous Global Dynamic scope entity ids that will be requested from the Id broker each time
es_hierarchyAsserts description=Enable asserts for the entity hierarchy
es_listSocpaksContainingComponent description=
es_logComponentTimes description=Usage: es_logComponentTimes [name | subsystem | init | postinit | sbc | rwes | ufes | done | shutdown]. If optional param is passed, results are sorted by that function
es_logComponentTimesToFile description=Usage: es_logComponentTimesToFile <filepath> [name | subsystem | init | postinit | sbc | rwes | ufes | done | shutdown]. Filepath must be a valid path for the log file (note, use '/' even on windows). If optional param is passed, results are sorted by that function
es_log_collisions description=Enables collision events logging
es_msRemovalMinTimeForLogging description=The minimum cumulative per-frame time in ms that triggers a 'slow entity removal' analytics event
es_msSpawnBatchLongFinalizeFrameMinLoggingTime description=The minimum time in ms that the sum of spawn batches finalize steps can take to process during a frame, for it to be considered too long and to be logged to Kibana [EntitySpawnBatch_LongFinalizeFrame].
es_msSpawnBatchMinTimeForLogging description=The minimum time in ms that a spawn batch must take to process from eBS_Spawning state -> eBS_Finalize, for it's event [SpawnBatch] to be logged to Kibana.
es_msSpawnBatchNonLoggingSendTimeInterval description=Interval in ms for accumulated batch data [SpawnBatch_NonLogged] telemetry events to be sent to Kibana.
es_networkTeleportTimeout description=Determines how long the EntityTeleportManager will wait before considering a teleport request to have timed out
es_networkUpdateDeterministicTransforms description=If enabled, transfroms with the XFORM_DETERMINISTIC flag will be replicated to network
es_oc_editor_streaming_enabled description=Enables prototype OC streaming in editor (disables game mode if enabled)
es_oc_streaming_debug description=Enables OC Streaming debug capabilities
es_oc_streaming_enable_priority_batches description=Enables priority batches in OC streaming
es_oc_streaming_enabled description=Enables OC Streaming (0: Off; 1: On for megamaps set to 'Always'; 2: On for megamaps set to 'ForTesting')
es_oc_streaming_unload_throttle description=Limit of StreamingGroups to delete via OC streaming per Frame (-1 to disable throttling)
es_parallelSpawnQueueCount description=Number of spawn queues to use. Clamped between 1 and worker-thread-count
es_profileentities description=Usage: es_profileentities 1,2,3
Default is 0 (off).
es_resetComponentTimes description=
es_serializedComponentLockFinalizeHack description=Enable/disable serialized component lock during finalize for speedup
es_show_auto_destroy_expensive_rules description=Display all active physics expensive entities rules
es_skipRemovingEntitiesDuringSpawn description=If enabled, completely skip the spawn of any entity that is already marked for removal
es_trace_unattached_itemports description=If enabled, will cigTrace the unattached item port entities in finalize.
es_useOCLogicalLinkAttachments description=If enabled, attach immovables to OCs using logical link. If disabled, use offset attachment
es_use_strict_ecus_check description=Turn on a asserts to find cross ECUS calls
es_verify_ecus_group_updates description=Enable entity deletion on a background job
es_warnAtSpawnBatchSize description=If a spawn batch is above this size, log a warning
ev_debug_events description=event logging flags
0: off
1: stats (screen)
2: stats (console)
4: stats (dump to log)
8: log each event
ev_debug_events_entity description=Name filter of entities to debug, seperated with |
'-<filter>' to remove a match
'<filter>' to only display a match
ev_debug_events_events description=Name filter of events to debug, seperated with |
'-<filter>' to remove a match
'<filter>' to only display a match
ev_debug_timeout description=timeout for stats display (seconds)
ev_missions.debugEventData description=If enabled, logs to console the data received by the EV mission spawner
ev_missions.enable description=Enable environmental missions, interdictions and global events, needs to be enabled on boot
ev_missions.forceDisableInterdiction description=Force disable the interdiction system
ev_missions.globalMissionLimitSpawnCheck description=When enabled EV mission spawns will be prevented while the global limit has been reached.
ev_missions.locationAreaCheckDistance description=When greater than 0 EV mission spawns will be prevented if location database area is within the given distance.
ev_missions.maxMissions description=The total number of EV missions that can be currently active
ev_missions.maxMissionsPerPlayer description=The total number of EV missions that can be currently active on one player
ev_missions.missionProximityCheckDistance description=When greater than 0 EV mission spawns will be prevented if another mission entity is within the given distance.
ev_missions.missionSpawnedEntityProximityCheckDistance description=When greater than 0 EV mission spawns will be prevented if any mission spawned entities are within the given distance.
ev_missions.playerMissionLimitSpawnCheck description=When enabled EV mission spawns will be prevented for a player while that player's limit has been reached.
ev_missions.removeNonRequestedMissions description=If enabled, will remove any environmental missions that weren't requested by the EM manager (eg ones persisted from previous crashed DGSs)
ev_missions.roomIntersectionSpawnCheck description=When enabled EV mission spawns will be prevented if the spawn point is inside a room.
ev_missions.spawnDistanceMax description=The maximum distance (in meters) that the mission should be spawned from the target player
ev_missions.spawnDistanceMin description=The minimum distance (in meters) that the mission should be spawned from the target player
exec description=executes a batch file of console commands
exec_on_demand description=delayed execution of a batch file of console commands
faction_map_dump description=Outputs the faction relationship map to the log (as a tab spaced table)
fake_login_queue_pos description=Set fake position in the login queue (ignored if 0)
ffs_PlayEffect description=Play force feedback effect, passed by name as first parameter
ffs_Reload description=Reload force feedback system data
ffs_StopAllEffects description=Stop force feedback effect, passed by name as first parameter
ffs_debug description=Turns on/off force feedback system debug.
fg_InspectEntity description=Inspects the specified Entity graph
fg_Inspector description=Toggles FlowGraph System DefaultInspector.
Usage: fg_Inspector [0/1]
Default is 0 (off).
fg_SystemEnable description=Toggles FlowGraph System Updates.
Usage: fg_SystemEnable [0/1]
Default is 1 (on).
fg_abortOnLoadError description=Abort on load error of flowgraphs
2:abort, 1:dialog, 0:log only
fg_debugmodules description=Display Module debug info.
0=Disabled1=Modules only2=Modules + Module Instances
fg_debugmodules_filter description=Only debug modules with this name
fg_executeModule description=Runs a flowgraph module with optional parameters. 
Usage: fg_executeModule <ModuleName> param1 param2 ...
fg_iDebugNextStep description=Update flowgraph debug by one step.
fg_iEnableFlowgraphNodeDebugging description=Toggles visual flowgraph debugging.
fg_inspectorLog description=Log inspector on console.
fg_noDebugText description=Don't show debug text [0/1]
Default is 0 (show debug text).
fg_reloadModules description=Reload Module xml files
fg_stopFlowGraph description=Stops the flowgraph and resets all the modules
fl_idleUpdateDistance description=Distance the follow position has to move before we start following, when idle
fl_matchSpeedTime description=Match the leader speed when getting this close (moving at the current speed) to the follow position
fl_maxFollowAngleUpdateTime description=Time to wait before updating the follow angle whilst moving (in seconds)
fl_minConeRotationSpeed description=Speed the leader has to move to update the cone rotation
fl_movingUpdateDistance description=Distance the follow position has to move before we update it, when moving
fl_numRaysPerSide description=Number of extra rays outside directly behind the direction of travel
fl_rayAngleDiff description=Angle difference between rays (in degrees)
fl_rayForwardDist description=Distance to project the ray forward
fl_targetMoveTime description=Desired time to reach target (use to select best speed)
flash_report_callback_dispatch description=Report when a flash callback is dispatched, giving its name. Bit field: 1 for UIController dispatches, 2 for UIOwner dispatches, 3 for both.
foip.debugEnabled description=Enables debug drawing
foip.echoCancellationEnabled description=Enables echo cancellation on voice transmission
foip.gainControlCompressionGaindB description=Sets compression gain amount (dB) for automatic gain control
foip.gainControlEnabled description=Enables automatic gain control on voice transmission
foip.gainControlTargetdB description=Sets target level (dB) for automatic gain control - note the values are inverted so a value of 3 is -3dB
foip.noiseSuppressionEnabled description=Enables noise suppression on voice transmission
foipconnection.dump_connection_info description=Dump information of current connection information.
fx_actor.groundTint.enable description=Enable or disable ground tinting of actor effects
fx_actor.underground.draw description=Debug drawing for actor underground effects
fx_actor.underground.enable description=Enable or disable actor underground effects
fx_character.allowSameEffect description=Allow a skeleton animation to spawn more than one instance of an effect with the same name on the same instance
fx_character.groundTint.enable description=Enable or disable ground tinting of character effects
fx_character.logDebug description=Dump log messages when character effects are handled.
fx_cloudDensity.Debug description=Toggle the debug window for cloud density
fx_cloudDensity.enable description=Enables readback of cloud density
fx_groundEffects.debug description=Enable/disable logging and debug GUI for ground effects
fx_groundEffects.enable description=Sets whether ground effects are enabled. 0 = Disabled, 1 = Enabled
fx_groundEffects.enableEffects description=Sets whether the vfx are displayed. 0 = Disabled, 1 = Enabled
fx_groundEffects.enableWaterSimInteraction description=Sets whether the water interactions are enabled. 0 = Disabled, 1 = Enabled
fx_groundEffects.legacy.debug description=Enable/disable logging for GroundEffects (2 = use non-deferred ray-casting)
fx_groundEffects.thrusters.debug description=Enable/disable logging and debug GUI for thruster ground effects
fx_groundEffects.thrusters.directionSmoothFactor description=Sets the smooth lerp between previous and current thruster directions
fx_groundEffects.thrusters.enable description=Sets ship ground dust effect enabled. 0 = Disabled, 1 = Thruster, 2 = Ship(Legacy)
fx_groundEffects.thrusters.wakeCutoffStrength description=A scale value that defines at what amount of the wake strength that the thrusters should cut out at. [0 - 1]
fx_groundEffects.wake.atmosphericDensityWeight description=How much weighting atmospheric density has on the strength of the wake effect
fx_groundEffects.wake.debug description=Enable/disable logging and debug GUI for thruster ground effects
fx_groundEffects.wake.enable description=Sets ship wake effect enabled. 0 = Disable, 1 = Enabled
fx_groundEffects.wake.minimumAtmosphericDensityRequirement description=Atmospheric density required to generate a wake [in Atm]
fx_groundEffects.wake.overrideVelocityRequirement description=Overrides the velocity to of the ship [in m/s]
fx_groundEffects.wake.waterInteraction.debug description=Enable the drawing of the ship wake debugging. [0 : disabled | 1+ : enabled]
fx_groundEffects.wake.waterInteraction.effectStrengthOffset description=The offset of strength that the vfx strength is driven over. [0 - 1]
fx_groundEffects.wake.waterInteraction.heightRolloffPortion description=The top portion of the start height to interpolate the strength over.
fx_groundEffects.wake.waterInteraction.hitRadius description=The radius of the hits on the water sim [in meters]
fx_groundEffects.wake.waterInteraction.hitSpacing description=The distance between the hits to produce the wake [in meters]
fx_groundEffects.wake.waterInteraction.maxHeightScale description=The amount to scale the raycast length by to get the start height of the water wake.
fx_groundEffects.wake.waterInteraction.maxHitDepth description=The maximum depth that the hits penetrate the waters surface to produce the wake. [in meters]
fx_groundEffects.wake.waterInteraction.maxShapeSize description=The maximum distance from the peak to valley for the v shape formed by the wake and scaled by the speed and height over the water [in meters]
fx_groundEffects.wake.waterInteraction.maxWakeTrailDistance description=The max distance the wake will be generated behind the ship when traveling at the max velocity close to the surface [in meters]
fx_groundEffects.wake.waterInteraction.minHitDepth description=The minimum depth that the hits penetrate the waters surface to produce the wake. [in meters]
fx_groundEffects.wake.waterInteraction.shipWidthExponent description=Exponent used on the width of the ship to determine the width of the sim wake.
fx_groundEffects.wake.waterInteraction.trailShapeExponent description=Exponent used to control the shape of the wake interaction.
fx_groundEffects.wake.waterInteraction.velocityMaxScale description=The scale used to determine the velocity range of the wakes
fx_groundEffects.wake.waterInteraction.velocitySurfaceAreaScale description=The amount to scale the surface area by to approximate the amount of air being displaced.
fx_health.enabled description=Enable/disable the health entity effect triggers
fx_jump.debug description=Enable debugging of the jump effects
fx_jump.drive.entryRampUpDistancePercentage description=The portion of the distance to the jump point the entry strength is driven [in %]
fx_jump.drive.softPushMaxStrength description=The maximum strength of the wake effect whilst within the soft push area before the physical push area
fx_jump.drive.wakeOffsetDistance description=Additional offset of the emitter in the direction of the jump point. [in meters]
fx_jump.enabled description=Enable Jump effects
fx_jump.point.agitationStrength description=Controls the strength value that represents the agitated jump point state.
fx_jump.point.dormantFadeInThreshold description=The end portion of the reveal time to show the domant effect.
fx_jump.point.revealMinSize description=The minimum scale of the reveal effects to ensure that the emitter is not automatically disabled.
fx_jump.point.tempProjectileMaxDist description=Controls the distance the projectile travels, hard limit at 7999.9 [in meters]
fx_jump.tunnel.enableInteriorTunnelExitEffect description=Enable the interior Exit effects in the tunnel. [0 = off | 1 = on]
fx_jump.tunnel.enableSpaceloop description=Enable the space loop effects in the tunnel. [0 = off | 1 = on]
fx_jump.tunnel.enableSplineEffect description=Enable the spline effects in the tunnel. [0 = off | 1 = on]
fx_jump.tunnel.enableTintEffectsInTunnel description=Enables the effects in the tunnel to be colored based on the values in the starting jump point. [0 = off | 1 = on]
fx_jump.tunnel.enableTransitFailEffect description=Enable the transit fail effect in the tunnel. [0 = off | 1 = on]
fx_jump.tunnel.enableTunnelLights description=Enable the pass by lights inside the tunnel. [0 = off | 1 = on]
fx_jump.tunnel.enableTunnelSunFlare description=Enable the flare at the position of the sun in the tunnel. [0 = off | 1 = on]
fx_jump.tunnel.enableTunnelSunLight description=Enable the sun inside the tunnel. [0 = off | 1 = on]
fx_jump.tunnel.entranceProximityDistance description=The distance from the tunnel entrances that the entrance proximity strength is driven over [in meters]
fx_jump.tunnel.interactionStrengthRangePercentage description=The portion of strength to move the emitter over [in %]
fx_jump.tunnel.interiorTunnelExitSegments description=Controls how many segments before the end of the tunnel that the exit should be spawned
fx_jump.tunnel.maxRatioFromSpline description=The ratio from the spline that the spline alignment effect strength is at its weakest  [0 being at the spline and 1 being at the tunnel wall]
fx_jump.tunnel.minRatioFromSpline description=The ratio from the spline that the spline alignment effect strength is at its strongest [0 being at the spline and 1 being at the tunnel wall]
fx_jump.tunnel.minTravelEffectStrengthPercentage description=The strength of the travel wake effect to be used while traveling through the tunnel. [in %]
fx_jump.tunnel.pooledLightCount description=The number of lights pooled for the pass by lights
fx_jump.tunnel.spaceFillingSplineSegmentLength description=The number of segments of the jump tunnel the space filling spline effect covers.
fx_jump.tunnel.tunnelInteractionWallOffset description=The distance from the tunnel wall to offset effects. [in meters]
fx_jump.tunnel.tunnelSplineCurvaturePercentage description=Controls the amount of curvature between spline control points [in %]
fx_jump.tunnel.useEntityEffectTunnelReactions description=Sets whether the entity effects system is used for the tunnel reaction effect or if a seperate particle emitter is created. [0 = off | 1 = on]
fx_lightning.buildup.overrideNoiseExponent description=When >0, overrides all lightning regions' noise exponent
fx_lightning.buildup.overrideNoiseFrequency description=When >0, overrides all lightning regions noise frequency
fx_lightning.buildup.overrideNoiseOctaves description=When >0, overrides all lightning regions' number of noise octaves
fx_lightning.buildup.overrideNoiseStrength description=When >0, overrides all lightning regions' noise strength parameter
fx_lightning.controlPointRadiusScale description=Used to scale the size of the control points should they be overlapping!
fx_lightning.controlPointsDebug description=1: Display info about control point usage by lightning strikes in the level.
2: Render spheres at each control point (start in green, CPs in cyan, end in pink).
3: Render spheres at each control point + gas cloud offsets (in red)(lightning region only).

fx_lightning.debug description=Toggle the debug window for lightning
fx_lightning.impacts.enable description=Enable all lightning impacts (impulse + damage)
fx_lightning.impacts.serverDebug description=Display serverside impact position and normal. Must be set on server and client. Value = number of previous impacts to display.
fx_lightning.impacts.serverForceImpulse description=Force the server to apply impulses on targets regardless of net sync. Ensure fx_lightning.impacts.enable = 1
fx_lightning.lights.affectPlanetaryClouds description=When enabled allows lightning lights to affect planetary lights. [0 = off | 1 = on]
fx_lightning.maxControlPointsPerStrike description=Sets the maximum number of control points available per spline guided lightning region strike.
fx_lightning.maxMidpointDisplacementSteps description=Maximum number of control points to displace via midpoint displacement when generating lightning splines.
fx_lightning.region.cascade.debug description=Debug draw active lightning strike cascade radii and triggers
fx_lightning.region.cascade.maxTime description=Time it takes cascade radius to expand to maximum in seconds.
fx_lightning.region.cascade.probability description=Percentage chance a cascade can be triggered via a lightning strike
fx_lightning.region.editorSelectionDrawing description=When selecting a lightning region in editor, it will draw the spawn and target volumes.
fx_lightning.region.enable description=Globally enable and disable lightning region entities
fx_lightning.region.lightPoolSize description=Globally controls the number of pooled lights a lightning emitter should create for the pooled strikes on a lightning region
fx_lightning.region.logStrikeRequests description=Logs info about successful or failed strikes to the console and .log file
fx_lightning.region.radiiDebug description=Debug draws the spawn and target radii of lightning regions with a wireframe elipsoid (uses local scale, scale multiplier, and radii)
fx_lightning.region.slotsDebug description=How many times each lightning region has attempted to strike when all slots are full.
fx_lightning.region.standardLightBulbRadiusMultiplier description=Temporary: Multiplier to reduce the effect of lightningregion lights on non-gas objects
fx_lightning.region.strikePoolSize description=Sets the maximum number of strikes available at once per lightning region
fx_lightning.room.drawVolumes description=Draw the volumes of the shapes making up the bounds
fx_lightning.room.enable description=Enable lightning from the room's electrical extension.
fx_lightning.room.lightPoolSize description=Globally controls the number of pooled lights a lightning emitter should create for the pooled strikes on a room lightning emitter
fx_lightning.room.planet.drawLightningEvents description=Debug draw lightning events as generated by the weather map
fx_lightning.room.planet.eventIdReuseTime description=How much time to wait before a weather sim lightning position event id can be reused. Prevents multiple strikes showing up at the same position in quick succession. [in seconds]
fx_lightning.room.planet.strikePoolSize description=Sets the maximum number of strikes available at once per planet room lightning emitter
fx_lightning.room.strikePoolSize description=Sets the maximum number of strikes available at once per room lightning emitter
fx_lightning.spawner.drawVolumes description=Draw the volumes of the shapes making up the bounds (spawn volume green; target volume(s) red)
fx_lightning.spawner.enable description=Enable lightning from lightning components and lightning spawner entities
fx_lightning.spawner.lightPoolSize description=Globally controls the number of pooled lights a lightning emitter should create for the pooled strikes on a lightning spawner
fx_lightning.spawner.strikePoolSize description=Sets the maximum number of strikes available at once per lightning spawner
fx_lightning.splineDebug description=Debugging options for lightning splines.
1: display failures.
2: display list of nodes in lightning bolt spline trees on spawn.
fx_lightning.targeting.entity.debugDrawStrikes description=Enable drawing the generated entity lightning strikes. Draws the strike intensity, and start/target positions. Value indicates the duration [in seconds]
fx_lightning.targeting.entity.spawnRadiusMaxSize description=Calculate the spawn radius for lightning strikes based on the entity size. At this entity size, the maximum lightning strike length will be chosen. [in meters]
fx_lightning.targeting.entity.spawnRadiusMinSize description=Calculate the spawn radius for lightning strikes based on the entity size. At this entity size, the minimum lightning strike length will be chosen. [in meters]
fx_lightning.targeting.internal.debugDrawStrikes description=Enable drawing the generated internal lightning strikes. Draws the strike intensity, and start/target positions. Value indicates the duration [in seconds]
fx_lightning.targeting.internal.planet.maxSeaLevelDistance description=How far the strike's start position can be from the target position when projected on the sea level. Prevents strikes reach too far horizontally over the planet's surface. [in meters]
fx_lightning.targeting.internal.planet.minimumStrength description=The minimum strength for a weather sime lightning position to spawn a lightning strike. Range [0.0; 1.0]
fx_localEffects.debug description=Toggle the debug window for local (spaceloop) effects
fx_localEffects.defaultSpaceDust.enable description=Enable/Disable the default spaceloop effect
fx_localEffects.volumetricClouds.enable description=Enable/Disable the volumetric cloud density sampling and associated spaceloop effects
fx_localEffects.volumetricClouds.radius description=Adjusts the radius for sampling volumetric clouds
fx_maelstrom.effects.enable description=Enable/disable maelstrom effect spawning. 0: disable, 1: enable
fx_maelstrom.enable description=Enable/disable maelstrom effect and squibs spawning. 0: disable, 1: enable
fx_maelstrom.squibs.enable description=Enable/disable maelstrom damage map squib spawning. 0: disable, 1: enable
fx_placedSurfaceEffects.Enable description=Enable placed surface particle RTTs
fx_planetary.AreaTintDebug description=Draw debug information about the planet area fog and space loop tinting.
fx_planetary.AreaTintEnable description=Enable/Disable the tinting of fog and space loop based on the average area color for the planetary effects.
fx_planetary.Debug description=Toggle the debug window for planet effects
fx_planetary.LODCullingMultiplier description=Multiplier for the distance at which planet effect emitters for each effect LOD are deactivated.
fx_quantum.castingAlignmentEndRef description=Alignment reference point at which the casting effect strength reaches 0 [0.0 - 1.0]
fx_quantum.castingAlignmentStartRef description=Alignment reference point at which to start decreasing the casting effect strength [0.0 - 1.0] (negative for default gameplay value)
fx_quantum.gotoDestination description=Moves the player to the arrival location of the first QT once it is known [0 = off | 1 = on]
fx_quantum.showColorShift description=Controls whether the color shift effect should be shown [0 = off | 1 = on]
fx_quantum.showTravelEffects description=Controls whether the travel effect should be shown [0 = off | 1 = on]
fx_quantum.useBubbleIntegrity description=Use the bubble integrity in place of the alignment for the casting effects [0 = off | 1 = on]
fx_quantum.watchShip description=Moves the player in front of the ship in quantum [0 = off | 1 = on]
fx_surfaceRaindrops.ActiveDistanceBelowWaterLine description=The distance below the water line to continue accumulating raindrops [in meters]
fx_surfaceRaindrops.Draw description=Draws some info about how some values are set
2: Draw the location of the render objects spawned for surface particle RTT's (at root and on entities) and draw the water occluder values
3: A different depth test mode for the locations
fx_surfaceRaindrops.Enable description=Enable surface particle RTT's
fx_surfaceRaindrops.GizmoSize description=Increase the size of the plane position gizmo for mode 2 and 3
fx_surfaceRaindrops.Occluder.Debug description=Sets the color of the occluder to allow it to be visibly seen
fx_surfaceRaindrops.Occluder.Enable description=Enable Occluder for hiding raindrops below the waters surface
fx_surfaceRaindrops.RainOverride description=Override the amount of rain for surface raindrops range [0.0; 1.0] (negative values will disable the override)
fx_surfaceRaindrops.SnowOverride description=Override the amount of snow for surface raindrops range [0.0; 1.0] (negative values will disable the override)
fx_surfaceRaindrops.Wipe description=Wipe the helmet visor (without animation)
fx_surfaceRaindrops.thirdPersonVisor description=Enables the functionality for raindrops on 3rd person cameras. [0=off | 1=on]
fx_thrusters.idle.thrustMaximumSpeed description=Speed at which to show the maximum idle thrust value, while the ship is moving but no thrust input is given. [in meters/second]
fx_thrusters.idle.thrustMinimumSpeed description=Minimum speed to show any thrust effect, while the ship is moving but no thrust input is given. [in meters/second]
fx_thrusters.idle.thrustStrengthAtSpeed description=Thrust effect strength when reaching the speed 'fx_thrusters.idle.thrustMaximumSpeed' or above, while the ship is moving but no thrust input is given.
fx_thrusters.jumpTunnelAtmosphericStrength description=The strength value used for ShockDiamonds when 'fx_thrusters.jumpTunnelEffectMode' has ShockDiamonds enabled.
fx_thrusters.jumpTunnelEffectMode description=The type of thruster effects to display whilst in jump tunnel gameplay. [0 = Default Thursters, 1 = AfterBurner, 2 = ShockDiamonds, 3 = Both]
fx_thrusters.jumpTunnelThrustStrength description=Thrust effect strength to use when in jump tunnel gameplay.
fx_thrusters.strengthCycle description=Cycle effect strength on thrusters, higher values result in higher cycle times
fx_thrusters.trailInfo description=Show info on thruster engine trails. Set to 1 for info on the ship you're in. Set to any value above to specify a radius of visible ships.
fx_waterEffect.interaction.cullTimeScale description=The scale applied to the max duration to get the time until the water effects release their emitters.
fx_waterEffect.interaction.enabled description=Whether entity water effects are enabled. [0 = off | 1 = on]
g_AIComponents.AttentionTargetComponentSerialization description=Toggle the attention target component serialization.
g_AIComponents.BoidAgentDebugDraw description=Enables the debug draw for different boid agents.
g_AIComponents.BoidsDebugDraw description=Enables the debug draw for boids group.
g_AIComponents.DebugComponentDistance description=Debug draw distance for AI components
g_AIComponents.DebugDrawNavLinks description=Enable/disable the Navigation Links.
0 : Off
1 : Draw invalid or queued links.
2 : Draw valid/invalid links
3 : Debug draw raycasts for validation.
g_AIComponents.DebugDrawNavLinksExternalZoneInfo description=Enable/disable debug visualization for the direction of the nav links if they link to external zones.
g_AIComponents.DebugLookComponentForcePCAPLookIKOn description=Forces PCAP LookIK on for testing
g_AIComponents.DrawAIWeaponComponentDebug description=Enables the debug draw for the AIWeaponComponent including firing status and validation
g_AIComponents.DrawAimTarget description=Render the aiming component's aim target
g_AIComponents.DrawCollisionAvoidance description=Draw debug information related to the Collision Avoidance component.
g_AIComponents.DrawCoverComponent description=Debug draw cover component.
Default is 0 (off)
0 - off
1 - on

g_AIComponents.DrawCrewManifests description=Enable/disable the Crew Manifest debugging.
g_AIComponents.DrawFiringStatus description=Render the AI weapon component's targeting adjustments. You can set it to the following values
[1] = Draws the current firing status of an NPC. Including rounds left in magazine, time left on fire request and reloading status.
[2] = Draws more detail on hit chance and mercy timers, and a line for each bullet. A red line represents an intentional miss.

g_AIComponents.DrawFiringValidationFlags description=Flags for rendering the firing validation debug used by AI
t = Draws the text information of the validation status.
o = Draws the rays that were used for the occlusion check.
i = Draws the sphere used to validate the impact radius of an explosive weapon.
f = Draws the shooting frustum to debug the friendly fire.
d = Draws the current direction the weapon is pointing.
g_AIComponents.DrawLookComponent description=Render the look component
g_AIComponents.DrawMovementSystem description=Draw debug information related to the Movement System component.
0 - Disabled
1 - Draws active path, anchors and (current) path follower debug draw.
2 - All of the above plus text with more information on the actor (LOD, Update type etc.
3 - Teleport History
4 - Only valid if a pilot. Draw current state of the flight path following.

g_AIComponents.EnableAILODUpdate description=Enable/disable the AI LOD update.
g_AIComponents.EnableNavLinksContinuousValidation description=Enable/disable the validation updater for Navigation Links.
0 : Disabled
1 : Enabled
g_AIComponents.EnableUsableStuckRecovery description=Enables code to handle the stuck detection on top of a usable.
g_AIComponents.LightweightMovementUpdatePeriod description=Amount in seconds that must pass between different lightweight updates for the movement system.
g_AIComponents.MovementForceLightweightUpdate description=Force lightweight update on the movement system component
g_AIComponents.MovementSystemComponentSerialization description=Toggle the Movement System component serialization.
g_AIComponents.MovementSystemPriorityComponentFrequencyUpdate description=Amount in seconds that must pass between different notification to the priority map for generating planetary navigation map.
g_AIComponents.UseSimplePathFollower description=Enable simple pathfollower rather than locomotion path follower (for testing/debugging)
g_AIComponents.WeaponComponentBulletBendingAngleLimitOverride description=Global override for the BulletBendingAngleLimit
Negative values result in no override
g_AIComponents.WeaponComponentEnableAlwaysMiss description=Forces the weapon component to always miss when shooting.
g_AIComponents.WeaponComponentFiringValidationAngleToleranceOverride description=Global override for the FiringValidationAngleTolerance
Negative values result in no override
g_AIComponents.chasePositions.debugChasePosition description=Debug the chase position (around vehicles) result given by the ChaseTargetHelpers
g_AIComponents.enableNPCInfiniteMags description=Enable infinite mags for NPCs:
0 - Disabled
1 - Enabled
2 - Gameplay controlled
g_AIComponents.fakeReloadsUntilSearch description=The number of fake magazines provided to the NPC at a time when using 'enableNPCInfiniteMags'
Once these mags are used, the NPC will search for ammo in their environment
g_AIComponents.navigationLinks.enableLocomotionCrossLinks description=If Enabled a number of locomotion cross links will be generated depending on the nav link parameters defined
g_AIComponents.observable.extendersFrequencyUpdate description=Frequency of update for the observable component extenders. It express how many times the extenders should be updated in 1s.
g_AIComponents.observable.ignoreInAtmosphereUpdateCondition description=Useful for testing in Editor when an observable extenders needs the entity to be in the atmosphere to start updating. Setting this to one leads to ignore the condition
g_AIComponents.observable.maxObservableComponentFrequencyUpdate description=Max components that can be updated in the same frame if the frequency requires it.
g_AIComponents.observableDebugDraw description=Shows debug information about the Observable component.
g_AIComponents.perception.inboundExplosivesFrequencyUpdate description=Frequency of the update for monitoring inbound explosives. It express how many times the component should be attempted to be updated in 1s.
g_AIComponents.proceduralPOI.debugLook description=available severities: 0/1/2/3/4/5
g_AIComponents.proceduralPOI.debugPoiTags description=available severities: 0/1/2
g_AIComponents.proceduralPOI.filterActive description=
g_AIComponents.seatOperator.DrawWeaponAccuracyCone description=
g_AIComponents.seatOperator.DrawWeaponAimingStatus description=
g_AIComponents.seatOperator.DrawWeaponFiringCone description=AI weapons open fire when their targets predicted position enters their weapons' firing cone
g_AIComponents.seatOperator.DrawWeaponOcclusions description=
g_AIComponents.seatOperator.LogCounterMeasureUse description=
g_AIComponents.seatOperator.QDriveDebug description=1 : Displays a succinct summary pertinent to the state of QT
2 : Draws extended information about the QT state
g_AIComponents.seatOperator.accuracySettings.accuracyOverride description=A global override for all AI accuracy, for testing the accuracy formula at different levels of accuracy. Only takes effect if set to greater than 0.
g_AIComponents.seatOperator.accuracySettings.convergenceBaseMinSpeed description=Base min convergence speed for accuracy helper, will be the min speed for AI with an accuracy of 0.
g_AIComponents.seatOperator.accuracySettings.convergencePossibleAdditionalMinSpeed description=Possible additional convergence speed to be added to the base min convergence speed depending on AI accuracy. min convergence speed = base + additional * accuracy.
g_AIComponents.seatOperator.accuracySettings.convergenceTime description=Rough time to converge to a new target position for AI with accuracy of 0.
g_AIComponents.seatOperator.accuracySettings.matchVelocityBaseMinAcceleration description=Base min match velocity acceleration for accuracy helper, will be the min acceleration for AI with an accuracy of 0.
g_AIComponents.seatOperator.accuracySettings.matchVelocityPossibleAdditionalMinAcceleration description=Possible additional acceleration to be added to the base min match velocity aceleration depending on AI accuracy. min acceleration = base + additional * accuracy.
g_AIComponents.seatOperator.accuracySettings.matchVelocityTime description=Rough time to match a new velocity for AI with accuracy of 0.
g_AIComponents.seatOperator.accuracySettings.maxConvergenceDriftAngle description=Convergence drift direction cone angle for AI with an accuracy of 0, in degrees.
g_AIComponents.seatOperator.accuracySettings.maxInitialAimPositionAngle description=Initial aim position cone angle for AI with an accuracy of 0, in degrees.
g_AIComponents.seatOperator.accuracySettings.minConvergenceDriftAngle description=Convergence drift direction cone angle for AI with an accuracy of 1, in degrees.
g_AIComponents.seatOperator.accuracySettings.minInitialAimPositionAngle description=Initial aim position cone angle for AI with an accuracy of 1, in degrees.
g_AIComponents.seatOperator.accuracySettings.targetRadiusMultiplier description=Multiplier for the smallest axis of a targets bounding box, to get radius within which it is safe to stop convergence.
g_AIComponents.seatOperator.debugPIDAiming description=Debug draws and UI for the PID aiming
g_AIComponents.seatOperator.defaultCutoffRangeForSamplingGasCloud description=Default cutoff range used in the SDF query by the FlightControllerComponent when flying inside a gas cloud room.
g_AIComponents.seatOperator.flightControllerComponentFrequencyUpdate description=Frequency of update for the FlightControllerComponent. It express how many times the component should be attempted to be updated in 1s.
g_AIComponents.seatOperator.maxFlightControllerComponentUpdatesPerFrame description=Max components that can be updated in the same frame if the frequency requires it.
g_AIComponents.seatOperator.projectileSelectionSettings.maxSlowProjectileSpeed description=Max criteria used to define the max slow projectile speed, used with slower moving targets (worst dogfight index)
g_AIComponents.seatOperator.projectileSelectionSettings.maxWorstDogfightIndex description=Max criteria used to define the worst dogfight index (slow thrusters / unable to pull high turns) for projectile selection, the worst dogfight index the slower projectile will be used
g_AIComponents.seatOperator.projectileSelectionSettings.minBestDogfightIndex description=Min criteria used to define the best dogfight index (fast thrusters / able to pull high turns) for projectile selection, the best dogfight index the faster projectile will be used
g_AIComponents.seatOperator.projectileSelectionSettings.minFastProjectileSpeed description=Min criteria used to define the min fast projectile speed, used with faster moving targets (best dogfight index)
g_AIComponents.seatOperator.useInfiniteAmmo description=Enable (1) the ability for AI to use infinite ammo.
g_AIComponents.seatOperator.usePIDAiming description=Enable the new PID enabled aiming and target following
g_AIComponents.vision.dyanamicColliderRaycastInterval description=The time spacing between firing raycasts, when the obscuring entity is dynamic.
g_AIComponents.vision.enableVisionPerceptionOnSeat description=When set to 1 Pilots and Turret Gunners will be allowed to use Visual Perception along with the radar to perceive other (Observables) entities.
g_AIComponents.vision.pvsQuota description=Max number of PVS (Probable Visible Set) raycast requests that can be queued in the deferred queued by each component each update
g_AIComponents.vision.raycastQuota description=Max number of raycasts queued by the VisionComponent handled by physics each frame
g_AIComponents.vision.triggerOffset description=A change in the relative position between observer and observable that triggers a new raycast
g_AIComponents.vision.updatePolicy.LOD_Close description=LOD values smaller than this value will be using close frequency for the updates
g_AIComponents.vision.updatePolicy.LOD_Far description=LOD values smaller than this value will be using far frequency for the updates
g_AIComponents.vision.updatePolicy.LOD_Mid description=LOD values smaller than this value will be using the mid frequency for the updates
g_AIComponents.vision.updatePolicy.closeFrequency description=Frequency of update for the vision component when the LOD of the owner is (strictly) smaller than LOD_Close.It express how many times the component should be attempted to be updated in 1s.
g_AIComponents.vision.updatePolicy.farFrequency description=Frequency of update for the vision component when the LOD of the owner is (strictly) smaller than LOD_Far.It express how many times the component should be attempted to be updated in 1s.
g_AIComponents.vision.updatePolicy.idleFrequency description=LOD values that are greater or equal than LOD_Far will be using this update frequency.A 0 (value) value means that the vision component will stop updating.
g_AIComponents.vision.updatePolicy.maxVisionComponentUpdatesPerFrame description=Max components that can be updated in the same frame if the frequency requires it.
g_AIComponents.vision.updatePolicy.midFrequency description=Frequency of update for the vision component when the LOD of the owner is (strictly) smaller than LOD_Mid.It express how many times the component should be attempted to be updated in 1s.
g_AIComponents.vision.useAIZoneObjectsQuery description=If set to one the VisionComponent will search for Observables using an alternative (supposedly faster) approach (i.e. SZoneObject::AIOBJECT instead of SZoneObject::ENTITY)
g_AIComponents.vision.useLocklessCancelRequest description=
g_AIComponents.vision.visibleRaycastInterval description=The time spacing between firing raycasts, when the observable entity was previously visible.
g_AIDrive.allow4WheelsSteering description=If set to 1 NPC driving a ground vehicle will be enabling 4 wheels steering when negotiating sharp corners along the path.
g_AIDrive.collisionAvoidanceEnabled description=If set to 1 it NPC driving will enable active collision avoidance. If set to 0 the vehicle will be seen just an obstacle and the driver won't be applied any correction if an obstacle is on its path
g_AIDrive.debug description=Debug Draw specific for the NPC driving. Use v_profileMovement for general cases.
g_AIDrive.useLegacySpeedControl description=If set to 1 it NPC driving will use the legacy speed control
g_AIDrive.useLegacySteeringControl description=If set to 1 it NPC driving will use the legacy steering control
g_AIMovable.angularPID.highFPS.kd description=High FPS - Angular PID - Derivative Gain : Helps reducing oscillations around the set point.
g_AIMovable.angularPID.highFPS.ki description=High FPS - Angular PID - Integral Gain : Increase this gain if the controller shows a steady state error.
g_AIMovable.angularPID.highFPS.kp description=High FPS - Angular PID - Proportional Gain : Determines how rapidly the controller reacts to an error. High gains may lead to oscillations.
g_AIMovable.angularPID.highFPS.timeWindow description=High FPS - Angular PID - Time Window : Integral and Derivative components are computed only on samples within this time window.
g_AIMovable.angularPID.highToLowFrameTimeThreshold description=Angular PID The update frame time at which the PID controller will switch from High to Low Profile.Update frame times above this threshold will cause the PID controller to switch the PID gains to the low settings
g_AIMovable.angularPID.lowFPS.kd description=Low FPS - Angular PID - Derivative Gain : Helps reducing oscillations around the set point.
g_AIMovable.angularPID.lowFPS.ki description=Low FPS - Angular PID - Integral Gain : Increase this gain if the controller shows a steady state error.
g_AIMovable.angularPID.lowFPS.kp description=Low FPS - Angular PID - Proportional Gain : Determines how rapidly the controller reacts to an error. High gains may lead to oscillations.
g_AIMovable.angularPID.lowFPS.timeWindow description=Low FPS - Angular PID - Time Window : Integral and Derivative components are computed only on samples within this time window.
g_AIMovable.debugDraw description=If set to one, it will display useful debug information on top of the AI actor attached to the movable entity.
g_AISpawning.CollisionObjects description=Which tests to perform when calculating spawn collisions.
r: Render Nodes
e: Physical Entities
v: Vehicles
p: Pending Spawns
g_AISpawning.DebugSpawnResolver description=Print resolver debugging to the log.
g_AISpawning.DespawnTimer description=How long spawned entities should persist after a despawn request before being despawned - Used for preserving entities between missions.
g_AISpawning.DrawCollisions description=Draw collision checks for the AI spawning system - Wont work on clients connected to a server.
g_AISpawning.PopulationDebug description=Draw Population debugging:
0 : Off
1 : Draw bounding boxes / locations
2 : Print to log how many locations are lost due to anchor
g_AISpawning.PopulationDebugTime description=How long the population debugging should be on screen.
g_AISpawning.ResolverDebugTime description=How long the resolver debugging should be on screen.
g_AISpawning.UseSpawnResolver description=Resolve spawns against existing entities to avoid collisions.
g_AISpawning.debugSpawnRequestRadiusMultiplier description=Multiplier for the radius of the debug sphere drawn for each debug spawn request.
g_AISpawning.debugSpawnRequestRemoveTime description=How long to persist a requested spawn location after the entity despawns.
g_AISpawning.debugSpawnRequestRemoveWithOwner description=If 1, the spawn location will be removed when the mission module that spawned it ends.
g_AISpawning.debugSpawnRequests description=Debug draw spawn request locations (server only).
g_AISpawning.enableSpawnViaQT description=Enables spawning via QT in spawning tasks that use the SpawnDescription variable. 1 = spawns elsewhere and QTs to original spawn location. 2 = doesn't QT, instead creates a particle at spawn location.
g_AISpawning.useHighPriorityTPSQuery description=Use high priority TPS queries when requesting to find spawn points
g_ATC_concurrencyTest description=Start a test doing several requests at the same time to the ATC
g_ATC_debugATCStatus description=Debug the status of the specified ATC
g_ATC_debugEnable description=Enable debug text about the ATC state. Set it to 1 to show debug display on screen, set it to 2 to show LandingZone HUDDisplayNames instead of EntityNames and set it to 3 to output to the log.
g_ATC_debugOnlyNonFreePads description=Only show the status of pads which are not free
g_ATC_debugOnlyPlayers description=Only show the log messages caused by players or without actors, but hide AI ones
g_ATC_disableDebrisObstructionBury description=Disable the ATC's checks for debris to set to bury when they stream out.
g_ATC_disableObstructionDespawning description=Disable the ATC's checks for obstructing vehicles. So a vehicle wont be counted as illegally parked if it hovers over a landing pad.
g_ATC_disableUpdate description=If set to 1, the ATC won't update any timers. Pads won't be freed if a vehicle leaves, vehicles won't be despawned for illegal landing...
g_ATC_dumpAllInfo description=Dump all ATCs info to the log
g_ATC_requestLanding description=Debug console command to request landing
g_ATC_requestTakeOff description=Debug console command to request taking off
g_AutomaticDoorPortalEditorOverride description=Allow the automatic doors to keep portals open in editor mode.
g_CameraComponentOverrideCaptureCamera description=Command for capturing specific camera view and writing out image based on user filepath.
Usage: g_CameraComponentOverrideCaptureCamera 'CameraName' 'Filepath'.
g_CameraComponentOverrideFilter description=Name of the camera component to override the engine camera.
g_CameraComponentOverrideLogNames description=Output to the log all the camera entity components in the level. Format is [CameraOverrideFullName]: 
g_CameraViewManager_AllowAutoLoad description=If enabled, camera slots will be automatically loaded from XML every time a new view or group is added to the camera stack
g_CameraViewManager_AllowAutoSave description=If enabled, camera slots will be automatically saved to XML every time one slot changes
g_DebugUISound description=enable ui sound log
g_DebugUISoundUIElementFilter description=Filter which UIElement debug is shown for
Usage: g_DebugUISoundUIElementFilter <string>, where <string> can be the UIElement name or a substring.
g_DebugUISoundUIElementFilter  will turn off filtering and return to displaying all UIElements.
g_DisableHangarDoorCollisionDamage description=BUG-78615 - Disable vehicle to hangar door collision damage at low fps
g_DisableTriggers description=Disable enter/leave events for area triggers
g_Dissolve.dissolve description=Dissolve all entities that have dissolve component matching a name search
g_DontInvalidatePhysOnConcurrentJob description=Don't invalidate existing terrain cells whenever a query happens to coincide with another async worldbuilder request
g_EnableDeterministicEntitySpawns description=Make Entity Spawns deterministic
g_EnableRastarGizmoOnNonMainModules description=Enable gizmo also on overlays and secondary modules
g_EnableRastarLocationOffsetAttachmentWithModules description=Enable location-modules parenting
g_EntitySpawning_MaxPortion description=Max number of reserved spawn points for entity spawning, as a portion of the cell's total spawn points
g_EntitySpawning_ReservedSpawnPointMultiplier description=How many more spawn points than required shall be resvered for entity spawning?
g_FPSDebugInfo description=Displays FPS debug info.
g_FlyModeSpeedScaler description=Scales the speed of the fly mode, for values over 80, set p_max_player_velocity to a higher value at your own risk
g_FoleyCollisionDebug description=Show debug rendering for foley collision system. ( 1=Show Client Foley Collisions 2=Log All Foley Collisions )
g_FoleyCollisionEnabled description=Enable foley collision system. 1 enables PE_ARTICULATED, 2 enables PE_ARTICULATED and PE_ACTOR.

g_FootstepSoundsDebug description=Toggles debug messages of footstep sounds.
g_FootstepSoundsFollowEntity description=Toggles moving of footsteps sounds with it's entity.
g_GotoPointsSyncClientsForLogging description=Control variable for using the HC DemoInput class for testing each GotoPoint. Turn this on to synchronize HCs to goto the same point when they jump
g_GotoPointsTests description=Control variable for using the HC DemoInput class for testing the each GotoPoint in a level in sequence. 0 = off, 1 = test player, 2 = test vehicle
g_GotoPointsTestsLoggingInterval description=time between capture data intervals / GotoNext point : (seconds)
g_HangarDoorCollisionDamageFPS description=BUG-78615 - Disable vehicle to hangar door collision damage at low fps value
g_ImageTestAutoRunConfigFileName description=Name of config file for doing an automatic g_ImageTest run
g_InvalidateRenderMeshes description=Invalidate All Render meshes
g_LakesSpawnPhysAreas description=Rivers Spawn Phys Meshes
g_LogDamage description=Log all damage being taken
g_MaxLevelForPatchExtension description=MaxLevel at which we build a patch extension to hide seams
g_MinSphereRayCullingExtraThreshold description=Reduction to theoretical minsphere used for culling
g_NavPointHierarchyCVars.disableServiceCreatedInterdictionFields description=Disables interdiction fields created by request of the dynamic mission system. Entity created interdiction fields (such as the from the Mantis ship) are still functional.
g_NavPointHierarchyCVars.dumpInterdictionFields description=Dumps information about the currently known interdiction fields to the log, must be run on the server. (No arguments)
g_NavPointHierarchyCVars.errorOnNullInterdictionFields description=Enable errors when an unexpected null entity is found in the interdiction field registrations.
g_NavPointHierarchyCVars.logInterdictionFieldUpdates description=Enable log updates to the collection of interdiction fields from service events. Must be run on the server.
g_NumChunks description=Number of Planet Patches
g_OrbitalComponentDebug description=Enable debug drawing of orbital component (Default = 0, 1 = 2D Mode, 2 = 3D Mode).
g_OrbitalComponentSpeedOverride description=Orbital speed override for entity orbit component.
g_OrbitalComponentSpeedScale description=Orbital speed scale for entity orbit component.
g_PerformMinSphereRayCulling description=Perform MinSphere Ray Culling for Terrain and Ocean Patches
g_PlaceExplosion description=Place an explosion crater at the player's feet
g_PlanetAreaDebug description=Show debug information for planet terrain areas
g_PlanetAudioDebug description=Show planet audio debug information
g_PlanetAudioEnabled description=Enable planet audio
g_PlanetDebugMode description=Show planet debug information
g_PlanetDebugModeTextSize description=Planet text size debug information
g_PlanetDebugMode_MinPatch description=Minimum Level for showing patches with g_planetdebugmode
g_PlanetDebugPhysicalizationRadius description=Planet Debug Physicalization in Editor
g_PlanetEnableGravityFalloff description=Enable/Disable planet gravity falloff
g_PlanetEnableLegacyCPUTerrainElevation description=Use old CPU displaced terrain geometry
g_PlanetEnableStratifiedSpawnPoints description=Enable stratified spawn points / Use V4 SpawnPoints
g_PlanetMaxActiveTerrainPatches description=Set maximum number of active patches per planet while in Editor
g_PlanetSerializationMode description=Serialization Mode for World Builder planet data: 0 - Default / 1 - Force JSON / 2 - Force Binary
g_PlanetTerrainLowResMeshLOD description=Set desired resolution for low spec terrain and ocean mesh
g_PlanetTerrainMaxSubdiv description=Max Rendermesh Subdivision
g_PlanetTerrainPatchCullingCosineThreshold description=Set culling threshold for terrain patch CPU culling
g_PlanetTerrainTraceResourcesLog description=Enable logging on terrain texture array events
g_PlayerLoadout description=Ability to set a player load set.
g_ProgressSeason description=Use season based on time and latitude
g_ProjectileLightLimit description=Projectile lights: -1 - Disabled, 0 - No limit, "> 0" - Actual limit
g_RastarShowListModules description=Show module names
g_RastarShowListModulesRadius description=Radius within which the module list is displayed. Use 0 to automatically set the radius as the location size.
g_RastarShowLocations description=Show location names
g_RastarToggle description=Toggle the base placement window
g_ReloadMetadataModifiers description=Remove + Reload modifiers + planet areas loaded via metadata
g_RiversSpawnPhysAreas description=Rivers Spawn Phys Meshes
g_S42FrontendInOdin description=Uses the frontend in Odin megamap when launching S42
g_S42_CheckpointModelTag description=Geometry model tag used to select the default character to use when spawning via checkpoints
g_S42_StreamingBubbleSize description=Size of the streaming bubble (meters) around the player during S42. -1 to disable the bubble
g_S42_StreamingUniqueEntityBubbleSize description=Size of the streaming bubble (meters) around unique entities during S42. -1 to disable the bubble
g_ServerRendererRenderPlanets description=Allow ServerRenderer to render planets as if it were a client
g_ServiceBeacon.logInfo description=More verbose logging.
g_StartMicrophoneTest description=Starts recording the microphone for a test. Usage: g_StartMicrophoneTest
g_StopMicrophoneTest description=Stop recording the microphone and they plays back the recording as a test. Usage: g_StopMicrophoneTest
g_VIM_Mode description=VIM mode / 0 - Disabled / 1 - Enabled / 2 - Test Mode
g_WorldbuilderLogTerrainModifierAdditions description=Log information about new terrain modifiers when loaded
g_XMLCPBAddExtraDebugInfoToXmlDebugFiles description=When the xml debug files are activated, this option adds the name and entity class name to every entity reference in the .xml .
g_XMLCPBBlockQueueLimit description=Limits the number of blocks to queue for saving, causes a main thread stall if exceeded. 0 for no limit.
g_XMLCPBGenerateXmlDebugFiles description=Activates the generation, for debug purposes, of a text xml file each time that there is a binary save (LastBinarySaved.xml) or load (LastBinaryLoaded.xml).
g_XMLCPBSizeReportThreshold description=defines the minimun size needed for nodes to be shown in the xml report file
g_XMLCPBUseExtraZLibCompression description=Enables an extra zlib compression pass on the binary saves.
g_actionAreas.containedFilter description=Name to filter action areas that contain given entity
g_actionAreas.debugDraw description=Enable/disable action areas debug draw: 
0 - Disabled
1 - Draws Helper Shape
2 - Adds text about volumes linked
3 - Lists all contained entities (known by the component)
4 - Lists the results of a zone query (only movable entities)
5 - Lists the results of a zone query (only non movable entities)
g_actionAreas.enableForceUpdateContainedAI description=Enable/disable force update of some AI components on the contained AI entities
g_actionAreas.filterName description=Name to filter the debug draw of the action area
g_actionAreas.maxDistance description=Max distance from local player to draw action areas (0: disabled)
g_activate_subscriber_perk description=Activates the subscriber perk feature.
g_actorAudioDebug description=Enable/Disable debugging info on actors with an audio controller
g_actorVectorFieldDebug description=Debug drawing for Actors with an attached vector field. 0: Disable, 1: Enable, 2: Enable AND force enableActorVectorFields param
g_actorViewDistRatio description=Sets the view dist ratio for actors.

g_ads.allowed description=Enable ADS.
g_ads.camera_buffer description=ADS external camera buffer.
g_ads.camera_fixed_position_X description=ADS fixed camera position X, for testing only.
g_ads.camera_fixed_position_Y description=ADS fixed camera position Y, for testing only.
g_ads.camera_fixed_position_Z description=ADS fixed camera position Z, for testing only.
g_ads.camera_smoothing_max description=ADS smoothing for the external camera movement.
g_ads.camera_smoothing_min description=ADS smoothing for the external camera movement.
g_ads.camera_target_threshold_pull_angle_crossover description=ADS cameraat this angle to the crosshair the target has no pull on the camera.
g_ads.camera_target_threshold_pull_angle_max description=ADS cameraat this angle to the crosshair the target has full pull on the camera.
g_ads.camera_target_threshold_pull_angle_min description=ADS cameraat this angle to the crosshair the target full pull.
g_ads.camera_target_threshold_pull_weighting description=ADS camera: at this angle to the crosshair the target has no pull on the camera.
g_ads.enable_recoil description=If set to 1 recoil is added to ADS.
g_ads.fov_precaching description=Submits precache cameras for better LODing during zoom. Only active between 0 and 1.
g_ads.fov_precaching_timeout description=Time in seconds for the timeout when FOV precaching is used for the ADS camera.
g_ads.overwrite_type description=ADS type:-1 - no control0 - via lookahead1 - via camera on sphere around player2 - via camera on the forward position on the OBB3 - via fixed camera position (use g_weapon_controller.ads_camera_fixed_position_XYZ to define)
g_ads.quick_stable_max_zoom description=Allow entering ADS by using stable max zoom keybind instead of requiring to be in ADS already.
g_ads.zoom_smoothing description=Smoothing time for the zoom of the camera.
g_aiModule_noGeometryBBsize description=If an AI module has no geometry, size of the bounding box assigned to the object so it can be considered visible by the entity update scheduler
g_aiNavigationRayCastQuota description=Amount of deferred rays allowed to be cast per frame by AI to validate navigation data
g_aiProceduralSplines.debugElasticBand description=Debug the outcome of the elastic band process.
g_aiProceduralSplines.debugLandingSiteClearance description=Only used when landing over terrain.
Draws the OBBs found around the landing site and the highest vertex with respect to the terrain
g_aiProceduralSplines.iterationsPerRun description=Number of iterations per each run. One iteration is one pass over all points.
g_aiProceduralSplines.maxNumberOfRuns description=Maximum number of runs that can allowed to run. Each run comprises a number of iterations over all points
g_aiProceduralSplines.repulsionStrength description=How strong is the response to a close by obstacle.
g_aiProceduralSplines.springStrength description=How strong is the smoothing force between adjacent points
g_aiSpawning.DebugPopulate description=Search for suitable population locations in an area
g_aimableController.aim_assist_curve_modifier description=Multiplies the values coming out of the aim assist curve. Only applied if value is above 0.0.
g_aimableController.aim_assist_distance_angle_modifier description=Multiplies the raw aim assist distance input values from the definitions. Only applied if value is above 0.0.
g_aimableController.aim_assist_forced_off description=If set to 0, weapon aim assist will be forced off, so no bullet nudging will occur.
g_aimableController.aim_assist_threshold_angle_modifier description=Multiplies the raw aim assist threshold input values from the definitions. Only applied if value is above 0.0.
g_aimableController.aim_assist_uses_curves description=If set to 1, weapon aim assist will use the new bezier curves over the per gimbal mode.
g_aimableController.aiming2_3dhud_card_size_pips_auto_gimbal_target_threshold description=Offset angle when a AG pip starts counting towards the AG target marker progress, used for UI.
g_aimableController.aiming2_3dhud_far_distance description=Far distance of the 3D crosshairs.
g_aimableController.aiming2_assist_suppression_lerp_time description=Sets the time it takes to lerp between the normal aimable targets and the suppressed aimable point.
g_aimableController.aiming2_auto_gimbal_mode description=0: Focus on average PIP, 1: Focus on target
g_aimableController.aiming2_gimbal_modes_allow_all description=If set to 1 all gimbal modes are allowed.
g_aimableController.aiming2_gimbal_modes_show_indicators description=If set to 1 gimbal indicators will be shown.
g_aimableController.aiming2_minimum_converge_distance description=If set to anything above zero this will make sure that aimables cannot converge close than the given number.
g_aimableController.aiming2_pip_effective_fire_range_source description=Off all dimensions: 0: min, 1: max, 2: average, 3: length.
g_aimableController.aiming2_pip_grouping_type description=0: group by unique weapon type, 1: group by projectile speed, 2: group by weapon preset.
g_aimableController.aiming2_pip_smoothing_type description=Which method to use to smooth the display positions.
Values:
0:  No smoothing at all.
1:  Use smooth and trending values to calculate a steady position to draw the reticle. Use with i_debug_pip_aim_weighted average to determine new value influence.
2:  Use weighted average of current pip location and new predicted impact position to smooth the reticle. Use with i_debug_pip_aim_weighted average to determine new value influence.
g_aimableController.aiming2_pip_smoothing_use_for_ui description=0: Use raw PIP positions for UI. 1: Use the smoothed display position for UI.
g_aimableController.aiming2_pip_smoothing_weighted_average description=Defines how much influence the new value will influence the current value.
Recommended range: 0.0 to 1.0. Values outside this range are supported, but not recommended
g_aimableController.aiming2_pip_valid_range_ratio_max description=Range ratio that defines whether a PIP is visible or not.
g_aimableController.aiming2_show_ui description=Allows toggling off the aiming UI
g_aimableController.aiming2_ui_magnification_crosshair description=Global magnification of aiming crosshairs. Only active with >=0.
g_aimableController.aiming2_ui_magnification_pips description=Global magnification of PIPs. Only active with >= 0.
g_aimableController.enable_ai_turret_restrictions description=If enabled, AI turrets will always aim along their own forward line. If not they aim beyond turret limits.
g_aimableController.network_epsilon_direction description=Direction offset epsilon in meters. This value will be applied to unit vectors. Default is 0.005 (5mm).
g_aimableController.network_epsilon_position description=Direction offset epsilon in meters. This value will be applied to unit vectors. Default is 0.01 (10 cm).
g_aimableController.overwrite_acceleration_factor description=Overwrite the defines acceleration factor (from 0 to 1). it defines how much acceleration is taken into account to calculate PIPs.
g_aimdebug description=Enable/disable debug drawing for aiming direction
g_allowDisconnectIfUpdateFails description=
g_allowPureSpectatorModeOnRelease description=Allow the keybind to enter pure spectator mode on release builds
g_allowShipBedLogout description=Enable/Disable ship bed logout
g_atcState.ATCAIDespawnState description=if 0, ATC doesnt despawn AI ships. if 1, despawns AI ships. if 2, doesnt despawn javelins.
g_atcState.TestInstantCleanup description=if 1, next pad/dock cleanup by ATC will be instant instead of on assignment - Then automatically reset cvar to 0
g_atcState.allowInstancesAndLinks description=if 1, allow both instanced and not instanced tokens to link to ATC
g_atcState.atcEstimatedStreamingRange description=Sets estimated streaming range for ATC data manager, for hinting to streaming system
g_atcState.atcStreamingRange description=Sets streaming range for ATC data manager
g_atcState.delayCleanup description=If 0, ATC cleanup happens on assignment. If 1, assignment starts stream bubble and proximity check
g_atcState.delayCleanupDist description=Token/Player distance, on entered the delayed cleanup happens
g_atcState.reservedPadWithNoVehicleCleanUpTime description=Time in seconds to clean up ATC reservations when we have no vehicle spawned
g_atcState.shipsNeedToBeFullyInsideLandingAreaToDespawn description=If set to 1 a ship need to be fully inside a landing area to be considered an obstruction and be despawned.
g_atmosphericEntry_GeometryGlow_DrawDebug description=Draws debug lines for the geometry glow on the atmospheric entry effect
g_attachableModifier.debugDraw description=Enable debug visualization for attachable modifiers.
g_attachableModifier.debugDraw_Distance description=Distance at which to draw debug visualization for attachable modifiers.
g_attachableModifier.debugDraw_HideInactive description=Whether or not to hide debug visualization for attachable modifiers that have no active modifiers.
g_attachableModifier.debugDraw_NameFilter description=Substring to filter debug visualization for attachable modifiers by entity name.
g_attachableModifier.debugDraw_TextScale description=Text scale for attachable modifier debug text. Default 1.0f.
g_attachableModifier.debugLog description=Enable logging for attachable modifiers.
g_autoPilotInterval description=time between auto-pilot action selection and normal behavior (either fire&throttle / pick target): (seconds)
g_autoReviveTime description=Time from death till the player is automatically revived
g_bStreamEngineAbortOnStall description=If 1, calls Abort() for stalled ReadStreams during UpdateAndWait().
g_biomeAccumulation_maxFrostMapValue description=Rescales the frost effect so that it only uses the range [0, maxFrostMapValue] of the dirt map. 1.0 = use the full dirt map range
g_biomeAccumulation_secondsToFreeze description=Time taken to fully frost over at maximum humidity.
g_biomeAccumulation_secondsToMaxSnow description=Time taken to fully accumulate snow at max wind speed.
g_biomeAccumulation_secondsToMelt description=Time taken for snow/frost to melt at room temperature (20 celsius).
g_bomb.debug description=Enable bomb debug (flags can be combined in any order):
0: None.
a: Persistent path.
b: States (launch state, explosion safety).
c: Movement (velocity, drag, etc).
d: Payload (type, cluster loadout).
e: Emissions.
f: Update flags.
1: All.

g_bomb.debug_drawClientOnly description=Draw debug only for bombs that are either client controlled or client launched.
g_bomb.debug_drawLaunchedOnly description=Draw debug only for bombs that have been launched (or don't require a launcher)
g_bomb.debug_drawProximityBounds description=If g_bomb.debug=d is active (i.e. Payload), draw the radius that will trigger it to explode
g_bomb.debug_drawSafetyBounds description=If g_bomb.debug=b is active (i.e. States), draw the bounds and radius that the missile must leave before it will be able to collide or explode
g_bomb.debug_drawVisibleOnly description=Draw debug only for bombs that are in view
g_bomb.debug_pathTimeout description=Time (s) to display persistent bomb path for before timeout.
g_bomb.explodesInGreenZone description=If bombs (after being launched) should explode when in a green zone.
g_bomb.maxDragAngAccel description=Maximum angular acceleration that can be applied due to drag. Physics maxes out at ~315
g_bottomlessMags description=Bottomless magazines
g_breakablePlanetDebug description=Show some debug drawing of the pieces breaking up regarding to the planet surface (if any nearby).
g_breakablePlanetDebugDuration description=Adjust the time the debug draw shapes last on screen
g_breakableSubobjectDebug description=Debugs terrain position and subobject position for children of root breakable objects
g_breakageFadeDelay description=
g_breakageFadeTime description=
g_breakageMinAxisInertia description=Set this to 1.0 to force broken trees to have spherical inertia
g_breakageNoDebrisCollisions description=Turns off all collisions for debris, apart from coltype_solid
g_breakageTreeDec description=Please see comments in ActionGame.cpp
g_breakageTreeInc description=Please see comments in ActionGame.cpp
g_breakageTreeIncGlass description=Please see comments in ActionGame.cpp
g_breakageTreeMax description=Please see comments in ActionGame.cpp
g_breakage_debug description=Turns on debug rendering for broken objects counted against g_breakage_mem_limit
g_breakage_mem_limit description=Sets a budget for procedurally breakable objects (in KBs)
g_breakage_particles_limit description=Imposes a limit on particles generated during 2d surfaces breaking
g_bulletHitImpulseScale description=The amount of a bullet's momentum to transfer over to HitInfo impulse scale.
g_bulletPenetrationDebug description=Enable bullet penetration debugging
g_bulletPenetrationDebugTimeout description=Display time of debug messages
g_cameraOrbitViewDisableCollisions description=Turns off collision checks in orbit camera to allow nicer camera transitions
g_capacitorAssignment.debug description=Draw debug info for capacitor assignment
g_capacitorAssignment.debug_local_player_only description=Draw debug info only for player
g_capacitorAssignment.show_ui description=Enables the UI
g_capacitorAssignment.step_assignment description=Max step an assignment can change by
g_capacitor_assignment_enable_proactive_effects description=Enables proactive effects on capacitor gameplay (more ammo, shield resistance and more efficient boost).
g_capacitor_gameplay_enabled description=Enables capacitor gameplay for shields, weapons and thrusters.
g_cargo.blockManifestInitialization description=If 1, the cargo controller will think that not all cargo grid are open, until it's set to 0.
g_cargo.debugLevel description=Enable more debugging functionality.
g_cargo.enforceMaxPermittedSizeForCargoGrid description=If 1, the cargo packing will limit the size of item that can go on a cargo grid based on the record setting.
g_cargo.featureLevel description=enable unstable features.
g_cargo.maxCargoBoxDebris description=Maximum number of cargo boxes allowed to be left after vehicle destruction. Note, this will be split up proportionately across all the cargo grids attached to the ship
g_cargo.ratioCargoDebrisDetached description=Ratio (0.0 - 1.0) of cargo detached on vehicle destruction, the remaining stay attached to the cargo grid. Note: This is applied after the cargo box destruction step, so this is a percentage of the *remaining* cargo boxes.
g_cargo.shipCargoManifestOverride description=Cargo manifest to use on spawn for ship.
g_cargo.testPackingOnBoot description=On boot will run the cargo packing unit tests and CigTrace an error if they failed.
g_cargo.useWarehouseEDS description=use warehouse entity document instead of free form variables.
g_cargo.validateDefaultCargoContainers description=On boot will log a survey of default containers to help find setup issues.
g_cc_SliderPreviewPercent description=Changes what percentage an unselected DNA head previews and starts at in the Frontend character customizer 
g_characterCustomizer.applyDNAToHeadLibrary description=Apply the DNA from the player dummy to all heads in the feature library
g_characterCustomizer.copyUserCharacter description=Copy player character dna and loadout to the appropriate bodyTypeDummy on start
g_characterCustomizer.debugGUI_Enabled description=Enable character customizer debug gui
g_characterCustomizer.debugRegions_Enabled description=Enable dna region debug text
g_characterCustomizer.defaultBlemishMask description=if > 0 default blemish mask to apply when initializing skin material
g_characterCustomizer.devMode_Enabled description=Enable character customizer dev mode
g_characterCustomizer.drawClippingVolumes description=Draw clipping volumes used by customizer
g_characterCustomizer.enforceSymmetry description=Enforce symmetry when editing DNA
g_characterCustomizer.faceSculptingDebug_Enabled description=Enable face sculpting debug
g_characterCustomizer.faceSculpting_uiMode description=UI mode
g_characterCustomizer.fixBodySkinTones description=When loading a CHF automatically set the body skin tone to match the head skin tone
g_characterCustomizer.precacheSkinMaterials description=Precache the available skin materials when skin texture selection is available
g_characterCustomizer.removeInvalidSubmtlsOnSave description=Remove invalid submaterials when saving to force a successful save
g_characterCustomizer.saveFileVersion description=set CHF version to save to
g_characterCustomizer.saveToLibs description=Save to Data/Libs/CharacterCustomizer instead of default save directory
g_characterCustomizer.useFacialTracking description=Enable FOIP for the dummy player
g_characterCustomizer.validationEnabled description=Enable validation for characters
g_cinematicCameraActionHoldTime description=The time you have to hold action input button/key down before cinematic camera triggers
g_cinematicCameraPlayChance description=Chance of cinematic camera playing (0 - 1 scale)
g_collision.actor.damagePerSpeedSquared description=Impact speed exceeding the safe threshold will be squared, multiplied by this value and applied as physical damage.
g_collision.actor.safeSpeed description=Impact speed that deals no damage to an actor.
g_collision.actor.warnSpeed description=Actor movement speed (EVA) that starts the collision warning check.
g_collision.actor.warnTime description=How far ahead to check for collisions.
g_collision.debug description=Log collisions (1=all collisions; 2=damaging collisions; 3=local player collisions)
g_collision.prop.damagePerSpeedSquared description=Impact speed exceeding the safe threshold will be squared, multiplied by this value and applied as physical damage.
g_collision.prop.safeSpeed description=Impact speed that deals no damage to a prop.
g_collision.prop.warnSpeed description=Currently unused.
g_collision.prop.warnTime description=Currently unused.
g_collision.vehicle.damageLandingPerSpeedSquared description=Impact speed exceeding the safe threshold will be squared, multiplied by this value and applied as physical damage when vehicle is landing.
g_collision.vehicle.damagePerSpeedSquared description=Impact speed exceeding the safe threshold will be squared, multiplied by this value and applied as physical damage.
g_collision.vehicle.landingLOSTolerance description=The collision normal tolerance against gravity while landing to use the collision speeds and damage. COS(Angle)
g_collision.vehicle.preventStaticCollisionDamageWhenLanded description=Allows collision damage to propagate to the parent item or vehicle
g_collision.vehicle.safeLandingSpeed description=Impact speed that deals no damage to a vehicle while landing.
g_collision.vehicle.safeSpeed description=Impact speed that deals no damage to a vehicle.
g_collision.vehicle.warnSpeed description=Vehicle movement speed that starts the collision warning check.
g_collision.vehicle.warnTime description=How far ahead to check for collisions.
g_colorGradientArea_Logging description=Enable/disable color gradient area logging
[0/1]
g_combatLogging.CheckRecordingStatus description=Checks if the recording is running or not.
g_combatLogging.StartRecording description=Starts the recording with the given amount of seconds
g_combatLogging.StopRecording description=Stops the recording
g_combatLogging.allowLogging description=Globally allows or disallows logging. You should have this in your user.cfg and not change while the game runs.
g_combatLogging.recordingMode description=Sets mode for combat logging. 0 / RAW, 1 - TacView
g_combatLogging.tacviewLongLatConversionType description=0 for Mikhail's, 1 for Frantz's
g_combat_stats_analytics_enabled description=Allow to disable entirely the events OnCombatStarted and OnCombatEnded which perform a lot of operations for the Analytics.It was a performance critical area before, if it's still an issue we can turn it off.0 - Disabled1 - Enabled
g_combat_stats_in_combat_timeout_secs description=Defines the time in seconds at which a player will be considered out of combatThis prevent OnCombat Started/Ended to be called back to back if you target an opponent and take him down in a short period of time.
g_combat_stats_opponent_max_distance description=Defines the range in meters at which a player will be considered out of combat towards an opponent X if the distance between them is greater than that amount of meters.
g_combat_stats_opponent_timeout_secs description=Defines the time in seconds at which a player will be considered out of combat towards an opponent X if there were no action between them in that amount of time. Such as missile locks, receiving hits, the opponent will be removed for the engaged list.
g_commsChannels_debug description=Enable the debugging of the comms channels manager
g_commsChannels_debugActor description=Show the comms channels the specified actor is in
g_commsChannels_debugMission description=Name of the mission to show which channels contains, with which people
g_commsComponent_NPCsAutoJoinChannels description=Every NPC actor will join automatically the OpenChannel when joining the game
g_commsComponent_acceptIncomingCommunication description=Accepts an incoming call from another player
g_commsComponent_autoBeep description=Beep when someone starts or stops communicating over the comms system
g_commsComponent_autoJoinOpenChannel description=Every player actor will join automatically the OpenChannel when joining the game
g_commsComponent_debugActor description=Specify the entity name of the comms component we want to debug when g_commsComponent_debugEnabled is 1
g_commsComponent_debugEnabled description=Draw the debug information about the current client's comms component
g_commsComponent_debugLogging description=Write debug information about the comms system to the log
g_commsComponent_debugPlaneEnabled description=Allow the debug plane to preview video comms in editing mode
g_commsComponent_debugPlaneSize description=Scale between 0 (smallest) and 1 (largest), relative to the width of the screen
g_commsComponent_debugPlaneX description=Position of the top left corner, in pixels, from the left side of the screen
g_commsComponent_debugPlaneY description=Position of the top left corner, in pixels, from the top of the screen
g_commsComponent_declineIncomingCommunication description=Declines an incoming call from another player
g_commsComponent_hangUpActiveCommunication description=Hangs up the current call with another player
g_commsComponent_maxBroadcastRange description=Max distance (meters) that a comms component can detect others through a zone query
g_consoleHeight description=Height of the console on screen
g_constantDOF.active description=If enabled, the DOF will be active while the player is on foot, focusing on the point the player is looking at. 1 to enable always, 0 to disable always, -1 to let the game mode decide (in Dataforge)
g_constantDOF.closeFocusTime description=When using the constant DOF mode, time to lerp the focal distance when suddenly looking at something close
g_constantDOF.debugDraw description=Draw the rays and the collision points used during the detection of the constant DOF focus
g_constantDOF.enableDuringInspect description=If disabled, the whole constant dof effect will be disabled while inspecting items
g_constantDOF.farFocusTime description=When using the constant DOF mode, time to lerp the focal distance when suddenly looking at something far away
g_constantDOF.maxDistance description=When using the constant DOF mode, maximum focal distance to use even if the first raycast hit is further away
g_constantDOF.minDistance description=When using the constant DOF mode, minimum focal distance to use even if the first raycast hit is closer
g_constantDOF.overrideRaycastGrid description=If set to 1, the raycast grid cvars can be used to modify the grid
g_constantDOF.raycastGridConeSpacing description=Separation (both X and Z in local space) between the raycasts in world space when using the raycast cone. Requires overrideRaycastGrid = 1
g_constantDOF.raycastGridSize description=Number of rays per axis in the ray cast grid. The total number of rays will be this number squared. Recommended to be an odd number. Requires overrideRaycastGrid = 1
g_constantDOF.raycastGridSpacing description=Separation (both X and Z in local space) between the raycasts in world space. Requires overrideRaycastGrid = 1
g_constantDOF.useRaycastCone description=If the raycast grid should be a cone from the player eyes (1), or parallel rays from screen space (0)
g_contactNameplates.alwaysShowContactFriendlyNameplate description=Always how nameplates for friendly contacts regardless of if they are the currently selected contact
g_contactNameplates.alwaysShowContactNeutralHostileNameplate description=Always how nameplates for neutral and hostile contacts regardless of if they are the currently selected contact
g_contactNameplates.partyNameplateDistance description=Max distance at which the party nameplates will be shown
g_contactNameplates.showContactDistance description=Show the distance to the contact
g_contactNameplates.showPartyNameplates description=Show party nameplates
g_contextSystemTracesEnabled description=Prints the opening and closing of contexts for debugging purposes
g_controllableManagerMaxNodesProcessedPerFrame description=The maximum number of control nodes that can be processed per frame by the controllable manager
g_course_prediction.debug description=Show debug for course prediction. 0: off, 1: on, 2: list path points
g_course_prediction.debug_show_cutoff description=Shows the cutoff point for making the things visible.
g_course_prediction.override_alignmentAccuracy description=Override how accurate the alignment must be with the target
g_course_prediction.override_alignmentTarget description=Override the target entity for alignment (takes EntityId)
g_course_prediction.override_alignmentTime description=Override how long you must be aligned with the target to succeed
g_course_prediction.override_highlight_speed_modifier description=If overrides the highlighting width. Needs to be above 0 to work.
g_course_prediction.override_highlight_width description=If overrides the highlighting width. Needs to be above 0 to work.
g_course_prediction.override_path_length description=Override the path length. Needs to be above 0 to work
g_course_prediction.override_path_offset description=Override the offset used for the predicted path.
g_course_prediction.override_sample_size description=override the number of samples of the past are tracked. Needs to be above 0 to work
g_course_prediction.override_segment_distance description=Override the segment distance. Needs to be above 0 to work
g_course_prediction.override_segment_lookahead description=Override the segment distance. Needs to be above 0 to work
g_course_prediction.positionOffsetAlphaCutoffMax description=Sets the max offset value for the alpha factor when offsets are too small.
g_course_prediction.positionOffsetAlphaCutoffMin description=Sets the min offset value for the alpha factor when offsets are too small.
g_course_prediction.reset_alignment description=Reset alignemnt values.
g_course_prediction.startCoursePrediction description=Start course prediction (for testing without subsumption)
g_course_prediction.stopCoursePrediction description=Stop course prediction (for testing without subsumption)
g_course_prediction.straightening_enabled description=If enabled, straightening is applied.
g_debugCameraViewManager description=Shows debug information about the camera views in the manager stack (0 == off, 1 == debug camera view manager stack, 2 == debug current view information)
g_debugCameraViewManager.debugCollisions description=Shows debug information about the camera behaviour after it approaches/collides with geometry (requires g_debugCameraViewManager = 2)
g_debugCameraViewManager.debugSelfCollisions description=Shows debug information about the camera behaviour after it approaches/collides with target geometry (requires g_debugCameraViewManager = 2)
g_debugCameraViewManager.debugShakes description=Shows debug information about the camera views shakes (requires g_debugCameraViewManager = 1 or 2)
g_debugCameraViewManager.debugSpring description=Shows debug information about the camera spring behaviour (requires g_debugCameraViewManager = 2)
g_debugCameraViewManager.debugSweeps description=Shows debug information about the physics sweeps used to find colliding geometry (requires debugCollisions or debugSelfCollisions to be set)
g_debugCameraViewManager.enableSpring description=Enables the option for spring behaviour for all relevant cameras
g_debugCameraViewManager.ignoreDistanceLimits description=Allow the camera to dolly in/out further than the limits set in Distance Config
g_debugCameraViewManager.ignoreTargetOffsetLimits description=Allow the camera to move away further than the limits set in Target Offset Config
g_debugCameraViewManager.lockPosition description=Lock the camera relative to the focus position as defined by the lockedDistance and lockedRotation cvars
g_debugCameraViewManager.lockedDistance description=When position is locked, the camera will be this distance (m) away from the focus position
g_debugCameraViewManager.lockedXRotation description=When position is locked, the camera will be this rotation (degrees) away from default on the X axis
g_debugCameraViewManager.lockedZRotation description=When position is locked, the camera will be this rotation (degrees) away from default on the Z axis
g_debugCameraViewManager.overrideSkeletonHeight description=For the player third person camera, instead of focusing on the center of the skeleton, it will focus on this height
g_debugCameraViewManager.shakeScale description=Ratio of camera shake to apply to view
g_debugDrawCinematicTrigger description=Draw the bounding box of the cinematic triggers
g_debugDrawCinematicTrigger_FilterDistance description=Only display debug info about Cinematic Triggers within this distance. <=0=Use Trigger's Max Distance.
g_debugDrawObjectContainers description=Enable debug drawing of object container bounding boxes
g_debugDrawStreamingObjectContainers description=Enable debug drawing of streaming object container spheres
g_debugDrawStreamingObjectContainersFilter description=Filters debug drawing of streaming OC radii to specific names.
g_debugDynamicCameraEffectsFStop description=Shows on-screen information about the current FStop and lerp progress while changing contexts in the dynamic camera effects
g_debugHardwareMouse description=Enables debug mode for the hardware mouse.
g_debugHeadCamOverrideControl description=If an external camera (generally from trackview) is overwriting the player head cam control, it shows where the camera is pointing to originally and where the player is looking at
g_debugMedBedRespawnScreen description=Set to 1 to test the med bed queued respawn screen on med bed respawn (set on server)
g_debugPickups description=1 = debug logging for AC pickups
g_debugPortAttachment description=debug for RSI-399136
g_debugPortAttachmentGame description=debug for RSI-399136
g_debugRangeEvents description=Display some debug spheres to indicate the size of the ranged events an entity may listen for.
g_debugSpawnPointValidity description=Fatal error if a client is requesting an initial spawn point that is in the wrong spawn group
g_debugSpawningLog description=Enabled extra logging to debug spawning
g_debugTrackviewPreparer description=Debug the pre steps done before triggering a trackview sequence
g_debugWindAreas description=Display wind area debug draw
g_debug_entitycomponentlifetime description=If enabled, shows on screen information for the EntityComponentLifetime
g_debug_hydraulic_pumpable description=If enabled, shows on screen information for the hydraulic pumpable component
g_debug_loudspeakerComponent description=Display min/max radii of loudspeaker components.
g_debug_refinery description=Activates debug for the refinery jobs.
g_debug_refinery_create_job_debug description=Creates a refining job with the given inputs. Usage: g_debug_create_refinery_job <process> < <resource> <amount>, ... > Amounts in SCU (float)
g_debug_refinery_create_job_load_debug description=Creates multiple refining job with the given inputs. Usage: g_debug_refinery_create_job_load_debug <process> <resource> <scuAmount> <jobAmount>
g_debug_stats description=Enabled massive gameplay events debug
g_defaultLoadout.display_loadout_info description=Toggle debug info for loadout selection.
g_derez_respawnTimeOverride description=Override the amount of time it takes to respawn the player after pressing X. Negative value means no override.
g_detachCamera description=Detach camera modes:
0: Disabled
1: Locks the camera
2: Like 1, and draws view frustrum
3: Camera following the player from behind
4: Camera following the player's face from the side
5: Stable camera when in ZeroG or EVA
6: Like 5, and draws debug sphere for the center position
7: Full player face view
g_detachCameraXRot description=when using g_detachCamera=5, you can specify the x-rotation around the player.
g_detachCameraXRotSpeed description=when using g_detachCamera=5, you can specify the x-rotation around the player.
g_detachCameraXSmooth description=when using g_detachCamera=5, you can smooth the motion of the camera LookAt point.
g_detachCameraXTilt description=when using g_detachCamera=5, you can smooth the motion of the camera LookAt point.
g_detachCameraYRot description=when using g_detachCamera=5, you can specify the y-rotation around the player.
g_detachCameraYRotSpeed description=when using g_detachCamera=5, you can specify the y-rotation around the player.
g_detachCameraYSmooth description=when using g_detachCamera=5, you can smooth the motion of the camera LookAt point.
g_detachCameraYTilt description=when using g_detachCamera=5, you can smooth the motion of the camera LookAt point.
g_detachCameraZRot description=when using g_detachCamera=5, you can specify the z-rotation around the player.
g_detachCameraZRotSpeed description=when using g_detachCamera=5, you can specify the z-rotation around the player.
g_detachCameraZSmooth description=when using g_detachCamera=5, you can smooth the motion of the camera LookAt point.
g_detachedCameraDebug description=Display debug graphics for detached camera spline playback.
g_detachedCameraMouseRotateNormalizeValue description=Detached camera mouse rotation normalization value
g_detachedCameraMouseRotateSpeed description=Detached camera mouse rotate speed
g_detachedCameraMoveSpeed description=Detached camera move speed
g_detachedCameraRotateSpeed description=Detached camera rotate speed
g_detachedCameraTurboBoost description=Move speed turbo boost when holding down (360) A button
g_devDemo description=To enable developer demos (intended to be checked from flowgraph)
g_difficultyLevel description=Difficulty level
g_difficultyLevelLowestPlayed description=Sets the lowest difficulty played (Used in completion for achievement determination)(Value is set to -1 in difficulty selection screen, becomes lowest difficulty 1,2,3,4 (Easy,Normal,Hard,Supersolder) when setting difficulty
g_disableDynamicCameraFOVandDOF description=Disable dynamic camera effects in game to allow flowgraph effects to take over
g_disableInputKeyFlowNodeInDevMode description=disables input Key flownodes even in dev mode. Pure game only, does not affect editor.
g_disableRespawnText description=1 - disable Press X to Respawn text.
g_disableSequencePlayback description=disable movie sequence playback
g_disableShipListFiltering description=Disable the filtering in ship lists to allow all possible ships to be shown (e.g. ASOP terminals)
g_disable_green_zones description=Disable the effects of Green/Armistice zones
g_displayDbgText_actorState description=Show information (health, current state etc.) about each actor
g_displayDbgText_plugins description=Show player plug-in-related debugging text on the screen
g_distortion.debug description=Show debug information for distortion components: 0 = off, 1 = simple at entity location, 2 = detailed as list, 3 = both
g_distortion.drawOnlyActiveDistortion description=Draws distortion debug only when distortion is currently applied
g_distortion.enableDecay description=If 1, item distortion will decay naturally over time. Must be set on auth machine!
g_distortion.filter_class description=Additionally filter the displayed distortion component debug by entity class
g_distortion.filter_name description=Additionally filter the displayed distortion component debug by entity name
g_distortion.receiveDistortionWhenOffline description=Item will still receive distortion damage even when already overloaded with distortion or when lacking a power connection.
0 = false
1 = true
g_driver_input.allowDrivingInRemoteTurret description=Allows sending driving inputs while being in a remote turret.
g_driver_input.delay_speed description=Debug driver data
g_driver_input.delay_type description=Input delay for player driver. 0: no delay, 1: linear per axis.
g_dumpPotentialSpawnPoints description=Write out all the registered potential spawn points, and their locations
g_dynamicCameraEffectsDisabledFStop description=Value used by the dynamic camera effects system to lerp towards or from a disabled value instead of lerping towards 0 (since FStop is more blurry the lower it is)
g_enableChatManagerLogging description=Enables logging on ChatManager
g_enableChatWidgetLogging description=Enables logging on ChatWidgetContextComponent
g_enableCinematicCamera description=Enable/disable vehicle cinematic cameras (0 - off / 1 - on)
g_enableControllableManagerInEditorMode description=Allows controllable manager updates and receiving power in editor editing mode
g_enableDevModeTagPoints description=Enable the dev mode tag points when running pure game mode.
g_enableFacewareHeadTrackingPlayback description=If 1, enables playback of head tracking data on remote players.
g_enableFacewarePreviewWindow description=enable/disable FacewareLive preview window.
g_enableFacewareRegularRecalibration description=enable/disable FacewareLive regular recalibration for debugging.
g_enableFacewareSystem description=enable/disable FacewareLive dll/system.
g_enableFacewareSystemInEditor description=enable/disable FacewareLive dll/system in editor.
g_enableFacewareSystemLive description=Use to toggle enable and disable tracking
g_enableFriendlyAIHits description=Enables AI-owning bullet hit feedback for friendly actors.
g_enableFriendlyPlayerHits description=Enables Player-owning bullet hit feedback for friendly actors.
g_enableHospitalSpawn description=Enable/disable respawning in hospital when dying
g_enableHospitalSpawnLoadout description=Enable/disable changing the players loadout when respawning in hospital
g_enableMedicalServiceBeacon description=When enabled, players able to create revive medical service beacons.
g_enablePVPBounty description=When enabled, PVP bounty missions will be generated for criminal players.
g_enablePickups description=1 = enable AC weapons pickups
g_enableSandboxTriggerValidation description=Enabled validation of sandbox trigger data on organizations from DataForge.
g_enableSeatAnimationValidationFatal description=CVAr added to skip a fatal error due to an incorrect initialization of an ItemSeat
g_enableVoIPAutoJoinProximityChannel description=Enables VoIP auto joining to Proximity channel.
g_enable_discount_perk description=Enables reputation based item discount perk.
g_enable_soft_green_zones description=Green/Armistice zones will allow to carry your weapon lowered
g_explosion_debugRadius description=Shows the radius of the physical explosions.
g_explosion_localStateTimeOut description=Length of time before checking local state matches remote state
g_explosion_materialFX_raycastLength description=Length of raycast for non-direct impact explosions to find appropriate surface effect
g_facewareEnablePreOptimisation description=Enable image down res before processing tracking.
g_facewareFreeLookLostTrackingTimeoutMS description=Timeout for when tracking is lost to return free look to neutral.
g_facewareHeadTrackPitchMultiplier description=Multiplier for FW head tracking pitch.
g_facewareHeadTrackRemoteSmoothing description=Smoothing rate for remote head tracking playback.
g_facewareHeadTrackRollMultiplier description=Multiplier for FW head tracking roll.
g_facewareHeadTrackYawMultiplier description=Multiplier for FW head tracking yaw.
g_facewareHeadTrackingCouplePositionOffsetToOrientation description=Defines whether or not the positional offset is based on the orientation.
g_facewareHeadTrackingDeadZoneOffset description=Defines the deadzone for FaceWare head tracking in degrees.
g_facewareHeadTrackingPositionDeadZoneForwardback description=Defines the internal Faceware position deadzone in meters - forward back.
g_facewareHeadTrackingPositionDeadZoneLeftRight description=Defines the internal Faceware position deadzone in meters - left right.
g_facewareHeadTrackingPositionDeadZoneUpDown description=Defines the internal Faceware position deadzone in meters - up down.
g_facewareHeadTrackingPositionScale description=Defines the internal Faceware position multiplier.
g_facewareHeadTrackingPositionSmoothing description=Defines the smoothing speed for faceware based translational offset.
g_facewareHeadTrackingRotationDeadZonePitch description=Rotation deadzone for Faceware headtracking in pitch.
g_facewareHeadTrackingRotationDeadZoneRoll description=Rotation deadzone for Faceware headtracking in roll.
g_facewareHeadTrackingRotationDeadZoneYaw description=Rotation deadzone for Faceware headtracking in yaw.
g_facewareHeadTrackingSmoothing description=Defines the smoothing for FaceWare head tracking.
g_facewarePushToRemoteHeadTrack description=If set remote head tracking respects push to head track setting.
g_facewareRecalibrate description=Recalibrates faceware SDK
g_fire.behavior description=Enable/Disable different parts of the fire behavior
g_fire.compressByCombustibleVoxels description=Enables bounds compression by combustible voxels
g_fire.debug description=Toggle the debug window for fire
g_fire.drawAreaBounds description=Draw the bounds and transform for nearby fire areas
g_fire.drawAverageStateBounds description=Draw average state boundaries.
g_fire.drawDamageEvents description=Draw debug for when damage impacts happen
g_fire.drawEmitterGroups description=Draws the position and bounds of all Fire Emitter Groups
g_fire.drawEntityDebug description=Draw entity visual debug for fire
g_fire.drawFilterVolumes description=Draw volumes of filter entities
g_fire.drawFireRepairers description=Draw fire repairers
g_fire.drawIgniterVolumes description=Draw fire volumes of igniter entities
g_fire.drawPermanentEffectsDebug description=Enables a debug view for permanent fire effects (burn & glow).
 0: disable view
 1: proxy box debug view
 2: visarea stencil debug view
 3: triplanar UV debug view

g_fire.drawSnapshotDebug description=Draw snapshot visual debug for fire. Requires setting a target snapshot to be visualized.
g_fire.drawVolumeDebug description=Draw options for various volumes tracked and used for interacting with fire
g_fire.drawVoxelDebug description=Draw voxel grid visual debug for fire
g_fire.drawVoxelizationDebug description=Draw debug for the voxelization of static environments
g_fire.effectOptions description=Different options for controlling the effect emitters
g_fire.enable description=Enable/disable fire. 0: force disable, 1: force enable, 2: allow game rules to enable or disable. Must be set in user.cfg
g_fire.fogDensityOverride description=Overrides the fog density in all rooms to the specified amount (-1 = deactivated).
g_fire.forceUpdate description=Force update of voxels, even when not marked as having any fire
g_fire.forceVehicles description=If fire is enabled on Vehicles, ignore the Fire Enabled tag.
g_fire.globalCombustibility description=Global multiplier for combustibility. Affects how fast fire grows on entities and how much chance to ignite when receiving damage.
g_fire.gravity description=Override the standard gravity used for fire propagation calculations. [in g]
g_fire.impactDamagePerSpeedSquared description=Impact speed exceeding the safe threshold will be squared, multiplied by this value and applied as physical damage.
g_fire.impactSafeSpeed description=Impact speed that deals no damage to ignite a fire
g_fire.includeDamageInIgnitionChance description=Will use damage to calculate the ignition chance when receiving damage
g_fire.network.backgroundSimulationMaxSteps description=Limits the number of simulation steps that can be run in the background (-1 disables the limit).
g_fire.network.loggingEnable description=Enables additional logging for networked data transferral.
0: disabled
1: basic logging
2: normal logging
3: extensive logging
g_fire.network.minimumSimilarity description=The minumum percentage difference between local & remote average states before a client will request an up-to-date snapshot from the server [in %].
g_fire.network.pauseOnBackgroundSimulation description=Whether or not the main simulation should pause while the background simulation is catching up.
g_fire.network.serializedSnapshot.fireVolumeThreshold description=The minimum fire volume intensity before an Authoritative voxel grid will begin saving new serialized snapshots for late joiners, every g_fire.network.serializedSnapshot.frequency [in s].
g_fire.network.serializedSnapshot.frequency description=The amount of time before an Authoritative voxel grid will save a new serialized snapshot for late joiners [in s].
g_fire.network.serializedSnapshot.maximumAge description=The maximum age of a serialized snapshot before a joining client ignores it [in s].
g_fire.network.simulateOnClient description=Toggles simulating fire locally in a client.
 0: no client simulation
1: run local simulation
g_fire.network.simulateOnServer description=Toggles simulating fire in an authoritative client.
 0: no authoritative simulation
1: run authoritative simulation
g_fire.network.simulateSnapshotOnBackground description=Simulate the voxel grid snapshot to bring it up to date with the present timestamp on a background thread.
g_fire.oxygenReplenishRate description=How quickly oxygen replenishes in the fire area room. Adds amount of room mass to refill the oxygen X times per hour.
g_fire.physicalizationLog description=Log data for debugging voxelizer
g_fire.regenerateAllVoxelGrids description=Regenerates all existing voxel grids when set to 1, then performs no action until it is reset to 0. Useful to regenerate voxel grids automatically in TrackView. NOTE: Regenerating grids is a lot slower than resetting them!
g_fire.reset description=Reset all rooms on fire
g_fire.resetAllVoxelGrids description=Resets all existing voxel grids when set to 1, then performs no action until it is reset to 0. Useful to reset voxel grids automatically in TrackView.
g_fire.rigidVoxelization description=Add rigid entities for voxelization
g_fire.roomConnectorFuelRadiusMultiplier description=Multiplier for room connectors radii used to gather fuel data.
g_fire.roomTemperatureCooler description=Cools down fire area rooms to default room temperture, after a fire has heated up the room. [in K/s]
g_fire.speedMultiplier description=A multiplier to increase or decrease speed
g_fire.stageEnable description=Whether or not Fire Hazard visuals should be enabled globally.
g_fire.useGeneratedFogVolumes description=Whether or not Fog volumes should be manually linked or generated.
 0: disabled
 1: indoors only
 2: indoors and outdoors
g_fire.voxelGridBound description=A buffer around the volume also covered by the voxels. [in meters]
g_fire.voxelMaxCount description=The maximum number of allowed voxels per-room. Rooms that would generate more voxels than this amount will be skipped.
g_fire.voxelOverlapDimensions description=If checking with an unrecognized shape, how many points per axis to check for overlap to calculate the volume
g_fire.voxelSize description=Override the size of the voxels used for fire hazards. [in meters]
g_fire.voxelizeOnBackground description=Execute voxilization of the fire voxel grid on a background thread.
g_fire.windRotation description=Override the wind direction used for fire propagation calculations. [in degrees]
g_fire.windStrength description=Override the gravity used for fire propagation calculations. [in m/s]
g_firingRange_debugEnable description=Enable firing range debug text
g_flashBangMinFOVMultiplier description=Set the minimum multiplier for the dot product comparison
g_flashBangMinSpeedMultiplier description=Set the minimum movement and rotation speed multiplier when stunned by a flashbang
g_flashBangNotInFOVRadiusFraction description=Set the radius fraction which will still blind a player even if not looking at a flashbang
g_flashBangSpeedMultiplierFallOffEase description=Alters the falloff curve for the flashbang multiplier
g_flightAI.activateAnalytics description=Activate analytics for the fligth ai movement blocks
g_flightAI.autopilotAccuracyWithMovingTargets description=How accurate should be the IFCS autopilot when tracking a moving target (0 to 1 where 1 is the most accurate)
g_flightAI.deployLandingGearsTimeOffsetToEndOfSpline description=The Ship will start deploying the landing gears this amount of seconds before reaching the end of the landing spline
g_flightAI.detectWithSpotlightDebugDraw description=Shows debug information for the DetectWithSpotlight Subsumption task.
[1] = Draws detection cone.
[2] = Draws line towards target.
g_flightAI.enableGSafe description=
g_flightAI.enteredAtmospherePressureThreshold description=Minimum atmospheric pressure for an AI ship to be considered in atmosphere (differs from exitedAtmospherePressureThreshold to prevent state oscillation)
g_flightAI.exitedAtmospherePressureThreshold description=Maximum atmospheric pressure an AI ship can experience while still considering itself outside of any atmosphere (differs from enteredAtmospherePressureThreshold to prevent state oscillation)
g_flightAI.flightBlockDebug description=If > 0, display the debug info of flightblocks that are currently being executed
g_flightAI.flightBlockDebugFilter description=Filter what flight block debug appears by flight block name
g_flightAI.flightBlockDebugTextSize description=Size of debug text used for flight blocks
g_flightAI.flyBySubTargetDeadzoneAngle description=Angle in degrees. If the AI's ship is within this angle of passing the subtarget or aligned with the subtargets offset then it will stop trying to pass the specifically by the subtarget.
g_flightAI.flyToActionsBufferSize description=The Autopilot needs this number of FlyTo actions queued to smoothly interpolate through the waypoints
g_flightAI.formationsDebug description=
g_flightAI.landingOffsetFromOriginalTouchdownPosition description=The pilot should aim at a position this amount of meters below the original touchdown target
g_flightAI.landingSucceedsWhenLandingGearsCompress description=If not zero, the landing block will override the landing target by an amount dictated by offsetFromOriginalTouchDownPosition and let the landing gears telling the pilot when the landing has been successful.
g_flightAI.localVelocityAvoidanceDebug description=Draw SDF based local avoidance in velocity control mode
g_flightAI.splineTunnelRepositioningSpeedRandomization description=How much randomization is allowed in the repositioning speed, E.g. if 0, repositioning speed will always be max, if 0.5, then repositioning speed will vary between 0.5 * max respoitioning speed and max
g_flightAI.splineTunnelSegmentGap description=Distance between segments in a spline tunnel
g_flightAI.timeToCollisionDraw description=Draws the search AABB around each AI ships and all obstacles found inside the search area with a log of the TTC value (if any) at the center of their volume
g_flightAI.timeToCollisionRadiusScaler description=Asteroid radiuses are inflated. This is a well functioning hack while waiting for a reasonable way to access the true radius of asteroids.
g_flyCamLoop description=Toggles whether the flycam should loop at the end of playback
g_foipCameraIdentifier description=Internal Hash ID of the currently selected FOIP camera.
g_foipCameraRotation description=Rotates the camera image before processing: 0: none, 1: 90, 2: 180, 3: 270.
g_foip_facialCullDistance description=Culling distance for foip facial data.
g_foip_facialEnableDistance description=Enable distance for foip facial data.
g_foip_skipEnableDialog description=0 = show FoIP enable dialog on camera detection, 1 = skip and enable, 2 = skip and disable
g_foip_subscriptionCullDistance description=Cull distance for foip subscription.
g_foip_subscriptionEnableDistance description=Enable distance for foip subscription.
g_foip_voiceCullDistance description=Culling distance for foip voice data.
g_foip_voiceEnableDistance description=Enable distance for foip voice data.
g_footstepSoundMaxDistanceSq description=Maximum squared distance for footstep sounds / fx spawned by Players.
g_force_2d_comms_notifications description=If >0, forces comms notifications to use the FakeCommsAudioEntity to display a 2D image instead of 3D scenes.
g_force_lowpriority_notifcation description=Set to force notifications to be low priority
g_force_notifification_button description=Set to force notifications to show button
g_freight_elevator.ItemBankUseLootScreen description=Tell the item bank to use the looting screen instead of the PIT.
g_freight_elevator.allFreightElevatorCanBeLoweredWithItem description=0 - The behavior will be normal. 1 - All freight elevator can be lowered with item. 2 - All elevator will prohibit lowering with item.
g_freight_elevator.allFreightElevatorCanBeRaiseManually description=0 - The behavior will be normal. 1 - All freight elevator can be raise manually with item. 2 - All elevator will auto raise and will prohibit raising it with item.
g_freight_elevator.badStateRecoveryBehavior description=0 - Bad state recovery will be disabled. 1 - Bad sate recovery will happen if something wrong is detected. 2 - Bad state recovery will be enable everytime an authority change is detected, even if nothing wrong as been detected.
g_freight_elevator.duplicate_item_in_warehouse_view description=Will duplicate by the amount set.
g_freight_elevator.log_level_freight_elevator_kiosk description=Determine the level of verbosity of a freight elevator kiosk.
g_freight_elevator.open_location_on_itembank_interaction description=Determine the level of verbosity of a freight elevator kiosk.
g_freight_elevator.showInactiveMissionInventory description=Will show inactive mission inventory as well if set to 1.
g_freight_elevator.show_debug_info_on_kiosk_item_tooltip description=Will show some debug info such as Record Class and Entity ID on hovering items in ItemBank and FEK.
g_freight_elevator.timeBeforeKioskIsConsideredStalledInSecond description=Amount of time that need to be elapsed in the same sate before the kiosk is considered stalled and initiate bad sate recovry
g_friendManager.friendRequests description=Toggle friend requests on or off
g_frontendcontroller.log description=Enable/Disable FrontendController logging
g_gameFXSystemDebug description=Toggles game effects system debug state
g_gameIntersectionTestQuota description=Amount of deferred intersection tests allowed to be cast per frame by Game
g_gameRayCastQuota description=Amount of deferred rays allowed to be cast per frame by Game
g_gameRules.allowAllPlayerCameras description=Enable/Disable overriding game rules camera restrictions. Allowing cameras such as 3rd person in FPS modes where it's disabled by default. Must be set in user.cfg
g_gameRules.allowNonLocationSpawnpoints description=In PU game modes, allow spawn points with unset location id. Defaults to 1 in development, 0 in shipping.
g_gameRules.control.capturableDebug description=Show debug Info on Capturable Entities
g_gameRules.control.objectiveDebug description=Show the phase info for each Objective.
g_gameRules.control.phaseDebug description=Show the phase info for this control game mode.
g_gameRules.damagehandling.disableCollisionFilter description=Enable/Disable collision damage filter for GameRulesSCDamageHandling. 0 - fully enabled, 1 - fully disabled, 2 - disabled for vehicles only
g_gameRules.damagehandling.log description=Enable/Disable logging for GameRulesSCDamageHandling
g_gameRules.despawnOnProjectileHit description=Entity hit by projectile will be despawned. If part of OC, whole OC will get removed. Disabled if 0.
g_gameRules.editorUseSpawnpoints description=Go to game mode in editor spawns you at spawn point as chosen by game rules. Disabled if 0.
g_gameRules.overrideRespawnTimer description=Override for game mode respawn timer after death. Disabled if -1.
g_gameRules.scoring.enabled description=Enable/Disable Scoring
g_gameRules.scoring.log description=Enable/Disable Scoring Logging
g_gameRules.showRaceCheckpoints description=Race mode show debug checkpoint info
g_gameRules.showRaceInfo description=Race mode show debug race info
g_gameRules.state.log description=Enable/Disable logging for game rules state module
g_gameRules.state.set description=Force game state (0=Reset, 1=NotStarted, 2=Intro, 3=PreGame, 4=InGame, 5=PostGame, 6=Shutdown
g_gamerules.log description=Enable/Disable CGameRules logging
g_gasCloudOverrideVolumeDebug description=Draw gas cloud override volume boundaries
g_glassAutoShatter description=Always smash the whole pane, and spawn fracture effect
g_glassAutoShatterMinArea description=If the area of glass is below this, then autoshatter
g_glassAutoShatterOnExplosions description=Just smash the whole pane, and spawn fracture effect for explosions
g_glassForceTimeout description=Make all glass break after a given time, overrides art settings
g_glassForceTimeoutSpread description=Add a random amount to forced glass shattering
g_glassMaxPanesToBreakPerFrame description=Max glass breaks, before auto-shattering is forced
g_glassNoDecals description=Turns off glass decals
g_glassSystemEnable description=Enables the new dynamic breaking system for glass
g_godMode description=God Mode
	0 = off
	1 = players and AI
	2 = players only
	3 = demi-god player (damage but no death)
g_gotoMode description=Changes how gotos are handled.
0: Gotos are handled in the client's local entity system by moving the entity to the world space position of the goto
1: Gotos are handled by the server using the TeleportAPI
g_green_zone_debug description=Enable on-screen debugging for Green/Armistice zones
g_green_zone_obedience_debug description=Enable on-screen debugging for green zone obedience components
g_green_zone_obedience_server_recovery_zone_cache_timer description=After a crash recovery, the previously active green zones are cached for this period of time. This is supposed to counter streaming delays.
g_hacking_debug_enable description=Enable or disable hacking minigame debugs
g_hacking_debug_fg_test_fire_allowed description=Flag to allow test firing flow graph states even when hacking minigame is not running.
g_hacking_debug_fog_of_war_disabled description=Flag to disable fog of war.
g_hacking_debug_game_ai_disabled description=Flag to disable hacking AI. 0 to enables AI, any other value disables it.
g_hacking_debug_gen_seed description=Custom seed to use for hacking board generation. Set to 0 to use random seed
g_hacking_debug_hide_lens_output description=Flag to disable hacking minigame output to lens. 1: Use weapon as the UI output. 2: Hide everything.
g_hacking_debug_ignore_hacking_device_check description=Flag to disable hacking device check (hack can be started without device).
g_hacking_debug_skip_cooldown description=Flag to allow skipping cooldown for abilities.
g_hacking_debug_skip_spawn_sequence description=Allows to skip spawn sequence to speed up debugging.
g_hacking_debug_swap_partially_revealed_nodes description=Flag to allow swapping partially revealed nodes.
g_hacking_debug_use_classic_rules description=Sets up classic ruleset of original prototype
g_hazard.debugArea description=1. Display only the areas (no text info) 2. Display areas + damage type info 3. Display areas + affected entities info 4. Display everything
g_hazard.disable description=A value of 1 will disable hazard zones.
g_hazard.log description=Enable/Disable hazard logging
g_hazard.useTags description=0 - Entity need the right tag to be affected. 1 - Entity are affected no matter their tag. 2 - If the tag list is empty it will affected all entity
g_headtrackingDebug description=Enables debug drawing of head tracking data
g_headtrackingGlobalSmoothingPosition description=Smoothing for the rotation, between 0 and 1. Set via CVAR
g_headtrackingGlobalSmoothingPositionMax description=Max value for smoothing, not set by CVAR. This is a reference value for the CDSmooth.
g_headtrackingGlobalSmoothingPositionMin description=Min value for smoothing, not set by CVAR. This is a reference value for the CDSmooth.
g_headtrackingGlobalSmoothingRotation description=Smoothing for the position.
g_headtrackingGlobalSmoothingRotationMax description=Max value for smoothing, not set by CVAR. This is a reference value for the CDSmooth.
g_headtrackingGlobalSmoothingRotationMin description=Min value for smoothing, not set by CVAR. This is a reference value for the CDSmooth.
g_headtrackingHoldUseRawValuesDuringHold description=1: If 1 it only uses the raw headtracking values without any internal offsets.
g_headtrackingIgnorePositionalLimits description=1: Ignores positional limits in seats.
g_headtrackingInactivityTime description=If head tracking not been supplied with valid inputs for the given amount seconds, it will be treated as off.
g_headtrackingRollAngularLimit description=Sets the default angular limit for head rolling. Default is 45 deg.
g_headtrackingRollFPSEnabled description=1: Enables head rolling in fps.
g_headtrackingRollSeatEnabled description=1: Enables head rolling in seats.
g_headtrackingSeatPositionOffsetEnabled description=1: Enables head tracking based seat position offsets.
g_headtrackingSource description=Sets the headtracking source:0: None1: NaturalPoint TrackIR2: Faceware (i.e. webcams)3: Tobii4: Debug device (see g_headtrackingDebug for more commands)5: HMD VR headsets (not implemented)
g_headtrackingThirdPersonCameraEnabled description=Head Tracking in 3rd person: 0: Disabled, 1: Enabled.
g_headtrackingThirdPersonCameraScale description=Changes the scale for 3rd person headtracking offsets.
g_headtrackingThirdPersonDisableDuringInventory description=1: Automatically turns off headtracking off during inventory access (3rd person only).
g_headtrackingToggleAutoRecalibrate description=If enabled recalibrates before toggle use.
g_headtrackingToggleDisableDuringADS description=1: Automatically turns off headtracking off during walking.
g_headtrackingToggleDisableDuringInteractionMode description=1: Automatically turns off headtracking off during interaction mode.
g_headtrackingToggleDisableDuringMobiglass description=1: Automatically turns off headtracking off during mobiglass.
g_headtrackingToggleDisableDuringSeat description=1: Automatically turns off headtracking off while being in a seat.
g_headtrackingToggleDisableDuringVehicleAds description=1: Automatically turns off headtracking off during interaction vehicle ADS.
g_headtrackingToggleDisableDuringWalking description=1: Automatically turns off headtracking off during walking.
g_headtrackingToggleEnabled description=Head tracking for actor: 0: Disabled, 1: Enabled.
g_helmsman_input.allowDrivingInRemoteTurret description=Allows sending driving inputs while being in a remote turret.
g_helmsman_input.delay_speed description=Debug driver data
g_helmsman_input.delay_type description=Input delay for player driver. 0: no delay, 1: linear per axis.
g_hideArms description=Hide arms in first person
g_hintsBuildingBlocks description=Show in-game hints using 0 - Old system with flash | 1 - using default for game mode | 2 - force using building blocks
g_hitInfo.log description=If 1, trace all hit flow across various systems.
g_holoVolumeDebug description=Draw holo volume boundaries and other information
g_if_new_nofication_system_show_objective_notifications description=Set to 1 to show notifications for objectives if new notification system is being used.
g_iim.debug description=If enabled (> 0), show on-screen debug info for instanced interiors and gateways.
g_iim.enableTimeout description=enable instance timeouts > 0.
g_iim.hangarHack description=BUG-183234 hack
g_iim.notice description=show extra debug logging info > 0.
g_iim.teardownOnPlayerStreamOut description=enable tearing down instances owned by a player that streams out
g_iim.teardownOnStreamOut description=enable tearing down all instances on IIM stream out
g_iim.updateLogTime description=how many seconds should pass during UpdateRequests for information to be logged.
g_imageTest description=Take a screenshot for each camera that is flagged to be 'overriden' in the current level. Screenshots are saved in CaptureOutput folder.
Usage: g_imageTest 'OutputFolder', where 'OutputFolder' is optional.
Examples: g_imageTest test
g_imageTest
g_imageTestAbort description=Abort all remaining capture requests.
g_imageTestAutoCamEnable description=1 - Enable/0 - Disable auto cameras.
g_imageTestAutoCamScreenSize description=A string that describes the list of screen sizes for auto cameras captures.
Entities/Meshes/OCs are displayed in a square range with side length of 'screenSize'% of screen's height. If list is empty, auto cameras are placed at twice the distance of objects' bounding box corners.
Examples: g_imageTestAutoCamScreenSize 100
g_imageTestAutoCamScreenSize 10 20 50 100 200 500
g_imageTestAutoCamScreenSize ""
g_imageTestCaptureWait description=Once streaming is complete and animation time and temporal effects are reset, Image Test will wait the number of frames defined by this CVar before it starts to take the capture.
Default is 12, which is the number of frames that TSAA takes to stabilise.
g_imageTestEntity description=Spawn entities and take a screenshot for each camera that is flagged to be 'overriden' in these entities. Screenshots are saved in CaptureOutput folder.
Usage: g_imageTestEntity 'EntityFilter' 'OutputFolder', where 'EntityFilter' can be a wildcard and 'OutputFolder' is optional and it can be character ? to list all entities found instead of taking screenshots.
Examples: g_imageTestEntity *Glad* ?
g_imageTestEntity ANVL_Gladiator test
g_imageTestEntity ANVL_Gladiator
g_imageTestIndividualMode description=Perform image tests one at a time, moving one once per g_imageTest call
g_imageTestMesh description=Spawn meshes and take a screenshot for each camera that is flagged to be 'overriden' in these meshes. Screenshots are saved in CaptureOutput folder.
Usage: g_imageTestMesh 'InputFiles' 'OutputFolder', where 'InputFiles' can be a wildcard and 'OutputFolder' is optional and it can be character ? to list all meshes found instead of taking screenshots. 'InputFiles' are assumed to be in Data folder.
Examples: g_imageTestMesh *.cga ?
g_imageTestMesh objects/vehicles/greycat/ptv/grin_ptv.cga test
g_imageTestMesh objects/vehicles/greycat/ptv/grin_ptv.cga
g_imageTestOC description=Spawn object containers and take a screenshot for each camera that is flagged to be 'overriden' in these object containers. Screenshots are saved in CaptureOutput folder.
Usage: g_imageTestOC 'InputFiles' 'OutputFolder', where 'InputFiles' can be a wildcard and 'OutputFolder' is optional and it can be character ? to list all OCs found instead of taking screenshots. 'InputFiles' are assumed to be in Data folder.
Examples: g_imageTestOC ObjectContainers/Squadron42/Ships/* ?
g_imageTestOC ObjectContainers/graphics_features.socpak test
g_imageTestOC ObjectContainers/graphics_features.socpak
g_imageTestRenderDocCapture description=Get a RDoc with each image capture
g_imageTestReturnToOldPrecacheStreaming description=Once an Image Test finishes, it returns to the old precache streaming.
g_imageTestReturnToOriginalCamera description=Once an Image Test finishes, it returns to the player/editor's camera.
g_imageTestStatsMerge description=Gather all stats of all CSV files in CaptureOutput folder and save them in CaptureOutput/AllCapturesStats.csv.
g_imageTestUseOldPrecacheStreaming description=1 - Use/0 - Not use the old precache streaming during the camera captures.
g_initialMissionOverride description=Override for the initial subsumption mission module to run when the game starts or a player connects in standalone/multiplayer
g_initialMissionSeed description=Seed value for the initial subsumption mission module
g_insuranceClaimsImmediateServer description=If 1, All insurance claims made will finish processing immediately. Must be set on server
g_interactable.alwaysMulticast description=If 1, authority will multicast all successful internal interactions (that are not from a non-player actor).
g_interactable.maxInteractionsPerUpdate description=Rate limit the amount of deferred interactions which can be processed in one update.
g_interdictionSystem.dumpInterdictionFields description=Dumps information about the currently known interdiction fields to the log, must be run on the server. (No arguments)
g_interdictionSystem.enable description=Enables the new Interdiction System (Interdiction Fields via ECCS)
g_interdictionSystem.logInterdictionFieldUpdates description=Enable log updates to the collection of interdiction fields from service events. Must be run on the server.
g_interdictionSystem.maximumDelayBetweenPushes description=Controls how long (in seconds) before forcing a push of interdiction fields to ECCS. Set to -1 to turn off pushing to the service every X seconds
g_interdictionSystem.minimumDelayBetweenPushes description=Controls the minimum amount of time (in seconds) between pushing interdiction fields to ECCS. This reduces the amount of potential service spam. Set to -1 to allow for no delay
g_interdictionSystem.positionDeltaBeforeForcePush description=Controls the position delta (in meters) that a field has to move by before we push it's updated position to the ECCS. Fields will only be pushed if the minimum delay has passed since the last push
g_intoxication_input.deadZone description=Intoxication input per axis deadzone to discard unwanted movement. Input received by the controls should be between 0-1.
g_intoxication_input.debug description=Display debug information for the intoxication.
g_intoxication_input.debugFactor description=Forces the intoxication factor which affects player's maneuvering of the vehicle/turret.
g_intoxication_input.enable description=Enable/Disable the intoxication input modifier.
g_intoxication_input.maxAxesScale description=The maximum axes scale when the input deflection is at 1.0.
g_intoxication_input.minAxesScale description=The minimum axes scale when the input deflection is at 0.1.
g_itemsLodRatioScale description=Sets the view dist ratio for items owned by AI/Player in SP.

g_itemsViewDistanceRatioScale description=Sets the view dist ratio for items owned by AI/Player in SP.

g_joint_breaking description=Toggles jointed objects breaking
g_jump_drive.debug description=Enable debug draw and logging for jump drives
g_jump_drive.debug_movement description=Enable debug draw for jump drives movement forces in the tunnel
g_jump_drive.debug_tunnelRepelAccel description=Enable debug information for tunnel repel accelerations
g_jump_drive.disableEnteringPullin description=Disables the pull in effect on entering
g_jump_drive.disableFailures description=Disabled failures while transiting through a Jump Tunnel
g_jump_drive.disableFuelBurn description=Disables QFuel usage while transiting
g_jump_drive.disableTunnelDistortion description=Disabled Tunnel Distortion Damage
g_jump_drive.disableVibrations description=Disables all vibrations related to jump gameplay (any other vibrations are unaffected)
g_jump_drive.logging description=Enable trace logging for jump drives. 1 = enabled if drive is on auth machine or locally controlled, 2 = enabled on all drives on all machines
g_jump_drive.logging_movement description=Enable trace logging for jump drives movement forces in the tunnel. Requires g_jump_drive.logging=1
g_jump_drive.overrideProgressForTransition description=If >= 0, ratio of progress down the tunnel that a transition will happen (max 1)
g_jump_drive.overrideShipUseAngAccels description=Ship: Enables angular accelerations.  -1: use params, 0: disable, 1: enable
g_jump_drive.overrideShipUseLinAccels description=Ship: Enables linear accelerations. -1: use params, 0: disable, 1: enable
g_jump_drive.overrideShipUseSteeringAccels description=Ship: Enables steering accelerations. -1: use params, 0: disable, 1: enable
g_jump_drive.overrideShipUseTurbulence description=Ship: Enables turbulence accelerations. -1: use params, 0: disable, 1: enable
g_jump_drive.overrideTunnelUseAngularAccels description=Tunnel: Enables angular accelerations.  -1: use params, 0: disable, 1: enable
g_jump_drive.overrideTunnelUseWallRepelForces description=Tunnel: Enables repel forces accelerations.  -1: use params, 0: disable, 1: enable
g_jump_drive.triggerFailure description=If in jump tunnel travel, force the local authoritative jump drive to fail. Client only!
g_jump_drive.turbulenceLacunarity description=This is a pattern value for the noise. Low values produce uniformity, high values heterogeneity.Leave it at 2 when in doubt as that is the proposed default value of the fractal noise classes.
g_jump_drive.turbulenceOctaves description=Defines the number of iterations the noise generator goes through on a single call. Use 3.0 when in doubt.
g_jump_drive.turbulenceOverwriteRatio description=Turbulence - If above >= 0 it overrides the used turbulence ratio
g_jump_point.debug description=Enable debug draw for jump points
g_jump_point.debug_exits description=Enable debug draw for jump point exit volumes
g_jump_point.enable_pull_in description=Enable physics entities being pulled into the jump point when it opens (ships will still be pulled in)
g_jump_point.enable_push_out description=Enable physics entities being pushed away from the jump point when it closes
g_jump_point.force_reset description=Force reset all data on the given jump point on all machines, including SVs. Must be triggered from authoritative machine, intended ONLY as a panic button for worst case scenarios!
 Args: <jumppointname: autocomplete>
g_jump_point.force_state description=Force the given jump point to a given state
 Args: <jumppointname: autocomplete> <statename: autocomplete>
g_jump_point.logging description=Enable trace logging for jump points
g_jump_point.logging_pull_in_accels description=Enable trace logging for the accelerations that get applied to jump point pull in entities. Requires g_jump_point.logging=1
g_jump_point.logging_push_out_accels description=Enable trace logging for the accelerations that get applied to jump point push out entities. Requires g_jump_point.logging=1
g_jump_point.override_openTimer description=-1 = Do not override timer, 0 = Disable Timer (Jump Point stays open forever), > 0 = Override with the desired value. (CAN ONLY BE USED ON SERVER)
g_jump_point_atc.debug description=Enable debug draw for jump point ATCs
g_jump_point_atc.logging description=Enable trace logging for jump point ATCs
g_jump_tunnel.debug description=Enable debug draw and logging for jump tunnels
g_jump_tunnel.debug_radialDistribution description=Debug draw some points to compare radial distributions, including with a min radius
g_jump_tunnel.easyMode description=Generates an easier tunnel for testing purposes. Net synced!
0: Off
1: Straight tunnel
2: Sine wave tunnel

g_jump_tunnel.enableObstacles description=Enable obstacle placement in the tunnel
g_jump_tunnel.enablePerfCaptureOnSystemTransition description=Takes a 30 second performance capture on solar system transition
g_jump_tunnel.enableRandomExitPos description=Successful exit position uses a random offset from the destination instead of a static one
g_jump_tunnel.enableTransition description=Enable a solar system transition when traveling down the jump tunnel
g_jump_tunnel.enableTunnelKillingActors description=The tunnel will kill any actor that enters it (without a ship), this can be useful to turn off for debugging by setting this to 0
g_jump_tunnel.logging description=Enable trace logging for jump tunnels
g_jump_tunnel.logging_failure_accels description=Enable trace logging for the accelerations that get applied to jump tunnel failure in entities.Requires g_jump_tunnel.logging = 1
g_jump_tunnel.overrideLength description=If > 0, this value is used as the desired length when generating a tunnel instead of the one from data. Net synced!
g_jump_tunnel.overrideSeed description=If >= 0, this value is used as the tunnel seed instead of it's entity id. Value must be <= INT64_MAX, and the in-game seed may look different due to integer casting! Net synced!
g_jump_tunnel.reset_to_source description=Transition the given jump point to the source system, with the entrance aligned to the origin jump point
 Args: <jumptunnelhostname: autocomplete>
g_jump_tunnel.stayAliveTime description=Time (s) after the tunnel empties that it will be destroyed (minimum 2.5 seconds)
g_jump_tunnel.transition_to_target description=Transition the given jump point to the target destination, aligned with the target exit (or if not available, the source destination - e.g. single player)
 Args: <jumptunnelhostname: autocomplete>
g_landingArea_drawVolumes description=1: Draw LandingArea bounds, 2: Draw with extended ATC legal bounds, 3: Draw with extended Platform bounds
g_landingArea_extend_volume_down description=Will extend landing area volume downward by the distance of the cVar
g_landingArea_handle_enter_leave_event description=If set to 0 it will not create an area after spawn batch if it is inside an instance interior.
g_landingSplineVisual.debug description=Debug drawing for landing spline visuals
g_language description=Defines which language pak is loaded
g_languageAudio description=Will automatically match g_language setting unless specified otherwise
g_lastGotoNextSuccessful description=After calling GotoNext on a client, this cvar will be set to 1 if a point was found and the teleport was successful.
g_lifetime_authorizer_forceremoval_immune_player_vehicle_count description=Number of vehicles that are immune from lifetime authorizer force removal per player
g_lightGroupController.player_default_settings_lights_enabled description=Player default options are set by the option menu. If set to 1, the lights will be on by default.
g_loadMod description=
g_loadingArea_drawVolumes description=Set to 1 to draw LoadingArea bounds
g_loading_platform.debug_draw description=Activate debug draw for the loading platform.  
	1 = Draw all 
	2 = Draw loading platform (Aquamarine)
	3 = Draw front gate (Magenta)
	4 = Draw loading gate (Yellow)
	5 = Draw obstruction zone (White)
	6 = Draw exeption zone (Red)
	7 = Draw the kiosk (Violet)
	8 = Draw the sphere culling (Cyan)

g_loading_platform.debug_draw_filter description=Filter loading platform by name for debug draw for the loading platform: 
g_loading_platform.forceKinematic description=0 - Normal functionality, 1 - Loading Platform will set the missing kinematic flag on all physical parts, but this is slow and should be avoided if possible.
g_loading_platform.ignoreEntityBiggerThenQuery description=If activated the laoding platform will ignore any entity bigger then the query.
g_loading_platform.ignoreObstruction description=The loading platform will ignore all obstruction.
g_loading_platform.loadingBehavior description=0 - None the vehicle will simply be there, 1 - Loaded vehicle physics NetSync disabled, 2 - Loaded vehicle attached, 3 - Behavior will be decided by the vehicle setting, 4 - Behavior will be decided by the context
g_loading_platform.trackedLoadingBehaviorEntities description=0 - Apply loading behavior to loading target (spawned vehicle) only, 1 - Apply loading behavior to target and any dynamic entity touching the platform
g_loadoutEditor.dummy_transform_debug description=Print debug information for the loadout dummy transform.
g_loadoutEditor.preview_transform_debug description=Print debug information for the loadout item preview transform.
g_loadoutEditor.provider_debug description=Print debug information for the loadout provider.
g_loadoutEditor.read_only_vehicles description=Enable the readonly behaviour of the VMA. 1 = Ships can only be modified in landing zones, 0 = Ships can be modified anywhere.
g_logInteractableRequests description=Set to enable debug traces for interaction requests.
g_logInteractableUseConditions description=Set to output debug logging for interaction conditions.
g_logLongInteractableRequestsPlayersOnly description=Long interactions are only reported if the interactor is local player on client or any player on non-client. Defaults to 1 (true)
g_logLongInteractableRequestsThreshold description=The amount of time (in seconds) that must pass before an interaction is considered to have run long. Defaults to 1.0
g_logPlanetTemperatureExtremes description=Sample and log the extreme temperatures for the closest planet to the player
g_logPlanetTemperatureExtremesSampleSpacing description=Spacing between sample locations on the planet. This will affect time to process the planet at lower values
g_logPlanetTemperatureExtremesSamplesPerFrame description=How many samples should be processed per frame. This will seriously affect framerate at higher values
g_logPrimaryRound description=Log various operations and calculations concerning the "primary" round and round changes. FOR DEBUGGING
g_logVehicleSpawning description=vehicle spawn logging
g_lootgen.archetypeCacheSize description=The number of archetypes that should be stored in the loot generation cache. If not specified in user cfg will be automatically derived from largest loot table
g_lootgen.enable description=Enable or disable loot generation
g_lootgen.enableLogging description=Enable or disable loot generation logging, and set the log verbosity.
0: off
1: basic logging
2: basic logging and analytics event logging

g_lootgen.specialEventDropRateOverride description=Override the special event drop rate, this applies to all special events (-1 disabled_
g_lootgen.specialEventMaxEntriesOverride description=Override the special event max entries, this applies to all special events (-1 disabled_
g_lootgen.specialEventMinEntriesOverride description=Override the special event min entries, this applies to all special events (-1 disabled_
g_magLaunch.activate description=Activate
g_magLaunch.debug description=If 1 display information about MagLaunch entities.
g_magLaunch.launch description=Launch
g_manualFrameStepFrequency description=manually step through frames with a fixed time step
g_masterModes.enableLightChange description=Ship lighting state will change with master modes.
g_masterModes.enableSwapDuringSpooling description=If enabled, swapping master modes is always possible.
g_masterModes.enableWeaponsSpoolingToQuantum description=Weapons, missiles, and countermeasures will be available while spooling from SCM to Quantum.
g_masterModes.enableWeaponsSpoolingToSCM description=Weapons, missiles, and countermeasures will be available while spooling from Quantum to SCM.
g_masterModes.useAlternativeRegenCurvesInNavMode description=If enabled the capacitor systems will use the NAV mode specific regen curve instead of the normal one.
g_maxNumberOfPlayers description=Total number of players allowed to join the server
g_microphoneVolumeVoIP description=Microphone Volume for VoIP.
g_minViewFOV description=Minimum fov allowed after all the FOV requesters have scaled down the value
g_missile.contactQueryRadiusRatio description=If the target moves this ratio of the search radius (in zone space), force update the possible missile targets
g_missile.contactQueryRate description=Sets how often the server updates the possible missile targets
g_missile.debug description=Enable missile debug (flags can be combined in any order):
0: None.
a: Persistent path.
b: States (launch state, flight phase, explosion safety).
c: Movement (velocity, fuel, lifetime, etc).
d: Payload (type, cluster loadout).
e: Emissions.
f: Update flags.
g: Target and signal (target name, lock ratio, signal and amplification, CM resilience).
1: All.

g_missile.debug_drawClientOnly description=Draw debug only for missiles that are either client controlled or client launched
g_missile.debug_drawLaunchedOnly description=Draw debug only for missiles that have been launched (or don't require a launcher)
g_missile.debug_drawLockedOnly description=Draw debug only for missiles that have a target
g_missile.debug_drawProximityBounds description=If g_spaceMine.debug=d is active (i.e. Payload), draw the radius that will trigger it to explode
g_missile.debug_drawSafetyBounds description=If g_missile.debug=b is active (i.e. States), draw the bounds and radius that the missile must leave before it will be able to collide or explode
g_missile.debug_drawTargetPath description=If g_missile.debug=a is active, draw the path that the target takes while the missile is tracking it. If > 1, draw distances between target and missile. If > 2, log and WATCH_VAR the distances. If > 3, do everything.
g_missile.debug_drawVisibleOnly description=Draw debug only for missiles that are in view
g_missile.debug_pathTimeout description=Time (s) to display the persistent paths for before timeout.
g_missile.enableFuel description=Enables / disables missiles consuming fuel.
g_missile.enableLockRanges description=Enables / disables missiles respecting lock ranges.
g_missile.enableMissileCameraShake description=Allows missile camera shake if set to 1.
g_missile.explodesInGreenZone description=If missiles (after being fired) should explode when in a green zone.
g_missile.onlyRetargetHostiles description=If true it will only re-target hostiles.
g_missile.overrideMaxTimesCanMiss description=Overwrites missile re-engage attempts (how many times the missile can miss the target before dumbifiring) if >= 0
g_missile.overrideSignalResilience description=Overwrites missile signal resilience (how much larger the new signal must be than current to switch targets) if >= 1.
g_missile.targetLaunchEntity description=If missile should fly towards the entity that launched it rather than whatever it is targeting.
g_missile_controller.bombs.debug_desired_impact_point description=Draw the position of the ghost point(s) and desired impact point, with a beam to designate gravity.
g_missile_controller.bombs.debug_path_live description=Draw predicted path of the bomb to its predicted impact point, with extra data.
1: Display path only.
2: Display with centre of pressure direction.
3: Display with deflection comparison direction.
4: Display with all.

g_missile_controller.bombs.debug_path_snapshot description=Draw the path that was predicted at launch to compare actual bomb path to.
g_missile_controller.bombs.debug_text description=Draw text relating to the predicted path of the bomb.
g_missile_controller.bombs.desired_impact_point_direction description=DIP direction uses 0 = look direction when in free look, else fixed aim direction, 1 = look direction always, 2 = fixed aim direction always.
g_missile_controller.bombs.desired_point_max_dist description=Maximum distance (m) for placing a desired impact point. Max 20,000m
g_missile_controller.bombs.desired_point_reset_dist description=Distance (m) from a desired impact point at which it resets (i.e. gets removed).
g_missile_controller.bombs.enabled_in_zero_g description=1 = bombs can be dropped when in zero gravity.
g_missile_controller.bombs.hud_default_range description=The alignment range in kilometers of the predicted impact point with the desired impact point.
g_missile_controller.bombs.hud_display_bomb_dot description=0 = Don't show the bomb dot; 1 = Show the bomb dot that represent the bomb's live position; 2 = Show the bomb dot that represents the bomb's predicted impact point.
g_missile_controller.bombs.hud_max_range description=The maximum alignment range in kilometers.
g_missile_controller.bombs.hud_min_range description=The minimum alignment range in kilometers.
g_missile_controller.bombs.hud_step description=The alignment range step increase/decrease in kilometers.
g_missile_controller.bombs.path_performance_max_deflection_dist description=Maximum distance (m) the path can deflect before starting a new raycast. Higher = collisions may be less accurate to the path, but less raycasts.
g_missile_controller.bombs.path_performance_max_ray_length description=Maximum distance (m) of any raycasts (will never be longer than this!). Max 20,000m
g_missile_controller.bombs.path_performance_max_total_length description=Maximum length (m) of the predicted path in total (along the curve)
g_missile_controller.bombs.path_performance_min_ray_length description=Minimum distance (m) of any raycasts (will never be shorter than this!)
g_missile_controller.bombs.path_uses_average_rack_pos description=Predicted bomb path starts from average rack position. If 0, uses the first rack position instead.
g_missile_controller.bombs.shaders_visible_in_third_person description=If bomb ping shaders are visible in third person
g_missile_controller.bombs.snapshot_timeout description=Time (s) to display predicted path snapshot for.
g_missile_controller.debug description=Draws Missile Controller related debug data to the screen.
Usage: g_missile_controller.debug 1 (shows everything)
Usage: g_missile_controller.debug abc... (flags can be combined in any order)
0: None.
1: Display all.
a: Display states and timers.
b: Display missile classes (racks and missiles).
c: Display dynamic launch zone.
d: Display locking process.
e: Display bombing debug.

g_missile_controller.debug_filter description=Entity name filter to show only certain entities. Set to 'self' to show client controlled entity only
g_missile_controller.missiles.enable_dynamic_launch_zone description=Enables dynamic launch zone for missiles.
g_missile_controller.missiles.enable_missile_distance_tracker description=Enables missiles to appear on the distance-to-target HUD widget to track them as they fly
g_missile_controller.missiles.ignore_lock_angle description=0 = lock process requires the target to be inside the cone, 1 = lock increases if target is in range
g_missile_controller.missiles.lock_angle_buffer description=Angle (degrees) of buffer ether side of the lock cone where the lock ratio will not change. Helps prevent jitter.
g_missile_controller.missiles.lock_angle_follows_IM description=1 = lock cone follows look direction even in interaction mode, 0 = lock cone gets cached at last non-IM direction
g_missile_controller.missiles.max_armed_override description=If > 0, max amount of armed missiles at once, otherwise uses DataCore param (does not live update)
g_missile_controller.missiles.max_lock_angle_override description=If >= 0, the angle of the lock cone (degrees) when at full lock. Otherwise uses DataCore param.
g_missile_controller.missiles.min_lock_angle_override description=If >= 0, the angle of the lock cone (degrees) when at zero lock. Otherwise uses DataCore param.
g_missile_controller.missiles.segments_gyro_degrees_per_second description=Gyro rotation degrees per second
g_missile_controller.missiles.segments_gyro_rotation_speed_mult_x description=Speed multiplier on the x axis for the reticle gyro spin
g_missile_controller.missiles.segments_gyro_rotation_speed_mult_y description=Speed multiplier on the y axis for the reticle gyro spin
g_missile_controller.missiles.segments_intro_gyro_resolve_lock_rotations description=Number of rotations on the reticle when a resolved lock is achieved or lost
g_missile_controller.missiles.segments_intro_lerp_time description=Segments intro lerp time
g_missile_controller.missiles.segments_intro_tumble_rotations description=Number of tumble rotations of the segments upon intro
g_missile_controller.missiles.segments_inward_rotation_deg description=Inward rotation of segments at their final position (to prevent aliasing on edges of geo)
g_missile_controller.missiles.segments_origin_radius description=Origin radius of segment fly-in animation
g_missile_controller.missiles.segments_outro_dist_mult description=Distance multiplier of each segment in their outro anim
g_missile_controller.missiles.segments_outro_finish_frust_ratio description=Frustum ratio of the max radius of the segment outro animation
g_missile_controller.missiles.segments_outro_lerp_time description=Segments outro lerp time
g_missile_controller.missiles.segments_outro_staggered_delay_ratio description=Segment delay of the start of the outro animation
g_missile_controller.missiles.segments_postresolve_frust_ratio description=Frustum ratio of missile lock reticle in post-resolve state
g_missile_controller.missiles.segments_preresolve_frust_ratio description=Frustum ratio of missile lock reticle in pre-resolve state
g_missile_controller.missiles.segments_resolve_time description=Segments resolve time
g_missile_controller.missiles.segments_stagger_time description=Segments stagger time
g_missile_controller.numArmable_inits_at_max description=1 = initialize armable ordnance to maximum, 0 = initialize armable ordnance to 1.
g_missile_controller.override_arming_time description=If > 0, override all missile controller arming times with this value (likely requires respawning the ship to take effect)
g_missile_controller.override_cooldown_time description=If > 0, override all missile controller cooldown times with this value
g_missionEntity_stream_radius description=The stream radius of spawned mission entities
g_missionsWaitForSpawn description=If set, spawning manager waits for mission-related spawns to complete before notifying requesting code
g_molehill.debugInfo description=> 0, Display floating debug text for Underground Creature Molehill entities, =2 for zoneInfo
g_molehill.log description=Enable/Disable Underground Creature Molehill logging
g_moveDetachedCamera description=Move detached camera
g_muteAudioVoIP description=Mute Audio for VoIP.
g_muteMicrophoneVoIP description=Mute/Unmute VoIP microphone
g_navpointHierarchy.enableMetadataExport description=Enable exporting navpoint metadata to the universe hierarchy
g_no_breaking_by_objects description=Prevents procedural breaking caused by rigid bodies
g_no_secondary_breaking description=Prevents secondary procedural breaks (to keep down memory usage)
g_notifications.friendRequestsNotifications description=Toggle friend requests on or off
g_notifications.restrictCommsCallsNotifications description=Comms Calls notification mode(0 = enabled 1 = friends only)
g_notifications.restrictCurrencyTransferNotifications description=Currency transfer notification mode (0 = enabled 1 = friends only)
g_notifications.restrictPartyInvitesNotifications description=Party/Group invites notification mode (0 = enabled 1 = friends only)
g_patrolGraph.debug_point_radius description=Radius of debug spheres representing patrol graph points
g_patrolGraph.show_helpers description=Draw helpers when not editing
g_pauseAndFlyMode description=Pauses the game and lets you fly around and look at things
g_planetAltitudeThreshold description=Procedurally spawned entities are not considered when checking the spaceship altitude from above that level
g_planetCameraDistanceUpdateThreshold description=Distance the camera has to move to rebuild terrain tree
g_planetClimateDebug description=Show some debug data concerning the climate on planets.
g_planetToggleWeatherDebug description=Toggle the debug window for weather
g_planetWindDebug description=1 = Show some debug data concerning the wind on planets. 2 = Include an arrow in front of the camera, showing the direction of the wind (if any)
g_planetWindDisableAltitude description=Height above terrain threshold to disable wind.
g_planetWindDropOffHeight description=Height above the terrain below which a drop-off will happen in wind speed, from maximum wind speed. [in meters]
(works in combination with g_planetWindMaximumWindSpeedAltitude)
g_planetWindEnable description=Enable wind on planets, turning it off will disable it completely
g_planetWindEnableGusts description=Enable wind gusts on planetary wind calculations
g_planetWindEnableRotation description=Enable the rotation of the wind map on planets when setup
g_planetWindLimit description=The limit at which wind is considered extreme. Triggers an fatal error if the wind speed goes over this limit. [in m/s]
g_planetWindMaximumSpeed description=Override of the maximum wind speed, will keep the speed variation over altitude, object density, peak/valleys.
g_planetWindMaximumWindSpeedAltitude description=Altitude from sea level below which the maximum wind speed will be applied. [in meters]
(works in combination with g_planetWindDropOffHeight)
g_planetWindOffsetOverride description=Override the initial offset of the wind map. (Range [0.0; 360.0]. -1.0 to disable)
g_planetWindSpeed description=Blunt override of the wind speed at any position on a planet.
g_planetWindTerrainBuffer description=Change the height from the terrain below which the wind will not change. [in meters]
g_playerGroupManager.bypassService description=Bypass the PGM service and make everyone on the server in a group
g_playerGroupManager.debug_party_member_management description=Set 1 to enable various Party Member events, such as Add/Remove.
g_playerGroupManager.enableFatalError description=Set 1 to enable fatal error on PlayerGroupManager
g_playerGroupManager.enable_logging description=Enables logging on player group manager.
g_playerGroupManager.enable_marker_distance_culling description=Cull party marker using distance set by CVar on_foot_partymarker_cull_distance, on_vehicle_partymarker_cull_distance.
g_playerGroupManager.on_foot_partymarker_cull_distance description=Max display distance for party marker when on foot.
g_playerGroupManager.on_vehicle_partymarker_cull_distance description=Max display distance for party marker when piloting a vehicle.
g_playerGroupManager.use_experimental_standalone_version description=If set to 1	it will create a standalone version of the PlayerGroupManager. Use only if you're planning to test QT linking in single player or in the editor.
g_playerInteractorRadius description=Maximum radius at which player can interact with other entities
g_playerLodRatio description=Sets the lod ratio for players.

g_playerLowHealthThreshold description=The player health threshold when the low health effect kicks in.
g_playerMidHealthThreshold description=The player health threshold when the mid health feedback kicks in.
g_postEffect.ColorGrading_Brightness description=Global brightness
g_postEffect.ColorGrading_Contrast description=Global contrast
g_postEffect.ColorGrading_Saturation description=Global saturation
g_postEffect.FilterGrain_Amount description=Filter grain amount
g_postEffect.FilterRadialBlurring_Amount description=Radial blurring amount
g_postEffect.FilterRadialBlurring_Radius description=Radial blurring radius
g_postEffect.FilterRadialBlurring_ScreenPosX description=Radial blurring screen position X
g_postEffect.FilterRadialBlurring_ScreenPosY description=Radial blurring screen position Y
g_postEffect.HUD3D_FOV description=3D HUD field of view
g_postEffect.HUD3D_Interference description=3D HUD interference
g_procedural_breaking description=Toggles procedural mesh breaking (except explosion-breaking)
g_procedural_planet_rotation_fixed description=Fixed planet z-rotation in degrees
g_procedural_planet_rotation_scale description=Scale applied to all planets rotation. Can be set to 0 to stop all rotations
g_procedural_planet_rotation_speed description=Speed of rotation for planets (days needed per full rotation). Only used if not 0
g_proximityModifier.debug description=If 1 display information about ProximityAssistModifier entities.
g_pu_timeToGetOutOfBed description=Estimate time to wait for player to re-spawn & get out of EZHAB bed in PU (seconds)
g_radarUserSettings.lockVehiclePingToScanMode description=Lock Ping Controls to Scanning Mode
g_radarUserSettings.showScanWaveHighlightsFPS description=Lock Ping Controls to Scanning Mode
g_radarUserSettings.showScanWaveHighlightsVehicle description=Lock Ping Controls to Scanning Mode
g_radialBlur description=Radial blur on explosions. Default = 1, 0 to disable
g_randomSpawnPointCacheTime description=Time to cache a spawn point for when picking random spawns, if you are the only one in the level.
g_readyForceTime description=Time before the game starts when the minimum number of players have joined
g_refineryCVars.JobSpeed description=Determine the speed of refinery job. 0 - Default speed. 1 - Force normal speed. 2 - Force slow speed. 3 - Force fast speed. 4 - 100x faster the normal speed. 5 - Instant.
g_reloadGameFx description=Reload all game fx
g_removeIncapacitatedPlayerSessionDelay description=Number of seconds from disconnection after which an incapacitated player recovery data is removed from server.
g_removePlayerOnDisconnect description=If disabled player entities will not be removed on the server when their client has disconnected.
g_removePlayerOnQuit description=Changes Alt+F4 and Quit Game to leave the player on the server similar to an ungraceful diconnect - set to 0 to enable combat logging
g_removePlayerSessionDelay description=Number of seconds from disconnection after which player recovery data is removed from server.
g_reputation.cacheUpdateInterval description=Default cache update timeout
g_reputation.debugLevel description=Enables logging for reputation in PU, higher values for more verbosity.
g_reputation.featureLevel description=Enables features for reputation in PU,
g_reputationDebugLevel description=Enables logging for reputation in PU, higher values for more verbosity
g_resourceContainerDebug.bypassLocks description=Disregard the result of lock services in order to continue logic.
g_resourceContainerDebug.verbosity description=Set debug verbosity level.
g_restrictedArea.debug description=If 1 display information about the close by restricted areas.
g_restrictedArea.debug_atc_name_filter description=Filter for only debug displaying ATCs linked to Restricted Areas with this string in their name
g_restrictedArea.debug_kill_locations description=Debug draw entities due to be killed, instead of killing them. Needs g_restrictedArea.debug set.
g_restrictedArea.debug_name_filter description=Filter for only debug displaying Restricted Areas with this string in their name
g_restrictedArea.debug_patch_col_width description=The number of pixels to move debug printing to the right by when moving to a new column.
g_restrictedArea.debug_patch_rows description=The number of rows of Restricted Area patches to print before moving to new column.
g_restrictedArea.debug_spline_draw_detail description=Detail level at which to draw a restricted area spline. 0 = do not draw. 1 = rings only, 2 = rings and lines, 3 = rings, lines and diagonals.
g_restrictedArea.debug_spline_ring_density description=The number of debug spline rings between nodes on a restricted area spline.
g_restrictedArea.debug_spline_ring_vertices description=The number of vertices a restricted area spline ring ought to have.
g_restrictedArea.enabled description=If 0 disable all restricted area functionality and hide all restricted areas. Must be set on client and server. If at 2 it enables the new Restricted Areas rework.
g_restrictedArea.handler_arrow_angle_limit description=The smallest angle the RA arrow can point towards the player
g_restrictedArea.handler_debug description=Debug the restricted area handler component
g_restrictedArea.handler_debug_arrow description=If 1, shows a DebugGUI arrow in front of a vehicle
g_restrictedArea.handler_debug_filter description=Filter for debug displaying Restricted Area handlers with this string in their name
g_restrictedArea.handler_teleport_bubble_prep_time description=
g_restrictedArea.handler_teleport_bubble_radius description=
g_restrictedArea.log_info description=Display non-warning information logs on the restricted area.
g_restrictedArea.no_despawn description=If enabled, restricted area will despawn objects which are not actors or vehicles. Otherwise, only actors and vehicles are affected.
g_restrictedArea.only_despawn description=If 1, prevents disallow areas from affecting ships. Only despawn areas will impound the ship. Useful for debugging.
g_restrictedArea.patch_cache_cleanup_enabled description=Perform cleanup of the patch cache, to account for entities removed outside of sight of the system.
g_restrictedArea.prevent_legal_rules description=If 1, prevents teleporting and impounding to be applied to entities in Restricted Areas
g_restrictedArea.seconds_between_teleport_and_despawn description=When impounding a ship, amount seconds to wait after crew teleport to despawned the ship.
g_restrictedArea.seconds_between_teleport_and_prepship description=When impounding a ship, amount seconds to wait after crew teleport to start closing spindles.
g_roundlimit description=Maximum numbers of rounds to be played. Default is -1 (no override), 0 means no limit.
g_runtimeGridTypeFixup description=If enabled, grid type of interior grid will be based on AABB of the grid host.
g_salvage_controller.addCargo description=Add some cargo to the salvage controller the player is controlling, or the nearest salvage controller if the player isn't controlling any. 
Usage: g_salvage_controller.addCargo [string: resourceName] [int: cargoMicroSCU]
g_salvage_controller.aimNudgeSensitivity description=Aim nudge sensitivity for salvage heads, must be >= 0.
g_salvage_controller.beamSpacingIncrement description=The increment in meters by which beam spacing increases or decreases when scrolling the mousewheel.
g_salvage_controller.beamSpacingMax description=Maximum beam spacing in meters.
g_salvage_controller.debug description=Shows salvage controller debug data.
g_salvage_controller.debugAiming description=Shows debug visualization for salvage weapon aiming.
g_salvage_controller.debugDrawRange description=Range in which to draw debug info for salvage controllers.
g_salvage_controller.debugFieldAlignmentNumSamplePoints description=Number of sample points to sample for debugging structural field alignment, note that only non-zero points will be drawn so the total number of drawn points will generally be less than this.
g_salvage_controller.debugFillerStation description=Shows debug visualization for salvage filler stations.
g_salvage_controller.debugFractureSkipPowerChecks description=If > 0 allows fracturing ships that are not powered off.
g_salvage_controller.debugHeads description=Shows debug visualization for salvage heads and modifiers.
g_salvage_controller.debugLineScale description=Multiplier for salvage debug line width, default 1.0.
g_salvage_controller.debugOverrideDisintegrationSCUPerCubicMetre description=If > 0 overrides the disintegration material gain to this value in SCU per cubic metre.
g_salvage_controller.debugOverrideDisintegrationTime description=If > 0 overrides the disintegration time for all disintegration targets to this value.
g_salvage_controller.debugOverrideFieldAlignmentBaselineFactor description=If > 0 overrides the baseline alignment factor used to show yield estimates for the UI.
g_salvage_controller.debugOverrideFieldAlignmentFalloffDistanceForward description=If > 0 overrides the field alignment falloff forward distance to this value in metres.
g_salvage_controller.debugOverrideFieldAlignmentFalloffDistanceRadial description=If > 0 overrides the field alignment falloff radial distance to this value in metres.
g_salvage_controller.debugOverrideFieldAlignmentMaxSpeedMultiplier description=If > 0 overrides the maximum speed multiplier a taret will have its operation time divided by if it's perfectly in the sweet spot.
g_salvage_controller.debugOverrideFieldAlignmentMaxYieldMultiplier description=If > 0 overrides the maximum yield multiplier a taret will have its disintegration value multiplied by if it's perfectly in the sweet spot.
g_salvage_controller.debugOverrideFieldAlignmentSweetSpotForwardFactor description=If > 0 overrides the 'sweet spot' forward position to this value as a fraction of the field length, e.g 0.5 for having the sweet spot in the middle of the field.
g_salvage_controller.debugOverrideFractureTime description=If > 0 overrides the fracture time for all fracture targets to this value in seconds.
g_salvage_controller.debugOverrideMaxDisintegratableRadius description=If > 0 overrides the maximum disintegratable radius to this value in metres.
g_salvage_controller.debugOverrideMaxFracturableRadius description=If > 0 overrides the maximum fracturable radius to this value in metres.
g_salvage_controller.debugOverrideMinDisintegratableRadius description=If > 0 overrides the minimum disintegratable radius to this value in metres.
g_salvage_controller.debugOverrideMinFracturableRadius description=If > 0 overrides the minimum fracturable radius to this value in metres.
g_salvage_controller.debugOverrideStructuralVFXStrength description=If > 0 sets the VFX strength for structural salvage effects to this value (expects float 0-1).
g_salvage_controller.debugRaycast description=Shows debug visualization for salvage controller raycast.
g_salvage_controller.debugStructural description=Shows debug visualization for structural salvage.
g_salvage_controller.debugStructuralFieldAlignment description=If > 0 shows debug info for the field alignment bonus. 0 = off, 1 = show visualization. Note that this requires debugStructural to also be on.
g_salvage_controller.debugStructuralVFX description=If > 0 draws debug info for structural VFX.
g_salvage_controller.debugTextScale description=Multiplier for salvage debug text size, default 1.0.
g_salvage_controller.freeGimbalModeLocksRotation description=0: free gimbal mode does not lock ship rotation.
1 (default): free gimbal mode locks ship rotation.
g_salvage_controller.freeGimbalModeStraightensArms description=0: free gimbal mode does not straighten vulture arms.
1 (default): free gimbal mode straightens vulture arms.
g_salvage_controller.friendlyFireMessageCooldownScaleOverride description=If greater than 0, scales how long the cooldown between Friendly Fire messages is when in salvage mode. Otherwise the value set in the salvage global params is used.
g_salvage_controller.modifierSwitchTime description=Time it takes to switch between modifiers, in seconds.
g_salvage_controller.modifierSwitchUserInputCooldownTime description=Time after switching a modifier due to user input before another input to switch modifier for that salvage head will be accepted, in seconds.
g_salvage_controller.removeCargo description=Remove some cargo from the salvage controller the player is controlling, or the nearest salvage controller if the player isn't controlling any. 
Usage: g_salvage_controller.removeCargo [string: resourceName] [int: cargoMicroSCU]
g_salvage_controller.sensorRaycastDistanceMax description=Maximum sensor raycast distance in meters.
g_saveLoadBasicEntityOptimization description=Switch basic entity data optimization
g_saveLoadExtendedLog description=Enables the generation of detailed log information regarding saveloads
g_saveLoadUseExportedEntityList description=Only save entities in the editor-generated save list (if available). 0 is the previous behavior
g_scoreLimitOverride description=Max number of points need to win in a team game. 0 means no score limit.
g_screenShakeArea.debugArea description=1. Display only the areas (no text info)
g_screenShakeArea.enabled description=A value of 1 will disable screen shake areas.
g_screenShakeArea.log description=Enable/Disable ShakeArea logging
g_shakeSuppressionOnCursorInteraction description=0.0 for full suppresion of the cam shake during mouse cursor interactions.
g_shield.allowedAllocationTick description=Allowed shield allocation change per input
g_shield.debug description=Draw debug info for shields
g_shield.debug_filter description=Filter shields debug by entity name
g_shield.debug_hits description=Log debug info for when shields have been hit
g_shield.debug_player_only description=Shows data only from the shield emitter under the player's control.
g_shield.disable description=Disable shields (target health becomes 0)
g_shield.empty_reserve_pool_on_system_off description=Reserve pool will be emptied when the vehicle is turned off. Requires g_shield.use_reserve_pool=1
g_shield.enable_allocation description=Enable shield health distribution across faces
g_shield.enable_damage_delay_on_exhausted_shield_face description=Sets down regen delay on faces even when they are not active.
g_shield.enable_damage_delay_on_shield_generator_changes description=Triggers another down delay when the powered state of shield generators change.
g_shield.enable_damage_delay_on_system_on description=Damage/stun delay will be applied when the vehicle is turned on.
g_shield.params_combination_delay_is_additive description=When 1 damage and down delays are additive instead of averaged.
g_shield.params_combination_resistance_type description=0: additive, 1: additive with HP ratio, 2: multiplicatively stacked.
g_shield.ui_legacy_mfd_swap_recharge_and_delay description=Uses the recharge bindings for delay times
g_shield.use_master_mode_spool_decay description=1 = shields disabled by master mode will decay at the same rate the master mode spools up. 0 = will decay as normal
g_shield.use_reserve_pool description=In QTM master mode, shields will regen into a reserve pool up to a % cap, instead of into the faces. Requires g_useMasterModes=1
g_shield.use_shield_stun_params description=If enabled the stun time will be used over the regen delay times.
g_shipSelector_debugProvider description=Enable debug text for the provider state
g_shop_serviceResponseValueOveride description=If not 0, the transaction result value will be overrided for the specified value.
g_shop_updateOfflineInventoryJSON description=If 1, All shops that receive inventory subsumption data will overwrite their offlineIntentory JSON files with the up to date JSON
g_shops.clear_shop_racks description=Requests destroying all physically spawned entities on a shop racks (but will not wipe inventory data). Note: A service update will eventually repopulate them.
g_shops.get_shop_license_count description=prints current shop license count
g_shops.list_shops description=prints out a summary of all currently streamed in shops
g_shops.populate_empty_shop_racks description=Requests populating any empty shop racks with physically spawned entities using existing inventory data.
g_shops.print_inventory description=prints all active shop Inventory to log on both server and client
g_shops.reload_inventory description=Requests a reload for all active Shop Inventory
g_shops.repopulate_shop_racks description=clears all shop racks, then populates them again with new entities.
g_shops.unload_inventory description=Requests unloading inventory for all currently active Shops. Note: A service update will eventually repopulate them.
g_shops.update_shop_license_count description=adds to current shop license count
g_shopsDebug.enable_offline_inventory_load description=Enable loading the offline inventory. Only used while working in the editor.
g_shopsDebug.enable_offline_sell_data description=Enable loading the offline selling data. Only for development
g_showHints description=Show in-game hints
g_showLocationManagerSpawnLogging description=Enables logs that records when the component first calls PostInitialize
g_showTestBuildDisclaimer description=Display a disclaimer for non-Live public builds to permanently show users they are on an opt-in testing purpose build. 
Default is 1 and combined with the EnvTags, it will only show if the later are PTU or ePTU.Usage: 
 0: off
 1: on 2: force (will not use the EnvTag PTU & ePTU to know if it has to be shown)
g_skipSpawnUsables description=If enabled, the player will respawn outside of usables
g_spaceMine.debug description=Enable space mine debug (flags can be combined in any order):
0: None.
a: Persistent path.
b: States (launch state, flight phase, explosion safety).
c: -- unused --
d: Payload (type, cluster loadout).
e: Emissions.
f: Update flags.
1: All.

g_spaceMine.debug_drawClientOnly description=Draw debug only for space mines that are either client controlled or client launched
g_spaceMine.debug_drawLaunchedOnly description=Draw debug only for space mines that have been launched (or don't require a launcher)
g_spaceMine.debug_drawProximityBounds description=If g_spaceMine.debug=d is active (i.e. Payload), draw the radius that will trigger it to explode
g_spaceMine.debug_drawSafetyBounds description=If g_spaceMine.debug=b is active (i.e. States), draw the bounds and radius that the mine must leave before it will be able to collide or explode
g_spaceMine.debug_drawVisibleOnly description=Draw debug only for space mines that are in view
g_spaceMine.debug_pathTimeout description=Time (s) to display the persistent paths for before timeout.
g_spawnClosetNPC_debugDraw description=Enable/disable SpawnClosetNPC debug draw
g_spawnClosetNPC_fixBadSpawns description=If enabled, will detect and attempt to fix bad NPC spawns where their spawn closet is streamed out when an NPC first spawns in
g_spawnCloset_batchSizeDeviation description=Change SpawnCloset batch size deviation
g_spawnCloset_batchSizeMeanRatio description=Change SpawnCloset mean batch size (proportion of capacity)
g_spawnCloset_cache_classID_results description=Cache classID + filtering results
g_spawnCloset_cleanupCount description=Limit of dead, non mission linked NPCs to start SpawnClosetLifetimeAuthorizer cleanup (per SpawnClosetManager)
g_spawnCloset_cleanupTime description=Time (s) before dead, non mission linked NPCs can be picked up by SpawnClosetLifetimeAuthorizer cleanup (per SpawnClosetManager)
g_spawnCloset_debugDraw description=Enable/disable SpawnClosetArea debug draw
g_spawnCloset_debugDrawLinks description=Enable/disable SpawnClosetArea links debug draw
g_spawnCloset_debugDraw_distance description=SpawnClosetArea debug draw maximum draw distance
g_spawnCloset_debugDraw_filled description=SpawnClosetArea debug draw. 0=wireframe, 1=filled
g_spawnCloset_doorDelayTime description=Change SpawnCloset door opening delay after spawn [s]
g_spawnCloset_maxRequestsPerUpdate description=How Many Spanw Requests will the manager process each frame
g_spawnCloset_tracking description=Enable/disable SpawnClosetNPC tracking for debugGUI
g_spawnCloset_updateTime description=Change SpawnClosetRequestManager update speed [s]
g_spawn_recentSpawnTimer description=How recently a spawn has to have occurred for it to be considered 'recent' and result in a subsequent spawn being denied.
g_spawnbarrier.enabled description=Enable/Disable spawn barriers (both physics and kill)
g_spawnbarrier.killEnabled description=Enable/Disable killing actors violating the protected area
g_spawnbarrier.log description=Enable/Disable logging for spawn barriers
g_spawningPUDebugLevel description=Enables logging for spawning in PU, higher values for more verbosity
g_spawningPUPrecacheSpawnLocations description=Precache PU landing zone spawn locations to avoid excessive streaming in/out of entities. 1=major landing zones, 2=all locations with spawnpoints, 3=spawn locations on spawn
g_spectate_TeamOnly description=If true, you can only spectate players on your team
g_spectate_skipInvalidTargetAfterTime description=Time after which a new valid target is selected
g_spectatorCollisions description=Collide against the geometry in spectator mode
g_squadron_frontend description=Enable Squadron 42 Frontend with any value above 0
g_statisticsMode description=Statistics mode
 0 - disabled
 1 - enabled crysis mode
 2 - enabled K01 mode

g_stereoFrameworkEnable description=Enables the processing of the game stereo framework. (2=extra debug output)
g_svNoOpponentsCheckMinTimeRequired description=Min time (seconds) you need to have remaining in game if you are to trigger the wait for new players
g_svNoOpponentsEndGameTime description=Time (seconds) you keep a MP game active for when the number of players drops to 1
g_temperature.coolingEqualizationMultiplier description=Affects how quickly items will cool down based on the environment temperature
g_temperature.damageExponent description=Controls the exponential curve of the damage from temperature
g_temperature.damageMultiplier description=How much damage to apply when at combustion temperature [in damage/s]
g_temperature.damageTickDuration description=Applies temperature based damage every X seconds [in seconds]
g_temperature.enable description=Enable/Disable entity temperature
g_temperature.heatingEqualizationMultiplier description=Affects how quickly items will heat up based on the environment temperature
g_terrainCollision description=Temporary cvar for turning off terrain collision in a config file. Removing this once we implement logic to turn terrain collision on/off based dynamically
g_terraintrashcleanup.debug description=Display on-screen debug text and other draws
g_terraintrashcleanup.log description=Enable/Disable TerrainTrashCleanup logging
g_terraintrashcleanup.start description=Triggers the trash cleanup, if it has not already begun. Args: Target Entity, Lifetime, DecayDuration, AutoDestroy. Provide -1 to use what is set on entity (excluding auto-destroy). Not providing Args will use entity params.
g_threadCollisionProcessing description=Process collision events over multiple cores
g_timeLimitOverride description=Override the duration of a time-limited game (in minutes). 0 means no time-limit.
g_toggleLoadingScreen description=Force toggle open/close the loadscreen. If opening pass 1=Frontend, 2=Hangar, 3=Universe, 4=ElectronicAccess, else will default to Universe
g_transit.dumpCarriageState description=Dump carriage state for all transit managers for debugging
g_transitSystem.carriageAnims description=Debug carriage animation states
g_transitSystem.carriageAnimsLogging description=Log carriage animation states
g_transitSystem.carriageDoors description=Debug carriage door state
g_transitSystem.carriageDoorsLogging description=Log carriage door state
g_transitSystem.carriageGeneral description=Debug carriage general information
g_transitSystem.carriageGeneralLogging description=Log carriage general information
g_transitSystem.carriageIndexFilter description=Assign a filter based on carriage index
g_transitSystem.carriageIndexFilterLogging description=Assign a filter for logging based on carriage index
g_transitSystem.carriagePath description=Debug carriage path
g_transitSystem.carriagePathLogging description=Log carriage path
g_transitSystem.carriagePathPoints description=Debug carriage path points (Server only)
g_transitSystem.carriagePathPointsLogging description=Log carriage path points (Server only)
g_transitSystem.carriagePause description=Debug carriage pausing state (Additional information on server)
g_transitSystem.carriagePauseLogging description=Log carriage pausing state (Additional information on server)
g_transitSystem.carriagePhys description=Debug carriage physics state
g_transitSystem.carriagePhysLogging description=Log carriage physics state
g_transitSystem.carriageResetDistance description=Distance to use when checking for a stuck carriage
g_transitSystem.carriageResetTimeout description=Timeout to use when checking for a stuck carriage
g_transitSystem.carriageResetTimeout_Authority description=Timeout to use when checking for a carriage that has lost authority.
g_transitSystem.carriageSpeed description=Debug carriage speeds
g_transitSystem.carriageSpeedLogging description=Log carriage speeds
g_transitSystem.carriageStreaming description=Assign a filter for allowing carriage streaming debug info
g_transitSystem.carriageStreamingLogging description=Log carriage streaming debug info
g_transitSystem.debug description=Enable debug of transit system
g_transitSystem.defaultForceAllStreamble description=all transit managers will use streamable transit when they stream in/are created, if transit managers already exist, please use the g_transitSystem.forceAllStreamble command
g_transitSystem.defendBadGatewayIndexes description=Enable defensive handling of bad gateway indexes. 0 - Disabled, 1 - Early Out defense (Default)
g_transitSystem.destinations description=Debug transit destinations (Server only)
g_transitSystem.destinationsLogging description=Log transit destinations (Server only)
g_transitSystem.displayInteractionPanelDebug description=Draw transit interaction panel debug
g_transitSystem.distanceFilter description=Assign a filter based on distance
g_transitSystem.dynamicdestinations description=Debug transit dynamic destinations (Editor/Server only)
g_transitSystem.dynamicdestinationsLogging description=Log transit dynamic destinations (Server only)
g_transitSystem.enableAutomaticPeripheralRelink description=Enable automatic detection and resolution of failed peripheral links.
g_transitSystem.enableCarriageReset description=Enable resetting stuck carriages in the transit system
g_transitSystem.enableCarriageReset_Authority description=Enable additional reset behavior for carriages that have lost authority. Requires enableCarriageReset to be on as well.
g_transitSystem.entityOrManagerDebug description=Assign a filter for either entity (2) or manager (1) debug (3 shows both)
g_transitSystem.fatalIfWrongPosition description=If a carriage's real position doesn't match its expected position when trying to open the doors, then fatal
g_transitSystem.gateways description=Debug transit gateways (Server only)
g_transitSystem.gatewaysLogging description=Log transit gateways (Server only)
g_transitSystem.linkingLogging description=Log transit linking debug info
g_transitSystem.logging description=Enable logging of transit system
g_transitSystem.manager description=Debug transit managers and manager names
g_transitSystem.managerLogging description=Log transit managers and manager names
g_transitSystem.managerNameFilter description=Assign a filter based on manager name
g_transitSystem.managerNameFilterLogging description=Assign a filter for logging based on manager name
g_transitSystem.maxDynamicCarriages description=Globally set the maximum number of carriages for dynamic destination servicing
g_transitSystem.netUpdate description=Debug carriage network state (Server only)
g_transitSystem.netUpdateLogging description=Log carriage network state (Server only)
g_transitSystem.overrideDoorTime description=Overrides the amount of time the doors will wait before closing at a stop. -1 (Use the defined data value) != -1 (Use the CVar value)
g_transitSystem.overrideStopWaitTime description=Overrides the amount of time a carriage will wait at each stop. -1 (Use the defined data value) != -1 (Use the CVar value)
g_transitSystem.peripherals description=Debug carriage/transit peripherals
g_transitSystem.peripheralsLogging description=Log carriage/transit peripherals
g_transitSystem.recoverFromCarriagesStopped description=Allow transit managers to detect when all carriages are stopped and reset themselves
g_transitSystem.schedules description=Debug transit schedules
g_transitSystem.schedulesLogging description=Log transit schedules
g_transitSystem.speedScale description=Change the speed scale of the transit system (for debug purposes)
g_transitSystem.splines description=Debug transit splines/data splines
g_transitSystem.splinesLogging description=Log transit splines/data splines
g_transitSystem.streamingScaler description=Globally scale the transit system's carriage radius it uses to calculate when we should stream them in
g_transitSystem.teleportLogging description=Log transit teleport flow
g_transitSystem.teleportPlayersFailureRetryDelay description=Time (in milliseconds) to wait after failing to teleport players out before trying again. 0 to disable the delay feature.
g_transitSystem.transitTypeFilter description=Assign a filter based on transit type, automated = BIT(1), non-automated = BIT(2), path-following = BIT(3), non-path-following = BIT(4)
g_transitSystem.transitTypeFilterLogging description=Assign a filter for logging based on transit type, automated = BIT(1), non-automated = BIT(2), path-following = BIT(3), non-path-following = BIT(4)
g_transitSystem.ugfCarriagesAttachToParent description=Debug carriage general information
g_transportSystem.distanceFilter description=Filter the transport entities that will display debug info by their distance from the player
g_transportSystem.logging description=Enable or disable logging functionality for all transport entities on this node (dgs/client)
g_transportSystem.managerNameFilter description=Filter the transport entities that will display debug info by the name of the manager of their system
g_transportSystem.managerNameFilterLogging description=Filter the transport entities that will log by the name of the manager of their system
g_tree_cut_reuse_dist description=Maximum distance from a previously made cut that allows reusing
g_turret.centeringCorrectionCoefficient description=Whilst centering the turret with acceleration movement it controls how strongly we increase our velocity towards the target.
g_turret.hud_angleMap_borderAngleWarning description=Sets the angle when the UI warnings appear.
g_turret.hud_angleMap_forceRedo description=Set to 1 if you want to force redoing the angle map.
g_turret.hud_angleMap_mode description=0: off, 1: 2D Angle map, 2: visor angle map, 3: show both.
g_turret.hud_enable_projected description=0: Pitch ladder off, 1: Pitch ladder on.
g_turret.jerk_only_correct description=If set to 1, we only correct with jerk but do not fully calculate it.
g_turret.pointer_mode_show_debug_circle description=If set to 1 show the pointer debug circle
g_turret.remoteClientMovementSpeed description=Static speed modifier for remote turrets to account for lag.
g_turret.remote_turret_FOV_smooth_value description=Sets the SmoothCD value to FOV changes in the remote turret.
g_turret.remote_turret_camera_rotation_lerp_time description=The amount of time it takes for the remote turret camera to reach its position when ADS and non-ADS is swapped.
g_turret.smoothCD_goalTime_default description=The amount of smoothing when smooth CD is used for movement.
g_turret.usedMovementForSpeedPlayer description=Selected movement algorithm for player controlled turrets when they are manually controlled:
0: Linear
1: Acceleration
2: SmoothCD
3: Jerk

g_turret.usedMovementForTargetDefault description=Selected movement algorithm for non-player controlled turrets when they track to an angle: 
0: Linear
1: Acceleration
2: SmoothCD
3: Jerk

g_turret.usedMovementForTargetPlayerDefault description=Selected movement algorithm for player controlled turrets when they track to an angle:
0: Linear
1: Acceleration
2: SmoothCD
3: Jerk

g_turret.usedMovementForTargetPlayerPointer description=Selected movement algorithm for player controlled turrets when they track to an angle but in pointer mode:
0: Linear
1: Acceleration
2: SmoothCD
3: Jerk

g_turret_allow_third_person_camera_slaving description=Allows slewing of turrets in third person cameras.
g_turret_input.debug_input description=Shows the exact numbers that turret input uses.
g_turret_input.default_mouse_mode description=Set via options, preferred mouse move mode. 0: VJoy, 1: Relative One To One, 2: Relative Pointer.
g_turret_input.enable_deflection_time description=Enables the movement simulation based on armor and other penalties.
g_turret_input.esp_allow_in_auto_gimbal description=If set to 1, ESP is allowed during auto gimbal mode.
g_turret_input.esp_allow_in_manual description=If set to 1, ESP is allowed during manual gimbal mode.
g_turret_input.esp_dampening description=ESP settings: Modifier for the ESP dampening set in the data.
g_turret_input.esp_debug description=Draws ESP information
g_turret_input.esp_default_on description=If set to 1, turret ESP will be on by default.
g_turret_input.esp_overwrite_dampeningCurvature description=Only active above 1. Overwrites the used damping locally.
g_turret_input.esp_overwrite_innerZoneRatio description=Only active above 0. Overwrites the used inner zone ratio.
g_turret_input.esp_overwrite_outerZoneSize description=Only active above 0. Overwrites the outer zone size.
g_turret_input.esp_overwrite_pulling description=Overwrites whether pulling is used or not. Only active >=0.
g_turret_input.esp_strength description=ESP settings: Modifier for the ESP strength set in the data.
g_turret_input.esp_used_mode description=Applies for fixed only, 0: average, 1: weighted average, 2: closest position.
g_turret_input.relativeLimiterSpeed description=Speed of turret limiter change when used via buttons
g_turret_input.relative_mouse_adaptive_zoom_sensitivity description=Set via options, adaptive mouse sensitivity based on the zoom level (pointer always, 1v1 only during ADS)
g_tutorialModeForceDisable description=Force disabling of tutorial
g_undergroundCreaturesHelpers.debugDraw description=> 0, Display underground creature helper emerge/submerge point info
g_undergroundCreaturesHelpers.log description=Enable/Disable underground creature helper component logging
g_unloadMod description=
g_usable.additionalTag description=Additional global tag to apply to the debugDraw
g_usable.alignmentSlotArea.debugdraw description=display Alignment slot area info (1=Show Area)
g_usable.debugLog description=Prints additional log info about usables when enabled
g_usable.debugdist description=Max distance the usable can be to draw the info
g_usable.debugdraw description=Enable debug draw for usable+a for Alignment point for entering+e for Alignment point for exiting+p for information on spots/interaction points+r for runtime information on the user+q for query information+s for Alignment point for scooching
g_usable.debugdrawCylinderHeight description=Height of the alignment slot cylinder
g_usable.debugdrawUsableFilter description=Filter the usable debug by the entity name or entity id string
g_usable.dumpInfo description=Print useful usable/actor information for release debug.
g_usable.filterByUseChannel description=Filter usable debug by use channel name
g_usable.fragmentOverride description=overrides the fragment for the debugDraw to show story specific information
g_usable.maxGenerationTimeBudget description=When executing the async usable generation point phase for the TPS, this is the max budget we can use each frame.
g_usable.scoochDebugDraw description=Visualize max distance for scooches
g_usable.useAITag description=Adds the global AI tag to determine the alignment data for the debugDraw when enabled
g_useHostilityDisconnectTimers description=Enables/disables the use of the Hostility timer to keep the player on the server after log out.
g_useMasterModes description=Enables master modes (can be overridden by game mode settings).
g_useNewMissionSystem description=Use the new mission system for server meshing (0 = never use new mission system, 1 = use new mission system if game rules says so, 2 = always use new mission system)
g_useNonActorPlayer description=If set the client player entity will not be an actor.
g_useXMLCPBinForSaveLoad description=Use XML compressed binary format for save and loads. DON'T CHANGE THIS DURING RUNTIME!
g_use_new_eva_marker description=0 is don't use new EVA marker, 1 is game mode default and 2 is force use new EVA marker
g_use_new_nofication_system description=0 is don't use new notification system, 1 is game mode default and 2 is force new notification system
g_validateStreamingObjectContainerRadii description=Streaming Object Container Radii will be validated against the exported radii when loading in, logging out mismatches requiring re-export.
g_vehicleFilterFromASOP description=Filter these vehicles out of ASOP terminals. Usage: g_vehicleFilterFromASOP shipname1 shipname2 etc
g_vibrations.deactivationCountdownReset description=Sets the amount of frames the vibration component updates wait until they turn themselves off
g_voip_bufferDelaySize description=Buffers to store up before beginning playback on rx machine.
g_voip_enableGatedActivation description=Activate voice chat input based on threshold.
g_voip_gateAttackSamples description=Attack (fade-in) time for gated voice activation.
g_voip_gateHoldSamples description=Hold (stay active) time for gated voice activation.
g_voip_gateOffThreshold_dB description=Threshold level in dB at which to deactivate voice chat.
g_voip_gateOnThreshold_dB description=Threshold level in dB at which to activate voice chat.
g_voip_gateReleaseSamples description=Release (fade-out) time for gated voice activation.
g_voip_localMonitorDelayBypass description=If 1, bypass delay on local voice monitor.
g_voip_localMonitorLevel description=Local player voice monitor level.
g_voip_minBuffersToCatchUp description=Min stored buffers to trigger a catch-up sequence.
g_voip_testPushDataToLocalPlayerActor description=Push voip/faceware data to the local player actor.
g_voip_testSyncOffset description=Facial playback sync delay to account for audio h/w output (milliseconds).
g_voip_voiceAlwaysOn description=Disable voice mute (push-to-talk).
g_voipfoipManager.call_timeout_seconds description=P2P comms call expiration time.
g_weaponModifiers.debugWeaponOffset description=0 - disables any weapon sway debug
1 - shows cross hair guide lines to help aligning the weapon
2 - will override player input to allow to manually align the weapon
g_weaponModifiers.debugWeaponRaise description=Draws the ray used to detect gun collisions and cause weapon raise
g_weaponModifiers.debugWeaponRecoilDisabled description=Debug Weapon Recoil
g_weaponModifiers.disableWeaponProcClipModifiers description=0 - enables any weapon proc clip modifiers set up in DataForge
1 - disables all weapon proc clip modifiers set up in DataForge
g_weaponModifiers.disableWeaponProcClipModifiersConstantUpdate description=0 - constantly updates weapon proc clip modifiers set up in DataForge
1 - will only reload proc clip modifiers when player moves, changes stance, etc
g_weaponModifiers.disableWeaponProcClips description=0 - enables any weapon proc clip
1 - disables all weapon proc clips
g_weaponModifiers.disableWeaponRaise description=0 - enables weapon raising
1 - disables weapon raising
g_weaponModifiers.enableNPCBottomlessMags description=Enable bottomless mags weapon modifier for NPCs:
0 - Disabled
1 - Enabled
2 - Gameplay controlled
(Applied when weapon is equipped)
g_weaponMount.useFPSRotation description=Use FPS rotation method
g_weaponOffsetInput description=Restores the weapon offset
g_weaponOffsetOutput description=Outputs to the console the current weapon
g_weaponOffsetReset description=Resets all weapon offsets
g_weaponOffsetToMannequin description=Moves the current weapon offset into current cry mannequin's selected key. g_weaponOffsetToMannequin left will select the left hand offset.
g_weapon_controller.cm_time_per_burst_increment description=Time it takes to increment the burst count of CMs.
g_weapon_controller.enable_safety_check description=Sets whether or not safety checks on weapons are done for the local player.
g_weapon_controller.input_convergence_exponent description=Sets the precision on the fallback convergence scale. The higher, the more precise it will be towards zero.
g_weapon_controller.input_convergence_relative_speed description=Sets the speed for changing the convergence value for relative controls.
g_weapon_controller.max_stagger_fire_rate_threshold description=The maximum rate that weapons are allowed to be staggered, beyond this threshold weapons will not be allowed to stagger and will fire only in standard mode.
g_weapon_controller.player_default_settings_fading_pips_enabled description=Default player options: Fading PIPs.
g_weapon_controller.player_default_settings_fallback_convergence description=Default player options: Convergence distance.
g_weapon_controller.player_default_settings_lag_pips_enabled description=Default player options: Lag PIPs.
g_weapon_controller.player_default_settings_magnified_ui_enabled description=Default player options: Magnified UI.
g_weapon_controller.player_default_settings_precision_lines_enabled description=Default player options: Precision Lines.
g_weapon_controller.player_default_settings_single_pips_enabled description=Default player options: Single PIPs.
g_weapon_controller.player_default_settings_staggered_fire_enabled description=Default player options: Staggered Fire.
g_weapon_controller.safety_check_threshold description=The weapon safety check raycast has to trigger for the set amount of frames in a row to stop the weapon from firing.
g_weapon_controller.weapon_fallback_convergence_distance_default description=Static default fallback convergence distance for all non-players.
g_weapon_controller.weapon_fallback_convergence_distance_max description=Maximum manual fallback convergence distance in meters. Cannot be changed.
g_weapon_controller.weapon_fallback_convergence_distance_min description=Minimum manual fallback convergence distance in meters. Cannot be changed.
g_weapon_controller.weapon_preset_cycle_wait_time description=If weapon presets are changed, this is the amount of time it needs to take until a change in the same direction is allowed.
g_weapon_controller.weapon_preset_sorting_fastest_first description=Sorts the weapon presets by fastest gun type first.
g_weapon_controller.weapon_preset_system_enabled description=Static default fallback convergence distance for all non-players.
g_worldDisplay3D_zoomMultiplier description=Controls the speed at which the star map zooms in and out
gamedata_playback description=
gamedata_record description=
gamedata_stop_record_or_playback description=
getVehicleId description=Get the ID of a given vehicle.
gfx_ampserver description=Enables AMP flash profiling
gfx_checkfilesforupdates description=Enables timestamp checking of flash files for updates on window regaining focus
gfx_debug_dyn_textures description=Draw UI Elements that are on DynTextures additional as 2D
gfx_debugdraw description=Display UI Elements debug info.
0=Disabled1=UIElements2=UIActions4=UIActions12=UIStack per UI FG
gfx_draw description=Draw UI Elements
gfx_inputevents_triggerrepeat description=Time in seconds to wait between each input key trigger
gfx_inputevents_triggerstart description=Time in seconds to wait until input key triggering starts
gfx_loadtimethread description=Enables threaded rendering while loading
gfx_reload_all description=Reloads all UI Elements
gfx_reload_flashplayer description=Reload specific UI Element by name or if blank, all of them
gfx_reloadonlanguagechange description=Automatically reloads all UIElements on language change
gfx_uiaction_enable description=Enables UI Actions
gfx_uiaction_folder description=Default folder for UIActions
gfx_uiaction_log description=Log UI Actions
gfx_uiaction_log_filter description=Filter for logging
<string> only log messages
-<string> don't log message
<filter1>|<filter2> to use more filters
gfx_uievents_actionlistener description=Enables input action handling instead of just raw input device events.
gfx_uievents_editorenabled description=Enabled UI->System events in editor (Disabled per default! handle with care!)
godmodePlayer description=Enable godmode on the specified actor
goto description=Get or set the current position and orientation for the player
Usage: goto x y z
Usage: goto x y z wx wy wz
Usage: goto <gotopoint: autocomplete/substring>
Usage: goto x y z locationId

gotoNext description=Moves the player to the next goto point in the list, based on the flags specifiedUsage: GotoNext <Space or Indoors or Any> <Collision or NoCollision> <Vehicle or Player> [Random]

gotoNextSetSeed description=Sets a seed to randomize the GotoNext command. 0 to disable (random seed)
Usage: GotoNextSetSeed <seed>

gotoPlayer description=Move to the position of a player by name.
gotoZonePos description=Teleports player to zone co-ordinates entered, if zoneEntityName isn't provided the zone will be the one that the player is currently inside. Usage: gotoZonePos x y z zoneEntityName or gotoZonePos x y z
gpu_particle_physics description=Enable GPU physics if available (0=off / 1=enabled).
gr_difficulty.difficulty description=Set game difficulty level
gr_difficulty.dynamicScalingDebugDraw description=Draws information about the current dynamic difficulty calculations
gr_difficulty.log description=Enable/Disable Difficulty Logging
ground_vehicle_vjoy_deadzone description=Ground Vehicles: Defines the size of the dead zone
ground_vehicle_vjoy_max_angle_pitch description=Ground Vehicles: Defines the max angle the pitch vjoy is offset from the middle of the screen.
ground_vehicle_vjoy_max_angle_yaw description=Ground Vehicles: Defines the max angle the yaw vjoy is offset from the middle of the screen.
grpc.refresh_token description=Refresh the JWT token
Usage: grpc.refresh_token <token>
grpc_echo_setting_autoclose description=Delay in MS after streams are closed automatically
grpc_echo_setting_debug_service description=If set use 'debug.EchoService' instead of default Echo Service (0=default service; 1=debug service)
grpc_echo_setting_keepalive_delay description=Delay between messages sent to echo service for the keepalive stream
grpc_echo_setting_keepalive_retry_delay description=Delay between retries (if 0, use GRPC default sequence)
grpc_echo_setting_log_incoming description=Number of incoming messages logged (0=disabled; -1=infinitive)
grpc_echo_setting_log_level description=Echo Log Level (0=disabled, 1=errors only, 2=log test, 3=log return, 4=log messages
grpc_echo_setting_log_outgoing description=Number of outgoing messages logged (0=disabled; -1=infinitive)
grpc_echo_setting_retries description=Number of retries
grpc_push_stresstest_subscriptions description=CVar to stresstest push subscriptions
Usage: grpc_push_stresstest_subscriptions <Number of subscriptions>
grpc_subscribe description=Subscribe to Push System.
Usage: grpc_subscribe <Topic> [<Topic>...]
grpc_test_rich_error description=Send an EchoError message.
Usage: grpc_rich_error [message]
grpc_test_rpc description=Test gRPC rpc.
Usage: grpc_echo_rpc <Message=""> <Delay=0> <QueueMode=0> <DelayedCancel=0> <Deadline=0>
grpc_test_rpc_diff description=Test Diffusion rpc.
Usage: grpc_test_rpc_diff <Message="">
grpc_test_stream_duplex description=Test gRPC duplex stream.
Usage: grpc_echo_stream_duplex <Message=""> <NumMessages=1> <Delay=0> <Random=0> <RndMinPeriod=0> <RndMaxPeriod=0> <RndMaxMsg=0> <CloseDelay=1000> <QueueMode=0> <DelayedCancel=0> <Deadline=0>
grpc_test_stream_incoming description=Test gRPC server stream.
Usage: grpc_echo_stream_incoming <Message=""> <NumMessages=1> <Delay=0> <QueueMode=0> <DelayedCancel=0> <Deadline=0>
grpc_test_stream_outgoing description=Test gRPC client stream.
Usage: grpc_echo_stream_outgoing <Message=""> <NumMessages=1> <Delay=0> <QueueMode=0> <DelayedCancel=0> <Deadline=0>
grpc_unsubscribe description=Unsubscribe from Push System.
Usage: grpc_unsubscribe <SubscriptionId>
grpc_unsubscribe_all description=Unsubscribe all debug subscriptions from Push System.
Usage: grpc_unsubscribe_all
gt_entity_filter description=Filter game tokens displayed by gt_show, by entity name
gt_filter description=Filter game tokens displayed by gt_show. Will only display tokens whose name includes the string set on this cvar.
gt_filter_exclude description=Filter game tokens displayed by gt_show. Will only display tokens whose name does not include the string set on this cvar.
gt_show description=Game token debug. Set to 1 to display game token value changes
heal description=Heal self for 1000 hp split between BodyParts. [ActorName, HealthAdjust]
heal_injuries description=Heal injuries on a specified actor. [ActorName (client if none set), BodyPart (all if none set]
hud_aspectCorrection description=Aspect ratio corrections for controller rotation: 0-off, 1-direct, 2-inverse
hud_bob_override.debug description=Enable prototype head bob debug 1-enable 0-disable
hud_bob_override.enable description=Enable prototype head bob which is in sync with foots 1-enable 0-disable
hud_bob_override.footstepsCycleDelay description=footstepsCycleDelay
hud_bob_override.rollFromYawOverrideScale description=If not 0 use the inherit yaw value from roll multiplied by scale
hud_bob_override.rotationScale description=Prototype head bob rotation scale
hud_bob_override.translationScale description=Prototype head bob translation scale
hud_cockpitAudioSubtitles description=Cockpit Audio Subtitles enabled on/off.
hud_contextualDialogSubtitles description=Actor contextual dialog Subtitles enabled on/off. (Background chatter)
hud_enable_head_overlay_proc_clip description=Enable using of head overlay procclip 0 to disable, 1 to enable(default) 
hud_enable_visor_shake description=Enable visor shake set to 0 to disable, 1 to enable(default) 
hud_hide description=3: hides the Lens only 2: hides the Visor only 1:hides the Visor and Lens, 0:unhides them all
hud_pip_snapDist description=
hud_shake_scale description=Scale of HUD shake, set to 0 to disable shake, 1 to default, or any other to scale it to the required factor i.e. for value of 10 shaking will be exagerated up to 10 times
i_DumpDeviceInformation description=Print out information about currently connected input devices
i_Tobii.couplePositionOffsetToOrientation description=Translation offsets are based on the view direction.
i_Tobii.currentProfile description=Current Tobii's profile.
i_Tobii.debug description=Shows debug for eyetracking data
i_Tobii.extendedView description=Enables / disables extended view
i_Tobii.extendedViewDebug description=Shows debug for infinite screen
i_Tobii.gazeBasedBombDesiredImpactPoint description=Uses the gaze data for setting the desired impact point for bombs, overrides look direction and vjoy options.
i_Tobii.gazeBasedMissileLock description=Uses the gaze data for locking missiles, overrides look direction and vjoy options.
i_Tobii.gazeBasedTargetSelection description=Uses the gaze data for selecting targets, overrides look direction and vjoy options.
i_Tobii.interactAtGaze description=Enables / disables interact at gaze
i_Tobii.positionDeadZoneX description=Position Dead Zone Left Right.
i_Tobii.positionDeadZoneY description=Position Dead Zone Forward Backward.
i_Tobii.positionDeadZoneZ description=Position Dead Zone Up Down.
i_Tobii.positionScale description=Multiplies the positional offset.
i_TobiiProfile0.CameraBoostGazeDeadzone description=Checks which gaze input method is used for head tracking, 0 for camera boost, 1 for input mix.
i_TobiiProfile0.CameraBoostValue description=Checks which gaze input method is used for head tracking, 0 for camera boost, 1 for input mix.
i_TobiiProfile0.CameraMaxAnglePitchDown description=Maximum pitch (down) angle extended view can produce in degrees.
i_TobiiProfile0.CameraMaxAnglePitchUp description=Maximum pitch (up) angle extended view can produce in degrees.
i_TobiiProfile0.CameraMaxAngleYaw description=Maximum yaw angle extended view can produce in degrees.
i_TobiiProfile0.GazeInputMethod description=Checks which gaze input method is used for head tracking, 0 for camera boost, 1 for input mix.
i_TobiiProfile0.HeadCenterStabilization description=Dampen the head tracking angles close to the center orientation.
i_TobiiProfile0.HeadSensitivityPitch description=How much will the extended view pitch angle change when head tracking input changes.
i_TobiiProfile0.HeadSensitivityRoll description=How much will the extended view roll angle change when head tracking input changes.
i_TobiiProfile0.HeadSensitivityYaw description=How much will the extended view yaw angle change when head tracking input changes.
i_TobiiProfile0.HeadViewAutoCenter description=Enables / disables tobii's automatic recentering functionality.
i_TobiiProfile0.InputMixEyeHeadTrackingRatio description=Ratio between eye and head tracking contribution to extended view angles.
i_TobiiProfile0.InputMixGazeResponsiveness description=How fast will extended view angles change when eye tracking input changes.
i_TobiiProfile1.CameraBoostGazeDeadzone description=Checks which gaze input method is used for head tracking, 0 for camera boost, 1 for input mix.
i_TobiiProfile1.CameraBoostValue description=Checks which gaze input method is used for head tracking, 0 for camera boost, 1 for input mix.
i_TobiiProfile1.CameraMaxAnglePitchDown description=Maximum pitch (down) angle extended view can produce in degrees.
i_TobiiProfile1.CameraMaxAnglePitchUp description=Maximum pitch (up) angle extended view can produce in degrees.
i_TobiiProfile1.CameraMaxAngleYaw description=Maximum yaw angle extended view can produce in degrees.
i_TobiiProfile1.GazeInputMethod description=Checks which gaze input method is used for head tracking, 0 for camera boost, 1 for input mix.
i_TobiiProfile1.HeadCenterStabilization description=Dampen the head tracking angles close to the center orientation.
i_TobiiProfile1.HeadSensitivityPitch description=How much will the extended view pitch angle change when head tracking input changes.
i_TobiiProfile1.HeadSensitivityRoll description=How much will the extended view roll angle change when head tracking input changes.
i_TobiiProfile1.HeadSensitivityYaw description=How much will the extended view yaw angle change when head tracking input changes.
i_TobiiProfile1.HeadViewAutoCenter description=Enables / disables tobii's automatic recentering functionality.
i_TobiiProfile1.InputMixEyeHeadTrackingRatio description=Ratio between eye and head tracking contribution to extended view angles.
i_TobiiProfile1.InputMixGazeResponsiveness description=How fast will extended view angles change when eye tracking input changes.
i_alwaysCountModifiersOnFailedAction description=Binds keys and modifiers that are pressed at the same time, preventing double triggering when mapping a key with different modifiers to actions with different activation modes.
i_attachable_debugLocalRules description=Draw (>0) and log (>1) information of any attachable entity currently using local rules.
i_bufferedkeys description=Toggles key buffering.
Usage: i_bufferedkeys [0/1]
Default is 1 (on). Set to 1 to process buffered key strokes.
i_debug description=Toggles input event debugging.
Usage: i_debug [0/1]
Default is 0 (off). Set to 1 to spam console with key events (only press and release).
i_debugDigitalButtons description=render controller's digital button pressed info
Usage: 0 (off), 1(on)Default is 0. Value must be >=0
i_debug_databank_contact_list_member description=Force radar to treat all detected contacts as a member of the contact list.
Values:
0:  default (disable cvar)
1:  Force include
2+: Force exclude
i_debug_databank_contact_state_override description=Force radar to report contact state.
Values:
0:  default (disable cvar)
1:  Live
2:  Partial
3:  Echo
4:  Ghost

i_debug_docking_ports description=Shows debugging information for the docking tube entities in i_docking_ports_debug_distance (range).
i_debug_docking_ports_font_size description=Font size of debugging information for the docking tube entities
i_debug_draw_jpointaccess description=Draw debug geometry around the jump point access to show radii of relevant logic
i_debug_gimbal_auto_aim description=Force gimbal auto aim on
i_debug_interaction_state_machine description=1 = display interaction state machine 3d debug text, 2 = display 2d and 3d debug text
i_debug_interaction_state_machine_filter description=String matching filter on entity names for the interaction state machine debug
i_debug_interaction_state_machine_range description=If > 0, only display state machine debug information for entities within this range of the client actor (if there is one)
i_debug_log_jpointaccess description=Log events for tracking jump point access behaviour
i_debug_missile_rack description=Display missile and missile rack debug info, including target, arm, and fire state
i_debug_projectiles description=Displays info about projectile status, where available. Use 3 for audio whizbys and 4 for audio whizbys for local player bullets.
i_debug_resource_container description=Sets resource value for highlighted resource containers. Usage: g_resourceContainer.SetResource <record name> <SCU>
i_debug_sequencer description=Draws Sequencer debug information for all streamed entities with Sequencer components.
Use i_debug_sequencer_filter to filter Sequencer entities by name.
Usage: i_debug_sequencer 1 (shows all debug info)
Usage: i_debug_sequencer abc (flags can be combined in any order to show only specific debug info)
0: None.
1: All.
a: Display defined tasks.
b: Display defined sequences.
c: Display active sequences.

i_debug_sequencer_filter description=Used to filter out entities with this specific sub set of strings.
i_debug_sequencer_fontsizescale description=Scales the font size used by the i_debug_sequencer text.
i_debug_sounds description=Enable item sound debugging
i_debug_targetRTT_unknown_geo_scale description=Scale target focus RTT screen geo size for UNKNOWN marker only.
i_debug_zoom_mods description=Use zoom mode spread/recoil mods
i_defaultProfileFilepath description=Specify the default profile xml file path
i_degradation_enable_armor_mitigation_loss description=Enables Armor Damage Mitigation based on degradation. 1 = Enable, if GameRules allow it. 2 = Always enable.
i_degradation_enable_degradation_through_use description=Enables usage based degradation. 1 = Enable, if GameRules allow it. 2 = Always enable.
i_detach description=Force detach an entity from an item port
i_docking_ports_debug_distance description=The distance at which the debug information can be seen.
i_door_controller.debug description=If enabled (> 0), show on-screen debug info for the door controller component.
0 - off
1 - on
2 - get relativeUserId from g_pGame
i_door_controller.filter_itemport description=Filters the debug info by itemport name (each interaction has an associated itemport).
i_door_controller.filter_name description=Filters the debug info by Door Controller entity name (useful for specifying an entity ID).
i_door_controller.overrideOwner description=If enabled (> 0), overrides the door controller ownership checks when the door controller is locked.
0 - off
1 - act like everyone owns every ship, letting them bypass ownership locks.
1 - act like no-one owns any ship, making ownership locks fail.

i_door_controller.text_scale description=Scales the debug text (text is also scaled with screen pixel density).
i_equippableKnife description=Allows to eqip a knife
i_failedDetonation_lifetime description=Length of time from failed detonation until deletion
i_flashlight_has_shadows description=Enables shadows on flashlight attachments
i_forcefeedback description=Enable/Disable force feedback output.
i_health.allow_self_inflicted_distortion description=0 = Only accept distortion damage if it came from a different source (i.e. prevent you from EMPing yourself)
i_health.damageMapSnapshotDelayProjectile description=Sets the delay for updating the damage map snapshot on the authoritative server when a projectile impact has happened. [in seconds]
i_health.damageMapSnapshotDelaySalvage description=Sets the delay for updating the damage map snapshot on the authoritative server when a salvage impact has happened. [in seconds]
i_health.debug description=Show debug information for health components: 0 = off, 1 = simple at entity location, 2 = detailed as list, 3 = both
i_health.debugInitialDamage description=Set to >=1 to show debug visualization for Initial Damage. Requires i_health.debug to also be >=1
i_health.filter_class description=Additionally filter the displayed health component debug by entity class
i_health.filter_distance description=Additionally filter the displayed health component debug by distance to the entity, in meters. Default 20km
i_health.filter_name description=Additionally filter the displayed health component debug by entity name
i_health.override_damage description=Set to a value to override the damage being applied to all health components whenever one is hit
i_heat.enableOverheat description=Enables/disables item overheating (server authoritative)
i_heat.thermalEnergyMultiplier description=Multiplier for the amount of thermal energy generated by all items with heat connection components. Does not affect coolers.
i_innerThoughts_displayInLookDir description=Forces the inner thoughts to spawn at cursor position
i_interactionConditions.carryLimit.useDensityManager description=If 1, carry limit condition will use the density manager data for item, instead of limit set by the parameters of the condition.
i_inventoryContainer.log description=1: enable inventory container logs
i_inventoryContainer.lootGeneration.disabled description=Enable/Disable loot generation on spawn
i_inventoryContainer.maxUnstowsPerRequest description=Max number of unstows allowed per inventory before backend limit will be hit.
i_inventoryContainer.openInventory.alwaysOpenOpenInventory description=When activated it will always open an open inventory on authority change, even id it was alrerady considered open.
i_inventoryContainer.openInventory.gridAlignment description=Selects the grid alignment strategy for tractor beam attachment: (0) - 1cm, (1) - 25cm, (2) - 50cm/125cm object contextual, (3) - 125cm 
i_inventoryContainer.openInventory.maxOpenRetries description=Max number of retries before the request will be marked as failed and discarded
i_inventoryContainer.openInventory.useImmediateCreationFlow description=1: enable immediate creation to open inventories instead of going through the EG flow
i_joystickSleepTime description=Seconds from last (analogue) joystick input until the device is considered asleep.
Usage: time in seconds
Default is 60.0
i_kiosk.log description=If 1, log out all kiosk report messages, otherwise only errors.
i_listActionMaps description=List action maps/filters on screen (1 = list all, 2 = list blocked inputs only)
i_listActions description=List recently handled actions on screen
i_medipen_quick_select description=Skips the medipen stow/unstow animation
i_misfire.enable_critical_misfires description=Enables critical misfires on items (that cause the host to explode).
i_misfire.enable_demo_damage_handling description=Enables citizencon demo damage handling.
i_misfire.enable_misfires description=Enables misfire generation.
i_misfire.impactMaxDistanceToRelay description=Damage of impacts will be interpolated up until this distance and applied to relays within.
i_misfire.impact_angle_threshold description=Sets the threshold for impact angles to be considered. Hit normal relative to relay must be in this threshold to be considered.
i_misfire.impact_damage_mode description=Sets the mode for damage.
0 - no handling (debug)
1 - Relays
2 - Other components
3 - Both
i_misfire.log_misfires description=Log debug information for misfires
i_misfire.override_misfire_severity description=Value between 0 and 1 to use as the misfire severity for all items. Set to -1 to use the real item value instead.
i_mouse_accel description=Set mouse acceleration, 0.0 means no acceleration.
Usage: i_mouse_accel [float number] (usually a small number, 0.1 is a good one)
Default is 0.0 (off)
i_mouse_accel_max description=Set mouse max mouse delta when using acceleration.
Usage: i_mouse_accel_max [float number]
Default is 100.0
i_mouse_buffered description=Toggles mouse input buffering.
Usage: i_mouse_buffered [0/1]
Default is 0 (off). Set to 1 to process buffered mouse input.
i_mouse_inertia description=Set mouse inertia. It is disabled (0.0) by default.
Usage: i_mouse_inertia [float number]
Default is 0.0
i_mouse_smooth description=Set mouse smoothing value, also if 0 (disabled) there will be a simple average
between the old and the actual input.
Usage: i_mouse_smooth [float number]
(1.0 = very very smooth, 30 = almost instant)
Default is 0.0
i_mouse_smoothing_mode description=Determines the mode of mouse smoothing
If set to 0, mouse smoothing will always be disabled
If set to 1, mouse smoothing will be enabled while in social sections, when available, and disabled everywhere else
If set to 2, mouse smoothing will always be enabled
Default is 1 (social only)
i_mouse_speed description=Set mouse speed when using i_rawMouse=0
Usage: i_mouse_speed [float number]
Default is 1.0
i_personal_inventory.dump_inventory description=
i_personal_inventory.handleOutOfOrderRequests description=For RSI-383702, allow local invalidation of all inventories when response for requests are received out of order.
i_personal_inventory.lootableItemDist description=Distance items can be looted from a lootable container.
i_personal_inventory.nameFilter description=Filter inventory container debug based on their name (partial, case insensitive)
i_ports_always_accept_attach description=always accept attachments
i_ports_asserts description=Enables/Disables itemport asserts
i_ports_debug_action description=Item port debug actions
i_ports_debug_resource_links description=1: Debug draw item port itemport resource links, 2: Also debug draw resource items
i_ports_debugdist description=Distance the items are visible
i_ports_debugdraw description=Display item port itemport debug information
i_ports_debugscale description=Scale multiplier for itemport debug text and widgets
i_ports_filter description=Name(s) of ports/items to debug, separated with |
i_ports_log_error description=Logs item port errors to the console if enabled
i_ports_rootEntityFilter description=Name(s) of root entity to debug, separated with |
i_power.enable_misfire_effects description=Enables the effects of misfires on items.
i_power.enable_misfire_generation description=Enables misfire generation from the power system.
i_rawMouse description=Enable/Disable the Raw Mouse input.
i_rawMouseMoveDeferred description=Enable/Disable deferred sending of mouse movement. If deferred movement data is sent once per frame; otherwise it instant/continuous.
i_rawmouseUsingRemoteDesktop description=Enable/Disable the settings for remote desktop.
i_reload description=Reloads item scripts.
i_resolveModifierConflicts description=Modifier conflicts occur when there are actions assigned to multiple modifiers. This CVar allows the ActionMapManager to try to solve them. See RSI-19847 for more details.
i_seat.debugFlowLog description=Log info on the enter/exit flow of seats
i_seat.debugVehicleSeatExit description=Log info on the players exit flow from vehicle seats
i_seat.dumpSeatExitState description=Dump the current state of the seat for exiting
i_seatDashboard.autogenerateMissingHMD description=0 - No autogeneration, 1 - Generate fake HMD screen if params are null
i_seatDashboard.dynamicInteractionCheck description=Enables the potentially expensive checking of duplicate dynamic interactions.
i_seatDashboard.persistScreenSelections description=0 - Do not persist, 1 - persist in a serialized variable
i_seatDashboard.showSideIndicators description=Shows side indicators: 1 enable, 0 disable
i_seatDashboard.useActionInteractionOverrides description=0 - Disabled, 1 - Game Rules, 2 - Enabled. Allows certain actions to be overridden to use interactions instead, this allows the use of player animations for player input actions
i_set_adaptive_trigger_command description=Set adaptive trigger command.
Usage: i_set_adaptive_trigger_command trigger(0 = L2, 1 = R2) mode(0 - 6) <additional mode params>
0. Mode Off: i_set_adaptive_trigger_command trigger 0
1. Mode Feedback: i_set_adaptive_trigger_command trigger 1 position(0..9) strength(0..8)
2. Mode Weapon: i_set_adaptive_trigger_command trigger 2 startPosition(2..7) endPosition(startPosition + 1..8) strength(0..8)
3. Mode Vibration: i_set_adaptive_trigger_command trigger 3 position(0..9) amplitude(0..8) frequency(0..255)
4. Mode MultiplePositionFeedback: i_set_adaptive_trigger_command trigger 4 array_strength(up to 10 elements each 0..8)
5. Mode SlopeFeedback: i_set_adaptive_trigger_command trigger 5 startPosition(0..endPosition) endPosition(startPosition + 1..9) startStrength(1..8) endStrength(1..8)
6. Mode MultiplePositionVibration: i_set_adaptive_trigger_command trigger 6 frequency(0.255) array_amplitude(up to 10 elements each 0..8)

i_showKeybindLog description=Enable logging for keybindings, 0 = OFF, 1 = ON. Default to off
i_target_selector.auto_selection_enabled_in_IM description=When in interaction mode: 0 = all selection is disabled, 1 = selection cones follow cursor direction
i_target_selector.auto_selection_includes_distance description=Include distance to target when calculating automatic selection score
i_target_selector.auto_selection_includes_movement description=Include movement matching against the target when calculating automatic selection score
i_target_selector.auto_selection_includes_timer description=Include time that the current selection has been active for when calculating automatic selection score for other contacts
i_target_selector.auto_selection_timer_override description=Overrides value for timer score modifier DF param if >= 0
i_target_selector.auto_targeting_default_on description=Enables auto targeting when the player sits in the cockpit for the first time. On by default
i_target_selector.auto_targeting_enable_on_target_loss description=If set to 1, auto-targeting will automatically re-enable on its own if no targets are present.
i_target_selector.auto_targeting_keep_last_target description=If auto targeting is enabled, this will keep the last target alive.
i_target_selector.auto_targeting_lost_timer description=Time that needs to pass for smart targeting to react on a lost target.
i_target_selector.auto_targeting_only_on_tracked_targets description=If auto targeting is enabled only tracked targets will be selected for auto targeting.
i_target_selector.auto_targeting_step_timeout description=Time which blocks auto selection after having used the weak auto target cycling.
i_target_selector.auto_targeting_target_swap_angle_ratio description=The ratio of the auto select circle which is taken into account for target swapping.
i_target_selector.cycling_order_timeout description=Time (s) after user cycling input that the order of the list will use live data rather than cached
i_target_selector.debug_autoselection description=Debugs automatic selection process
i_target_selector.debug_filter description=Entity name filter to show only certain entities. Set to 'self' to show client controlled entity only
i_target_selector.debug_hud_pointer description=0: no pointer, 1: show arrow at angle, 2: show anchor, 3: show both
i_target_selector.debug_occlusion description=Debugs targeting occlusion
i_target_selector.debug_quantum_targets description=Debugs quantum targeting procedures
i_target_selector.debug_subtargeting description=Debugs current subtarget
i_target_selector.debug_targets description=Shows markers of each target in the world
i_target_selector.debug_view_selected_target description=When pressing v_debug_target_view it will set the camera to follow the targeted entity
i_target_selector.enable_reticle_focus description=0: v_target_cycle_in_view_reset uses reset selector action, 1: v_target_cycle_in_view_reset uses reticle selector action.
i_target_selector.hud_pointer_rotates_to_target description=0: target pointer rotates in 2D. 1: target pointer points towards target.
i_target_selector.hud_pointer_tracking_type description=0: target pointer tracks only HUD. 1: target pointer tracks only helmet. 2. target pointer tracks HUD and helmet.
i_target_selector.pinning_new_replaces_oldest description=0 = when the pinned list is full, new FIFO pins will be ignored. 1 = when the pinned list is full, new FIFO pins replace the oldest pin
i_target_selector.player_targeting_only_on_tracked_targets description=If set to 1, the player can only target tracked objects.
i_target_selector.player_targeting_shoot_cycling_allowed description=0: off, 1: shoot cylce always allowed, 2: shoot cycle only allowed in ADS and assisted.
i_target_selector.player_targeting_shoot_cycling_fov_ratio description=If set to 1, we're only swapping the target if we're in auto targeting.
i_target_selector.player_targeting_shoot_cycling_only_auto_targeting description=If set to 1, we're only swapping the target if we're in auto targeting.
i_target_selector.player_targeting_shoot_cycling_time_threshold description=This is the amount of time a selected target must have been stable for shoot cycling to be allowed.
i_target_selector.sub_targeting_iteration_reset_time description=Sets the time in which cycling the sub target order is kept. Must be positive.
i_target_selector.sub_targeting_requires_scan description=1 = Can only use subtargeting on the current target if it is fully scanned, 0: subtargeting always available (default)
i_target_selector.target_selection_direction_type description=Use VJoy direction for automatic selection. If 0, uses actor look direction.
i_target_selector.target_show_heading_arrow description=Display the heading (UI element) of the locked target as an arrow.
i_target_selector.target_show_label_distance description=Display the text (UI element) showing the name of the locked target.
i_target_selector.target_show_label_name description=Display the text (UI element) showing the distance to the locked target.
i_target_selector.targeting2_enabled description=Enables the auto targeting feature for SQ42 (can be overridden by game mode settings).
i_target_selector.ui_3d_marker_eye_offset_dist description=Distance in meters to offset 3D reticle elements from the view camera or eye position.
i_target_selector.ui_3d_marker_min_size description=Minimum bounds of target brackets after eye position offset scaling.
i_target_selector.ui_corner_stagger_delay_ratio description=Ratio of the lerp time to delay each locked target reticle corner element's intro animation.
i_target_selector.ui_frust_ratio_size description=Ratio of the screen to size the individual locked target reticle elements.
i_target_selector.ui_label_max_radius description=Max screen ratio radius for the circular label bounds.
i_target_selector.ui_label_min_radius description=Min screen ratio radius for the circular label bounds.
i_target_selector.ui_lerp_time_buffer_range description=Time range in seconds for which the lerp time is adjusted based on angular offset to the target. Facing in a further away direction adds more of this range to the lerp time.
i_target_selector.ui_min_deselect_expansion_radius_frust_ratio description=Minimum ratio of the screen which acts as a clamp for the size of the deselect expansion animation for the locked target reticle corner elements.
i_target_selector.ui_min_target_radius_frust_ratio description=Ratio of the screen which acts as a minimum clamp for the locked target reticle radius.
i_target_selector.ui_offscreen_marker_padding_px description=Amount of pixels to pad the offscreen marker from the edge of the screen bounds.
i_target_selector.ui_outline_max_alpha description=Max target outline alpha.
i_target_selector.ui_outline_max_width description=Max target outline width.
i_target_selector.ui_outline_min_alpha description=Min target outline alpha.
i_target_selector.ui_outline_min_width description=Min target outline width.
i_target_selector.ui_outline_show description=Show target outlines.
i_target_selector.ui_seeker_reticle_anim_time_ratio description=Ratio of the lerp time at which the locked target reticle seeker element completes its animation.
i_target_selector.ui_target_corner_expand_anim_begin_ratio description=Ratio of the lerp time at which the locked target reticle corners begin to contract during transition.
i_target_selector.ui_target_corner_max_tumble_rotations description=The maximum number of tumble rotations for the corner elements of the locked target reticle.
i_target_selector.ui_target_max_aspect_ratio description=Maximum aspect ratio of the locked target reticle corner brackets.
i_target_selector.ui_target_radius_padding_ratio description=Percentage padding of the actual size of the ship bounds used for the locked reticle corner elements.
i_target_selector.ui_target_reticle_lerp_time description=Time in seconds for the total duration of the locked target reticle transition time.
i_target_selector.ui_target_smoothing_time description=Time in seconds for the locked target reticle corners to smooth changes between ship faces (rotation and size).
i_uiViewOwner.disabled description=Disable old MFDs. This CVar should be set before loading a ship.
i_xinput description=Number of XInput controllers to process
Usage: i_xinput [0/1/2/3/4]
Default is 1.
i_xinput_deadzone_handling description=deadzonehandling
Usage: i_xinput_deadzone_handling 0/1 (0 - old deadzone/ 1 - new deadzone)
Default is 1. Value must be >=0.
i_xinput_poll_time description=Number of ms between device polls in polling thread
Usage: i_xinput_poll_time 500
Default is 1000ms. Value must be >=0.
ignore_display_priority_for_objectives description=If enabled, will ignore the display priority flag for the objectives. 0 is force disabled, 1 is game mode default and 2 is force enabled
ik_targetComponent.enable description=Enable/Disable the IK-Target System
ip_debug_player description=Draws debug info for the client player's item ports
item_resource.cheat_update_mode description=0: Modified RN update will run every frame
1: Experimental state based mode. Results may vary.
item_resource.enable description=1 = enable item resource network system
item_resource.enable_fixed_update description=1 = enable resource network fixed step update, 2 = bundle multiple steps into 1 (experimental, may have side effects)
item_resource.enable_full_engineering_ui description=0: Only power calculations for MFDs 
1: Full update to support engineering screens. CHANGING AT RUNTIME MAY HAVE UNPREDICTABLE RESULTS FOR EXISTING SHIPS
item_resource.fixed_update_timestep description=Time step for fixed step update in seconds. Default 1 / 30
item_resource.force_cheat description=1 = enable item resource component simple update, where they always get what they ask for. Note: Disables some functionality, for debugging purposes only.
item_resource.forced_functionality_ratio description=Force functionality ratio to be a value between 0 and 1, -1 = disable this cvar)
item_resource.heat_prediction description=0: No heat generation prediction on the coolant dynamic mod. 
1: Coolant dynamic mod will try to adjust for however much heat power consumption will produce this frame. Should reduce jumps in consumption.
item_resource.link_everything description=1 = all items in a hierarchy are assumed to be linked
item_resource.performance_use_lod description=(0 to 7), limit of LOD optimization. 'Distant' resource hosts, that is to say those nearer to edge of streaming bubbles will update less frequently. Could cause responsiveness issues in extreme scenarios.
item_resource.pool_default_engines description=Override for allocation for engine power pool when reset to default
item_resource.pool_default_shields description=Override for allocation for shield power pool when reset to default
item_resource.pool_default_weapons description=Override for allocation for weapon power pool when reset to default
item_resource.power_dist_cooler_min description=The minimum throttle (0-1) applied to coolers during default power distribution.
item_resource.power_dist_pools_fill_min description=When enabled, default power distribution will fill up pools to 1 segment (or min value if it's higher) before further distributing power to pools.
item_resource.power_dist_pools_proportion description=The proportional value (0-1) of maximum power applied to power pools during default power distribution (can be overridden by the individual weapon/engine/shield CVars).
item_resource.power_plant_output_override description=Overrides power plant power outputs.
join description=Join a specific server instance (pass server uId as arg 1 here), use in client front end menu on the screen when you would normally click to enter the game
karne.gunFight.covers description=Debug draw for the cover Karne is currently monitoring
karne.knifeFight.movement description=Debug draw for Karne's strafing movement
karne.knifeFight.windows description=Debug draw for the dodge and stagger windows for Karnes synced attacks
karne.knifeFight.zLock description=Debug draw for the z-locking
kill description=Kills the player.
law.add_clearance_for_private_property description=
law.hackPrison description=Set player to hack prison sentence away.
law.remove_clearance_for_private_property description=
law.test_location_trespass description=If enabled, all restricted areas will automatically count as private property
law.test_ship_trespass description=If enabled, all ships will automatically count as private property
law_commit_crime description=Adds a specified infraction to a given player. If a field is not added, will use default values for that field
Usage:law_commit_crime <Jurisdiction> <Crime> <Player>
Default values: UEE Murder ClientPlayer (Only on client)
law_enable_crimestats description=Disables the acquisition of any crimestat, 0 = Crimestats Disabled, 1 = Crimestats Enabled
law_enable_warning_hud description=Enable warning messages in HUD for various law systems (trespassing, green zones, impounding, etc)
law_reset_criminal_record description=Resets the criminal record for a given player. If player is not added, will use client player (Only on client)
Usage: law_reset_criminal_record <Player>
law_sandbox_triggers description=Enables sandbox triggers for Organizations, 0 = CVar Disabled, 1 = CVar Enabled
law_spawn_avoid_prison description=Prevents going to prison, 0 = CVar Disabled, 1 = CVar Enabled
law_spawn_force_prison description=Forces going to prison when you die, 0 = CVar Disabled, 1 = CVar Enabled
law_trespass_area_debug description=Display trespass area debug rendering in the server 3d window
loadactionmap description=Loads a key configuration file
log_Filter description=Filter by specified messages
defines general filter for log events
log_Filter="Foo" - will only log events that matches this filter ("Foo")
log_Filter="-Foo" - all events that matches this filter ("Foo") will be dropped
log_Filter="Foo|-Bar" - combine more filters
log_IncludeTime description=Toggles time stamping of log entries. Modes: [0/1/2/3/4/5/6]
0=off
1=current time
2=relative time
3=current+relative time
4=absolute time in seconds since this mode was started
5=current time+server time
6=current time in T-Z format
log_Module description=Filter by specified module
log_PrependModule description=Prepend logs with the module it's logged with
log_RemoteConsoleVerbosity description=defines the verbosity level for remote console
-2=inherit log_verbosity
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments
log_SpamDelay description=Sets the minimum time interval between messages classified as spam
log_TraceVerbosity description=defines the verbosity level for log messages published to cigTrace
Requires trace filter to process legacy log
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments
log_UseFilter description=Log Filter mode:
0=disabled
1=filter console
2=filter file
4=filter remote console
log_Verbosity description=defines the verbosity level for log messages written to console
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments
log_WriteToFile description=toggle whether to write log to file
log_WriteToFileVerbosity description=defines the verbosity level for log messages written to files
-2=inherit log_verbosity
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments
log_tick description=When not 0, writes tick log entry into the log file, every N seconds
log_write_to_stdout description=Write all log information to std out (e.g. when running in Docker or Teamcity CI)
ls_enableLoudSpeakerAnnouncer description=Enables or disables the loudspeaker announcer (used for Race mode).
lv_action description=Verbosity of Action log [1: Receive]
lv_event description=Verbosity of Event log [1: Receive]
lv_rpc description=Verbosity of RPC log [1: Call, Receive, 2: Register, Unregister]
m_CombatMusicEnabled description=Enables combat music. Set to 0 to disable combat music. [0,1]
m_DisableParameters description=Music logic parameters will no longer get their values set from the game and will stop decaying.

m_DrawMusicSystemDebug description=enable/disable Music System debug drawing
0: Disabled
1: Enabled
2: Extended
m_EventDisplayTimeout description=How long to display the music events on screen when they are triggered via m_DrawMusicSystemDebug.
m_GlobalMusicSuite description=Music suite to start when game boots up.
m_MusicAreaDebug description=Enable onscreen debugging and logging for music areas
m_MusicAreaDebugDrawAlpha description=Alpha value for debug rendering of music area spheres/boxes [0..1]. Default = 0.5
m_MusicAreaDisableRetriggerCount description=Disable retrigger count functionality of music areas
m_MusicComponentDebug description=Enable onscreen debugging and logging for music components
m_MusicSystemEnabled description=enable/disable Music System
m_MusicSystemLogging description=enable/disable Music System logging
0: Disabled
1: Standard logging
2: Verbose logging
m_SetMusicParameter description=Set a music system input's value. Usage: m_SetMusicParameter <parameter name> <value>
m_SetMusicSwitch description=Set a music system switch state. Usage: m_SetMusicSwitch <switch name> <switch state> [<lock>]
. 
m_StartMusicSuite description=Start a music suite. Usage: m_StartMusicSuite <suite name>
m_StopMusicSuite description=Stop a music suite. Usage: m_StopMusicSuite <suite name>
m_TriggerMusicEvent description=Trigger a music system event. Usage: m_TriggerMusicEvent <trigger name>
m_UnlockMusicSwitch description=Unlock a music switch to allow it to be changed and restore the cached value. Usage: m_UnlockMusicSwitch <switch name>
map description=Load a map, same usage as 'megamap' cvar.
megamap description=Load a map using the mega-map flow
example usage 'megamap EA_BrokenMoon_BattleRoyale'
if unable to find megamap then will look for matching '.socpak'
memorymanager.config.maxallowedrssusagemb description=To crash when RSS reaches set value. Decoupled from memory tracking.
mfx_BatchUpdateEnable description=Enable batch based processing of deferred material effects
mfx_BatchUpdateMaxJobs description=The maximum amount of MFX containers to process per frame, anything more will be discarded
mfx_CachedEventCleanupTime description=Cleanup cached MFX physics events after a set time [in seconds]
mfx_CachedEventRadiusMultiplier description=Multiplier for how far an impact between the same objects needs to move before triggering another MFX effect
mfx_Debug description=Turns on MaterialEffects debug messages. 1=Collisions, 2=Breakage, 3=Both
mfx_DebugFlowGraphFX description=Turns on Material FlowGraph FX manager debug messages.
mfx_DebugVisual description=Turns on/off visual debugging for MFX system
mfx_DebugVisualFilter description=
mfx_Enable description=Enables MaterialEffects.
mfx_EnableAttachedEffects description=Enable attached effects (characters, entities...)
mfx_EnableFGEffects description=Enabled Flowgraph based Material effects. Default: On
mfx_ImpactSpeedThreshold description=Impact speed threshold for effects. Default: 2.0
mfx_RaisedSoundImpactThresh description=Impact threshold for sound effects if we're rolling. Default: 3.5
mfx_Reload description=Reload MFX Spreadsheet
mfx_ReloadFGEffects description=Reload MaterialEffect's FlowGraphs
mfx_SlidingSpeedThreshold description=Impact sliding speed threshold for effects. Default: 10.0
mfx_SoundImpactThresh description=Impact threshold for sound effects. Default: 1.5
mfx_WeatherPuddleGravityDotThreshold description=Threshold for a static surface to be considered as a puddle in rainy areas on planets.
mfx_WeatherPuddleMFXEnable description=Enable Water MFX on static surfaces aligned with gravity in rainy areas on planets.
mfx_attachedEffectUpdateLodFactor description=Multiplier for the pixel radius on screen, at which to start culling the update for effects attached to a character. At 1, an object needs to be at least 5 pixels on screen.
mfx_debugVisualLifetime description=The time the visual debug stays around
mfx_pfx_maxDist description=Max dist (how far away before scale is clamped)
mfx_pfx_maxScale description=Max scale (when particle is far)
mfx_pfx_minScale description=Min scale (when particle is close)
mfx_projectileImpactMode description=How projectile impact effects are spawned. 0: Spawn in hosted zone (old style); 1: Spawn in host zone, attach to ships (new style)
mfx_waterHitOnly description=Bullet hit FX appears on water and not what's underneath
mg_useHoloVolume description=Use holographic rtt rendering for starmap and PMA
mission_accept_more_resource_then_needed description=If enabled, the player will be able to submit box that are bigger then the remaining of the mission.
mission_broker_advance_time description=
mission_broker_client_debug description=Display available mission debug information on the client
mission_broker_complete description=
mission_broker_dump description=
mission_broker_force_tutorial_mode description=Forces the mission broker into tutorial mode for all players
mission_broker_log_reputation_request_timeout description=Whether or not to log timing out of mission broker reputation requests
mission_broker_log_reputation_rewards description=Whether or not to log reputation rewarded from missions
mission_broker_override_current_date description=Overrides the current date in game when looking for active missions in the calendar as a string in ISO 8601 format (yyyy-mm-ddThh:mm:ss.sssZ)
mission_broker_seed description=Seed number for the mission broker random number generator, if zero the system time will be used as a seed
mission_broker_simulate_shipping_build description=Disables all debug override settings and enforces the Not For Release setting on missions in a dev build
mission_cluster_id_override description=Forces all mission locations to use this cluster id (only used for testing purposes)
mission_data_set_dump description=Dumps the full state of the Mission Data Set (Locations, Items and Organizations
mission_debug description=Client debug display for the local player's accepted and completed missions. Set to 1 to display accepted missions, 2 to also display completed missions
mission_debug_text_size description=Text size for client debug display for the local player's accepted and completed missions. Suggested: 1.2
mission_disable_old_locations description=Disable mission locations that use the old subsumption platform component
mission_force_complete_all description=Used to force complete all of a player's active missions. Use <player name> [c=complete/f=fail/a=abandon/w=withdraw]
mission_generator_accept description=Used to accept a contract on a generator. Use <Generator Record> <Contract Debug Name> [<Seed>]
mission_load_all description=Used for loading all missions. Directory arg can be set. Default: libs/subsumption/missions
mission_location_occupancy_expiry_time description=Update the MissionLocationService occupancy at MissionLocations each expiryTime (seconds)
mission_log_StopMission_callstack description=For logging out a callstack whenever a mission module is deleted
mission_log_all_completed_missions description=Used to log out all the completed missions
mission_log_max_completed description=Maximum number of completed missions saved in the contract manager.
mission_log_registered_mission_locations description=When enabled, log information about mission locations when registered from the OC hierarchy.
mission_logs_to_cigtrace description=If set, subsumption mission logs will be logged via cigTrace. 0 = disabled, 1 = use cigDebug, 2 = use cigNotice
mission_partial_oc_streaming_init_wait_time description=For location modules that have AllowPartialOCStreamingForInit enabled, how many seconds to wait after the first OC streams in before triggering the Init
mission_performSpawnLocationChecks description=If set to 1 performs an additional tactical point query if it detects a possible intersection of the spawned entity with a nearby physical entity
mission_player_markers_max_range description=Maximum range to display contact markers on players with the same tracked mission as you
mission_query_available_missions_interval description=Time interval for quering available missions. Used for notifications.
mission_remove_owner_on_stow description=If set, when a mission-owned entity is stowed, remove its mission-owned state
mission_ship_heartbeat_analytics description=The time interval in seconds that the Mission Ship Heartbeat Analytics will be sent.
mission_show_player_markers description=Enables contact markers on players with the same tracked mission as you
mission_ui.debugDisplayMultipleSubtitlesObjectives description=If enabled, will display three subtitles and three objectives for each subtitle
mission_ui.maxMissionsDisplayed description=The maximum number of missions (subtitles) displayed.
mission_ui.maxObjectivesDisplayed description=The maximum number of objectives displayed.
mission_ui.show_objective_id_in_ui description=When enabled, should the objective guid in the text strings everywhere the objective is displayed in the UI
mission_ui.use_HUD_objective_hierarchy description=Use objective hierarchy on the HUD to make objective-subobjective relation
mission_use_scu_for_custom_hauling_drop_off_orders description=If enabled, the custom drop off hauling phases will use SCU amounts rather than item count (cvar to be replaced with configurable option in DF at some point).
mn_AllowForcingCatchupOnFaceScope description=Allows the audio proc clip to estimate the clip update error and feed this value back to the facial scope when the 'facial' checkbox is selected.

mn_allowEditableDatabasesInPureGame description=Do not store editable databases
mn_filterLogQueries description=Name filter of entities to debug with mn_logQueries
mn_logQueries description=Log details of query attempts for debugging, 1=all, 2=failures only, 3=successes only
mn_procContext.movementControlMethod.enabled description=Enable/disable movement control method procedural clip (for testing only, will break usables if disabled!)
mobiGlasFrameWorkProvider.sendData description=Sends mobiGlasAppData to specified entity. Usage: mobiGlasFrameWorkProvider.sendData <DataRecordName> <EntityName>
mov_cameraPrecacheTime description=
mov_disableSequenceTrackSubsequenceFinishing description=If enabled, will prevent sequences that are stopping due to time moving outside of its active range to animate one last time clamped at the offending edge of the sequence.
mov_enableServerSyncedCheck description=If true, sequences with the ServerSynced flag not set will be skipped in non-client environments.
mov_enable_multithread description=If set to one, enable parallel updates of sequences and anim nodes within
mov_enable_multithread_editing description=If set to one, enable parallel updates of sequences and anim nodes within, while in editing mode
mov_enable_precache_frustum_culling description=If set to 1, will cause precache cameras to frustum cull for zone queries for precache streaming
movie_physicalentity_animation_lerp description=Lerp value for animation-driven physical entities
ms_log_updateAreaState description=Enables logging to keep track of UpdateAreaState
ms_maxStanceChangeTime description=Maximum time to wait before changing the stance if the leader stance has changed
ms_maxStanceRequestTime description=Maximum time to wait after requesting a stance change to changet the stance changing the stance if the leader stance has changed
net.display.memory.prefix.iec description=Prefix type preferred for displaying memory/bandwidth values: false=SI (powers of 1000, e.g. kilo, mega, giga, etc.), true=IEC (powers of 1024, e.g. kibi, mebi, gibi, etc.)
net.display.memory.unit.bytes description=Unit preferred for displaying memory/bandwidth values: false=bits, true=bytes
net.packet.calculator.aggregation.period description=The maximum time in seconds to aggregate consecutive bandwidth/packet rate/loss samples
net.packet.calculator.measurement.interval description=The maximum time in seconds to average bandwidth/packet rate/loss calculations over
net.rl.load.cost.calculator.bandwidth.recv.bias description=Expected value of the bandwidth usage for inbound traffic in Kbps
net.rl.load.cost.calculator.bandwidth.recv.weight description=Weights used in the calculation of the server load balancing cost bandwidth_recv
net.rl.load.cost.calculator.committed.memory.usage.bias description=Expected value of the committed memory usage in gigabytes. Strictly positive cost.
net.rl.load.cost.calculator.committed.memory.usage.weight description=Weights used in the calculation of the server load balancing cost committed_memory_usage
net.rl.load.cost.calculator.entity.count.bias description=Expected value of the entity count
net.rl.load.cost.calculator.entity.count.weight description=Weights used in the calculation of the server load balancing cost entity_count
net.rl.load.cost.calculator.frame.time.bias description=Expected value of the frame-time measured in ms
net.rl.load.cost.calculator.frame.time.weight description=Weights used in the calculation of the server load balancing cost frame_time
net.rl.load.cost.calculator.main.thread.stall.cost.rate description=Rate at which the server cost increases once a main thread stall is detected
net.rl.load.cost.calculator.main.thread.stall.threshold.seconds description=Threshold at which the main thread has potentially experienced a deadlock in seconds
net.rl.load.cost.calculator.send.cost.tolerance description=Difference between the new and old cost that must be met or exceeded before being sent to the hybrid
net.rl.load.cost.calculator.send.load.cost.interval description=Interval (in seconds) between sending the servers load balancing costs
net.rl.load.cost.calculator.working.memory.usage.bias description=Expected value of the working set memory usage in gigabytes
net.rl.load.cost.calculator.working.memory.usage.weight description=Weights used in the calculation of the server load balancing cost working_memory_usage
net.rl.model.server.debug.info.frame.count description=Limits the server debug info send to every x number of server frames
net.rl.model.server.debug.info.update.period description=Limits the period between server debug info sends to XXX milliseconds
net.rl.model.track.authority.changes.class.crc description=Set to the Entity Class CRC that should have authority changes logged
net.rl.model.use.new.binding description=Enables use of the new binding mechanism (CTG-21479, BUG-222459)
net.rl.model.use.star.hash.time.slicing description=Enables time-slicing of StarHash queries
net.rl.model.worker.dirty.bits.initial description=Initial number of bits reserved for each bit set in m_workerDirtyVariables
net.rl.netview.dirty.list.keep.client description=Size of the dirty list that is maintained after being reset for client and local views
net.rl.netview.dirty.list.keep.server description=Size of the dirty list that is maintained after being reset for non-client and non-local views
net.rl.netview.dirty.list.max.client description=Max size of the dirty list for client and local views
net.rl.netview.dirty.list.max.server description=Max size of the dirty list for non-client and non-local views
net.rmq.delivery.initial.reserve description=Initial reserve capacity for the delivery notification queue, measured in number of packets
net.rmq.delivery.max.callbacks.to.process description=To time-slice callback processing
net.rmq.reader.max.packets.to.process description=Time-slice message processing should out-of-order delivery result in a large backlog of packets to be processed
net.rmq.receiver.ack.max.since.last description=The maximum time in milliseconds between sending ack packets
net.rmq.receiver.ack.min.duplicates description=The minimum number of duplicate receives needed to force an ack to be sent
net.rmq.receiver.ack.min.new.packets description=The minimum number of new packets received needed to force an ack to be sent
net.rmq.receiver.ack.min.too.far.ahead description=The minimum number of receives that would have grown beyond max_queue_size needed to force an ack to be sent
net.rmq.receiver.ack.min.too.late description=The minimum number of duplicate receives needed to force an ack to be sent
net.rmq.receiver.anti.jitter.max.age description=The maximum age in seconds to keep an anti-jitter delay sample
net.rmq.receiver.anti.jitter.max.delay description=The maximum time in seconds a non-blocked, received packet can be delayed being passed to the reader waiting for preceding missing packets
net.rmq.receiver.anti.jitter.max.samples description=The maximum number of anti-jitter delay samples to keep
net.rmq.receiver.enable.blocking.sequence description=Enable the blocking sequence optimization
net.rmq.receiver.max.ack.bits.per.packet description=The maximum number of ack/nack bits per ack packet
net.rmq.receiver.max.ack.packets description=The maximum number of ack packets to send to the remote host in one go
net.rmq.receiver.max.queue.size description=The maximum size the receive queue is allowed to grow to
net.rmq.receiver.max.reads description=The maximum number of packets to pass to the reader in one go
net.rmq.sender.all.fragments.reliable description=When true all fragments are sent reliably, even unreliable ones
net.rmq.sender.compress.internal description=When true compress packets sent between servers and replicants (more CPU cost but lower bandwidth even though we don't have to pay for it)
net.rmq.sender.max.reliable.retries description=The maximum number of times a reliable packet will retry before the local host should disconnect
net.rmq.sender.max.resends.per.update description=The maximum number of packets that can be resent per call of SendPackets
net.rmq.sender.max.sends.per.update description=The maximum number of packets that can be sent per call of SendPackets
net.rmq.sender.resend.initial description=Initial value of the fast resend timeout for a new connection in seconds
net.rmq.sender.resend.min description=Minimum value of the fast resend timeout seconds
net.rmq.sender.resend.offset description=Offset in seconds added to mean RTT for calculating the fast resend timeout
net.rmq.sender.retransmission.backoff description=Retransmission delay's backoff multiplier
net.rmq.sender.retransmission.max description=Retransmission timer's maximum timeout in seconds
net.rmq.sender.retransmission.min description=Retransmission timer's minimum timeout in seconds
net.rmq.sender.retransmission.offset description=Offset in seconds added to mean RTT for calculating the retransmission timeout
net.rmq.sender.round.trip.weight description=Exponentially weighted moving average blend weight for retransmission timer's RTT mean
net.rmq.traffic.shaper.backlog.panic.ratio description=Maximum ratio of BDP to queued backlog before returning to startup phase and aggressively probing maximum bandwidth
net.rmq.traffic.shaper.bbr.enabled description=Enable/disable using traffic shaping to perform BBR congestion avoidance
net.rmq.traffic.shaper.delivery.rate.max.age description=The maximum age in seconds to keep a delivery rate sample
net.rmq.traffic.shaper.delivery.rate.max.round.trips description=The maximum number of round trips to keep a delivery rate sample
net.rmq.traffic.shaper.delivery.rate.max.samples description=The maximum number of delivery rate samples to keep
net.rmq.traffic.shaper.max.inflight.bytes description=The maximum number of bytes that can be inflight (sent but not yet acknowledged or expired) at once
net.rmq.traffic.shaper.max.send.rate description=The maximum send rate in bytes per second (used when lower than the applicable client/server/replicant setting)
net.rmq.traffic.shaper.max.send.rate.client description=The maximum send rate in bytes per second for game clients
net.rmq.traffic.shaper.max.send.rate.replicant.to.client description=The maximum send rate in bytes per second from replicants to game clients
net.rmq.traffic.shaper.max.send.rate.replicant.to.server description=The maximum send rate in bytes per second from replicants to game servers
net.rmq.traffic.shaper.max.send.rate.server description=The maximum send rate in bytes per second for game servers
net.rmq.traffic.shaper.min.inflight.allowance description=The minimum number of inflight (sent but not yet acknowledged or expired) bytes that it is assumed a network link can support. Used for links with very low RTT (compared to processing overhead) where the bandwidth delay product would be too small to allow the link to be filled
net.rmq.traffic.shaper.rate.limit.mode description=0 = off, 1 = send rate limiting only, 2 = inflight limiting only, 3 = send rate and inflight limiting
net.rmq.traffic.shaper.round.trip.max.age description=The maximum age in seconds to keep a round trip sample
net.rmq.traffic.shaper.round.trip.max.round.trips description=The maximum number of round trips to keep a round trip sample
net.rmq.traffic.shaper.round.trip.max.samples description=The maximum number of round trip samples to keep
net.rmq.traffic.shaper.send.pacing.min.bytes description=The minimum number of send allowance bytes needed at next send deadline. Negative values disable send pacing
net.rmq.traffic.shaper.startup.bdp.gain description=Gain applied to bandwidth delay product during start-up phase
net.rmq.traffic.shaper.startup.rate.gain description=Gain applied to delivery rate during start-up phase
net.rmq.traffic.shaper.startup.rounds description=The number of round-trips delivery rate must be steady over before exiting the start-up phase
net.rmq.traffic.shaper.startup.steady.rate.tolerance description=Maximum ratio of delivery rate at start and end of round during start-up considered to be steady
net.rmq.traffic.shaper.startup.steady.rtt.tolerance description=Maximum ratio of RTT at start and end of round during start-up considered to be steady
net.rmq.writer.heap.fragment.reserve.scale description=How many more times the estimated message size is allocated when performing fragmentation on the heap (gives inaccurate estimates a greater chance of succeeding
net.rmq.writer.isolate.unreliable description=Don't write unreliable and reliable messages into the same packet
net.rmq.writer.max.msg.per.packet description=The maximum number of messages that should be written into a single packet
net.rmq.writer.min.fragment.bytes description=The minimum size of message payload that can be fragmented across multiple packets
net.scheduler.max.workers description=The number of jobs that will be dispatched in parallel to process a scheduler phase that has parallelism enabled
net.scheduler.parallel.decryptanddecompress description=Enable/disable parallel execution of the network scheduler phase DecryptAndDecompress
net.scheduler.parallel.for.granularity description=The minimum number of items a parallel for loop needs to process them in parallel
net.scheduler.parallel.messagecompletioncallbacks description=Enable/disable parallel execution of the network scheduler phase MessageCompletionCallbacks
net.scheduler.parallel.processpotentialviewbindchanges description=Enable/disable parallel execution of the network scheduler phase ProcessPotentialViewBindChanges
net.scheduler.parallel.processreceivedpackets description=Enable/disable parallel execution of the network scheduler phase ProcessReceivedPackets
net.scheduler.parallel.processstarhashentityupdates description=Enable/disable parallel execution of the network scheduler phase ProcessStarHashEntityUpdates
net.scheduler.parallel.readsockets description=Enable/disable parallel execution of the network scheduler phase ReadSockets
net.scheduler.parallel.sendacks description=Enable/disable parallel execution of the network scheduler phase SendAcks
net.scheduler.parallel.senddata description=Enable/disable parallel execution of the network scheduler phase SendData
net.scheduler.parallel.viewsyncentities description=Enable/disable parallel execution of the network scheduler phase ViewSyncEntities
net.scheduler.parallel.writemessages description=Enable/disable parallel execution of the network scheduler phase WriteMessages
net.serialized.remote.method.bytes.max description=The maximum number of bytes allowed for a serialized remote method send. Nothing above this size will be sent to the Replication Layer
net.serialized.remote.method.bytes.soft.limit description=Soft limit on the number of bytes for a serialized remote method send. Error but still send above this size
net.serialized.variable.bytes.max description=The maximum number of bytes allowed for a serialized variable update. Nothing above this size will be sent to the Replication Layer
net.serialized.variable.bytes.soft.limit description=Soft limit on the number of bytes for a serialized variable update. Error but still send above this size
net.socket.manager.max.timeout description=Maximum max_timeout (seconds) that a socket should wait for received data
net.socket.manager.use.poll description=When true use poll() and when false use select()
net.socket.udp.recv.buffer.growth.factor description=Socket buffer growth rate multiplier - a value of 2 will cause a buffer to double its size
net.socket.udp.recv.buffer.max description=Maximum size in bytes the socket buffer can grow to if less than the OS maximum
net.socket.udp.recv.buffer.max.fullness description=What fraction of the socket buffer size must be received in one go to cause the socket buffer to grow
net.socket.udp.recv.buffer.min description=Minimum initial size in bytes of the socket buffer if set greater than the OS default and less than the OS maximum
net.socket.udp.send.buffer.growth.factor description=Socket buffer growth rate multiplier - a value of 2 will cause a buffer to double its size
net.socket.udp.send.buffer.max description=Maximum size in bytes the socket buffer can grow to if less than the OS maximum
net.socket.udp.send.buffer.min description=Minimum initial size in bytes of the socket buffer if set greater than the OS default and less than the OS maximum
net.socket.udp.send.would.block.retries description=How many times to retry a sendto call that failed because of a lack of buffer space after first trying to grow the buffer
net_activate_shard_wait description=Sets the period to wait for shard activation to complete in seconds
net_actor_id_wait description=Sets the period to wait for actorId of listener in seconds
net_allow_predicted_zone_transition description=Allow physics predictor to perform zone transitions based on data received from authority.
net_analytics_replicated_entity_properties_interval description=Update interval (in seconds) for replicated entity properties analytics
net_assert_zero_bit_serialized_variables description=0 = no asserts, 1 = assert on writes, 2 = assert on reads, 3 = assert on writes and reads.
net_cet_spawn_debug_level description=CET Player spawn error handling:
0 = logging only, bitmask for fatals:
1 = Fatal On Network ID mismatch
2 = Fatal On Entity Class mismatch
4 = Fatal On Entity Initialization State
8 = Fatal On Entity Spawn failure
net_cet_spawn_variable_retries description=How many times CET Player spawn will retry fetching data from the variable service
net_cet_spawn_variable_retry_delay description=How long in seconds CET Player spawn will wait between retrying fetching data from the variable service
net_cet_wait_async_spawns_dump_blocking_batches description=Enables dumping all batches that are blocking the CET from finishing when the CET times out
net_cet_wait_async_spawns_timeout_seconds description=How long in seconds client CET will wait for all server replicated spawn batches to complete before ending load process and removing the loading screen anyway
net_cet_wait_async_spawns_use_load_blocking description=0 = count all active spawn batches, Other = only count spawn batches marked as load blocking when deciding when to remove loading screen
net_chan_connection_resend_timeout description=Time in seconds between connection request packets
net_chan_disconnect_resend_max_timeout description=Maximum seconds to wait before resending a disconnection packet
net_chan_disconnect_resend_min_timeout description=Minimum seconds to wait before resending a disconnection packet
net_chan_disconnect_resend_rtt description=How many Round-Trip Times to wait before resending a disconnection packet
net_chan_disconnect_timeout description=Graceful disconnection timeout in seconds
net_chan_inactivity_timeout description=Sets how many seconds a channel will stay alive for without receiving any packets
net_chan_keepalive_timeout description=Time in seconds between keepalive packets
net_chan_ping_timeout description=Time in seconds between ping packets
net_chan_ping_timeout_initial description=Time in seconds between ping packets, during initial startup of a connection
net_change_shard_status_crashed_wait description=Sets the period to wait for the shard status to change to Crashed in seconds
net_change_shard_status_seeding_wait description=Sets the period to wait for the shard status to change to Seeding in seconds
net_client_actor_id_wait description=Sets the period to wait for the client actor id to be set in seconds
net_client_actor_spawned_final_wait description=Sets the period to wait for the client actor to finalize spawning in seconds
net_client_actor_spawned_wait description=Sets the period to wait for the client actor to be spawned in seconds
net_client_player_id_wait description=Sets the period to wait for client player id to be set in seconds
net_client_player_spawned_final_wait description=Sets the period to wait for the client player to finalize spawning in seconds
net_client_player_spawned_wait description=Sets the period to wait for the client player to be spawned in seconds
net_compress_analytics_interval description=Time in seconds between successive Net.Packet.Compression and Net.Packet.Decompression analytics events
net_compress_packet_threshold description=size at which the packet will be compressed (in bytes)
net_compress_packets description=enable/disable packet compression
net_confirm_eg_cleared_wait description=Sets the period to wait for the confirmation that the Entity Graph has been cleared in seconds
net_context_establisher_error_seconds description=maximum time in seconds a context establisher task is allowed to run before failing
net_context_establisher_populate_error_seconds description=maximum time in seconds a context establisher task during eCVS_Populate is allowed to run before failing
net_context_establisher_seeding_error_seconds description=maximum time in seconds a context establisher task during eCVS_Seeding is allowed to run before failing
net_context_establisher_warn_seconds description=time in seconds a context establisher task needs to run between warnings
net_create_shard_eg_wait description=Sets the period to wait for the creation of a new shard on Entity Graph in seconds
net_current_solar_system_wait_seconds description=Sets the period to wait for information about the current solar system on the client in seconds
net_debug_binds description=Enable/disable logging of network binding/unbinding. 0: Off, 1: State binds/unbinds only, 2: Connection binds/unbinds only, 3: All binds/unbinds
net_debug_critical_on_invalid_layout description=When non zero the server will report a Critical instead of an error when detecting an invalid change layout
net_debug_dirty_flags_stress_test description=0: disabled.  >0: Bitmask of TEntityNetworkDirtyFlags to force on every entity every frame
net_debug_netbindbatches description=0: no debug.  1: modest debug logs  2: verbose logging
net_default_socket_port_client description=The default port that will be used for clients. (Unless overridden by default_bind_port)
net_default_socket_port_server description=The default port that will be used for game servers. (Unless overridden by default_bind_port)
net_default_socket_port_service description=The default port that will be used for services. (Unless overridden by default_bind_port)
net_destroy_shard_eg_wait description=Sets the period to wait for the destruction of the shard on the Entity Graph in seconds
net_disable_cross_shard_stow description=When enabled cross shard stow requests will be dropped before being sent to their target shard
net_disconnection_info_action_client description=Action to take if disconnection occurs on client (0 = Do Nothing, 1 = cigError, 2 = CryFatalError
net_disconnection_info_errors description=Disconnection error numbers to include. List and separate them with |
net_disconnection_info_exclusion_reasons description=Strings and substrings to exclude when searching the reason for the disconnection error. List and separate them with |
net_disconnection_info_inclusion_reasons description=Strings and substrings to search for in the reason of the disconnection error. List and separate them with |
net_disconnection_info_remote_filter description=<0 = Don't take action on disconnects that were sent from a remote source, 0 = take action on all disconnects whether they originated locally or from a remote source, >0 = Only take action on disconnects that were sent from a remote source
net_document_service_retries description=How many times to retry a query to the Entity Document Service before giving up
net_document_service_retry_delay description=Sets the period to wait before querying the Entity Document Service again in seconds
net_document_service_wait description=Sets the period to wait for the Entity Document Service to respond in seconds
net_dump_object_state description=Dump network replicated entities to output
Usage: net_dump_object_state [<entity id>|<flags>]*
<entity id>: Filter output to only entities of supplied id. Multiple id arguments are allowed
<flags>: Use '+'/'-' followed by combinations of the following flags to enable/disable them (all on by default):
  * = all flags
  e = badly bound
  b = show bind state
  a = show authority
  v = show bound views
  x = show totals
  e.g. +eba 

net_enable_persistence_prototype_write description=Enable the network entity graph write prototype on servers
net_enable_stow_variable_filtering description=When enabled stows will filter out any variables that have flags and not eSVF_Type_Persistence
net_enable_streamable_streaming_root_parents description=When enabled streaming group root correction logic will allow entities that are attached to streamable zone hosts to be streaming group roots
net_end_frame_mode description=Move network's end frame update: 0 (default) = after PostUpdate, 1 = after PostAnimationUpdate
net_entity_graph_bury_retries description=The number of times to retry a failed entity graph bury operation. Negative values = GRPC_RETRY_INDEFINITELY
net_entity_graph_bury_retry_failed_precondition description=The number of times to retry an failed entity graph bury operation on a gRPC::StatusCode::FAILED_PRECONDITION error. Negative values means fall back on net_entity_graph_bury_retries
net_entity_graph_bury_retry_not_found description=The number of times to retry an failed entity graph bury operation on a gRPC::StatusCode::NOT_FOUND error. Negative values means fall back on net_entity_graph_bury_retries
net_entity_graph_bury_use_partitioning_key description=Selects how a bury will be partitioned based on the following values. Values greater than 2 will be treated as though they are 0
0: No partitioning key will be used, Kafka will choose a queue round robin
1: The EntityId will be used as the partitioning key
2: A random GUID will be used as the partitioning key

net_entity_graph_query_retries description=The number of times to retry a failed entity graph query. Negative values = GRPC_RETRY_INDEFINITELY
net_entity_graph_query_streaming_group_deadline description=The number of seconds that must pass before the request will forcibly fail. This must be greater than the expiry
net_entity_graph_query_universe_unstreamables_deadline description=The number of seconds that must pass before the request will forcibly fail. This must be greater than the expiry
net_entity_graph_query_zone_flush_limit description=Maximum number of zone queries that can be flushed in any given interval
net_entity_graph_query_zone_hosts_deadline description=The number of seconds that must pass before the request will forcibly fail. This must be greater than the expiry
net_entity_graph_reject_malformed_ocs description=Select how to handle entities containing Object Container components that don't have a snapshot variable specifying the filename
0: No filtering or logging
1: Log malformed OC entities but don't reject them
2: Log malformed OC entities and reject them
3: Log both valid and malformed OC entities and reject malformed ones

net_entity_graph_stow_bury_deadline description=The number of seconds that must pass before the request will forcibly fail. This must be greater than the expiry
net_entity_graph_stow_bury_expiry description=If this period (in seconds) is exceeded the entity graph will automatically fail and notify us of the expiry of our request. This must be less than the deadline
net_entity_graph_stow_retries description=The number of times to retry a failed entity graph stow operation. Negative values = GRPC_RETRY_INDEFINITELY
net_entity_graph_stow_retry_failed_precondition description=The number of times to retry an failed entity graph stow operation on a gRPC::StatusCode::FAILED_PRECONDITION error. Negative values means fall back on net_entity_graph_stow_retries
net_entity_graph_stow_retry_not_found description=The number of times to retry an failed entity graph stow operation on a gRPC::StatusCode::NOT_FOUND error. Negative values means fall back on net_entity_graph_stow_retries
net_entity_graph_stream_writer_num_streams description=Number of parallel EG streams
net_entity_graph_stream_writer_reconnect_max description=Gracefully close and reconnect active stream after maximum of X seconds, to allow load balancing
net_entity_graph_stream_writer_reconnect_min description=Gracefully close and reconnect active stream after minimum of X seconds, to allow load balancing
net_entity_graph_stream_writer_report_metrics description=Enable Stream writer metrics.
net_entity_graph_use_sm_view description=When enabled, use the new SM EntityGraph view (CReplicationViewPersistence) instead of the old PES one (CReplicationViewEntityGraph
net_entity_graph_write_debug description=Enable debug output for entity graph write, includes printing of the current rate limit and the current remote queue size. Defaults to 0
net_entity_graph_write_debug_leak_override description=Force set the current rate limit to the provided value (in updates per second). Setting to a negative number will disable the behavior and allow natural rate limiting to continue. Defaults to -1.0f (Disabled)
net_entity_graph_write_expiry_interval description=The maximum amount of time a request can be in flight before entity graph will consider it invalid. Ideally this should be a smaller value than net_entity_graph_write_resend_interval so the message expires before we resend.
net_entity_graph_write_max_queued description=The maximum number of pending writes that can be queued for sending to an entity graph front end worker. Defaults to 100
net_entity_graph_write_per_entity_partition_keys description=0=Use the item root entity id as the partition key for persistent writes, !0=Use the entity id as the partition key for persistent writes.
net_entity_graph_write_rate_additive_increase description=The amount that is added to the write query speed as long as queries are going through successfully. Defaults to 15
net_entity_graph_write_rate_max_consumer_lag_seconds description=Maximum healthy consumer delay in seconds for entity graph mutations to sit in the message queue between entity graph's frontend and backend
net_entity_graph_write_rate_min_update_interval_seconds description=Minimum time in seconds that the DGS will attempt to update its send rate to entity graph
net_entity_graph_write_rate_multiplicative_decrease description=The amount the write rate will be decreased by when a problem is encountered. It must always be below one. Defaults to .8
net_entity_graph_write_resend_interval description=The amount of time a hierarchy update can be unacked before we'll attempt to resend.
net_entity_graph_write_sequence_debug_check_interval description=The amount of time in seconds the current hierarchy sequence will be checked to highlight if stows/buries are not moving. Set to 0 to disable tracking. Defaults to 120.0f
net_entity_graph_write_speed_blend description=The blend factor [0, 1] used in exponentially weighted moving average of actual write speed
net_entity_graph_write_use_mean_lag description=Whether or not the EG write rate limiter should make use of the aggregated lag or mean lag in rate limiting calculations. Defaults to 0(off)
net_entity_system_reset_wait description=Sets the period to wait for entity system reset in seconds
net_erase_OCHierarchy_egs_wait description=Sets the period to wait for the erasure of OCHierarchyData from Entity Graph Service in seconds
net_force_cet_crash_on_failure description=CigCritical on any CET failure
net_force_cet_failure_name description=Force CET failure of choice
net_force_remote_method_asserts_enabled description=1: Force enable remote method asserts on failure for all remote methods
net_force_stream_in_mission_entities description=Enable a hack making mission entities always streamed in on the DGS
net_force_write_messages description=Force adding all views to WriteMessages scheduler phase: 0 (default) = disabled, 1 = enabled
net_game_rules_create_wait description=Sets the period to wait for GameRules/GameMode to be created in seconds
net_game_rules_init_wait description=Sets the period to wait for game rules to finish initializing in seconds
net_game_rules_player_setup_wait description=Sets the period to wait for game rules to be have client ship selection after request sent in seconds
net_game_rules_spawn_wait description=Sets the period to wait for the game rules to spawn in seconds
net_game_rules_spawning_module_wait description=Sets the period to wait for the game rules spawning module to be ready in seconds
net_get_nametable_egs_wait description=Sets the period to wait for the retrieval of the Name Table from the Entity Graph Service in seconds
net_get_shard_info_wait description=Sets the period to wait for to get the shard from the Entity Graph Service in seconds
net_global_dynamic_scope_ids_wait description=Sets the period to wait for global dynamic scope Ids in seconds
net_heartbeat_clientSendRateSec description=Send rate for analytics events to track the health of the client network layer
net_init_entity_class_registry_wait description=Sets the period to wait while populating entity class registry in seconds
net_initial_OCHierarchyData_wait description=Sets the period to wait for initial OCHierarchyData from Entity Graph Service in seconds
net_lagCompensation_delayGrowthFactor description=Ratio to mix new and old predictor delay values when increasing the delay value
net_lagCompensation_delayShrinkFactor description=Ratio to mix new and old predictor delay values when decreasing the delay value
net_lagCompensation_enableDynamicAdjust description=If non-zero enables automatic dynamic adjustment of lag compensation at runtime
net_lagCompensation_enableSampleRateAdjust description=If non-zero uses measured update rate in lag compensation adjustment
net_lagCompensation_interpolationScheme description=Changes interpolation scheme. 4 - Quartic Bezier curve (position, velocities, initial acceleration); 3 - Cubic Bezier curve (positions, initial velocity and initial acceleration); 2 - Cubic Bezier curve (positions, velocities); 1 - Independent quadratic polynomial interpolation; 0 - Euler integration;
net_lagCompensation_maxDelayGrowthRate description=How much the delay can change per frame as a fraction of current frame elapsed time
net_lagCompensation_maxDelaySeconds description=The amount of extrapolation used by lag compensation will stop growing when a client's latency reaches this value. Clients will start to lag behind as latency increases beyond this value
net_lagCompensation_maxDelayShrinkRate description=How much the delay can change per frame as a fraction of current frame elapsed time
net_lagCompensation_maxExtrapolationParameter description=Maximum parametric value to be used for extrapolation before linear integration takes over
net_lagCompensation_minDelaySeconds description=Minimum latency added by lag compensation. Used to balance latencies across all clients. Clients with lower latencies will be delayed so their latency matches this value. Those with higher latencies will use extrapolation to compensate
net_lagCompensation_standardDeviationScale description=How many standard deviations to use when calculating how much lag to compensate. Gives some control over the probability of having to switch between interpolation and extrapolation
net_lagCompensation_staticDelaySeconds description=Time delay used by lag compensation in all cases when dynamic adjustment is disabled
net_lagCompensation_useInterpolationAcceleration description=(Enable/Disable) passing accelerations calculated from interpolation to physics.
net_max_OCHierarchyData_retry_backoff_seconds description=Sets the maximum back-off period for requesting OC hierarchy data after a transient failure
net_max_wait_for_incoming_connection description=Number of seconds before the server will give up on an incoming connection
net_nametable_submit_egs_wait description=Sets the period to wait for Name Tables to be submitted to Entity Graph in seconds
net_offline_entitlement_player_wait description=Sets the period to wait for the offline entitlement of the player in seconds
net_packet_analytics_max_ranks description=Max ranks to include in packet analytics
net_packet_analytics_update_interval description=Update interval (in seconds) for packet analytics
net_player_data_query_wait description=Sets the period to wait for the player data query to complete in seconds
net_player_init_spawn_wait description=Sets the period to wait for the player to be initialized after spawn in seconds
net_player_location_update_wait description=Sets the period to wait for the player location to update in seconds
net_player_session_manager_wait description=Sets the period to wait for player session manager to be ready in seconds
net_player_spawn_wait description=Sets the period to wait for the player to spawn in seconds
net_player_unstow_stow_cross_shard_wait description=Sets the period to wait before we attempt to perform a cross shard stow in seconds. Setting to zero will disable the feature
net_player_unstow_wait description=Sets the period to wait for the player to unstow in seconds
net_predicted_zone_transition_cooldown description=Time after a zone change before a predicted zone transition can be made, this helps reduces bouncing between zones when extrapolating.
net_print description=Enable/Disable NET_PRINT().
net_properties_epsilon_position description=Distance in meters below which position differences will be ignored
net_properties_epsilon_radians description=Angle in radians below which orientation differences will be ignored
net_properties_epsilon_radius description=Radius changes in meters below which streaming group radius differences will be ignored
net_properties_epsilon_scale description=Unitless difference in scale factor below which scale differences will be ignored
net_query_entity_class_registry_wait description=Sets the period to wait for entity class service query to complete in seconds
net_register_OCHierarchyData_wait description=Sets the period to wait for OCHierarchyData to be registered with the engine in seconds
net_seeding_process_wait description=Sets the period to wait for the seeding process to complete in seconds
net_serialized_variable_invalid_write_check description=0: Disable invalid write check, 1: Report invalid writes as a code_failure, 2: Report invalid writes as a cigError, >=3: Report invalid writes as a cigCritical
net_server_clock_wait description=Sets the period to wait for the server clock in seconds
net_shard_activate_wait description=Sets the period to wait for shard activation to complete in seconds
net_shard_info_wait description=Sets the period to wait for the shard information in seconds
net_sim_recv description=Set net_sim_recv_xxxx cvars according to a profile in the XML file given by net_sim_loadprofiles
net_sim_recv_bandwidth_limit description=Bandwidth limit on recv (bits per second)
net_sim_recv_bandwidth_max_delay description=Maximum delay on recv caused by bandwidth limit before packet loss (seconds)
net_sim_recv_lag_cycle description=How long a simulated latency generation cycle lasts on recv (number of packets)
net_sim_recv_lag_max description=Maximum simulated latency on recv (ms)
net_sim_recv_lag_min description=Minimum simulated latency on recv (ms)
net_sim_recv_lag_mode description=Mode for generating simulated latency on recv
0=constant
1=square
2=rising ramp
3=falling ramp
4=sine wave
5=uniform random
6=normal random
7=lognormal random
net_sim_recv_loss_burst description=Average simulated packet loss burst length on recv (number of packets)
net_sim_recv_loss_rate description=Target simulated packet loss (%)
net_sim_send description=Set net_sim_send_xxxx cvars according to a profile in the XML file given by net_sim_loadprofiles
net_sim_send_bandwidth_limit description=Bandwidth limit on send (bits per second)
net_sim_send_bandwidth_max_delay description=Maximum delay on send caused by bandwidth limit before packet loss (seconds)
net_sim_send_lag_cycle description=How long a simulated latency generation cycle lasts on send (number of packets)
net_sim_send_lag_max description=Maximum simulated latency on send (ms)
net_sim_send_lag_min description=Minimum simulated latency on send (ms)
net_sim_send_lag_mode description=Mode for generating simulated latency on send
0=constant
1=square
2=rising ramp
3=falling ramp
4=sine wave
5=uniform random
6=normal random
7=lognormal random
net_sim_send_loss_burst description=Average simulated packet loss burst length on send (number of packets)
net_sim_send_loss_rate description=Target simulated packet loss (%)
net_sim_send_wouldblock_bandwidth description=Bandwidth at which the simulated socket send buffer is drained (bits per second)
net_sim_send_wouldblock_bytes description=Maximum size of the simulated socket send buffer (bytes)
net_solar_system_wait_seconds description=Sets the period to wait for the solar system entities to to exist in seconds
net_stow_shard_eg_wait description=Sets the period to wait for stowing the shard on the Entity Graph in seconds
net_streamable_entities_wait description=Sets the period to wait for streamable entities in seconds
net_streaming_radius_default description=Default streaming radius for streaming group roots in meters
net_territory_assignment_wait_seconds description=Sets the period to wait for territory assignment in seconds
net_thread_tick_milliseconds description=Time between successive locked updates on the network thread
net_tokens_assume_authority_owner description=0: EPreferredTokenOwner::Authority tokens will be granted by the replicant during bind, Nonzero: EPreferredTokenOwner::Authority tokens will be granted on the authority upon registration -- DO NOT USE WITH MULTIPLE GAME SERVERS
net_tutorial_mission_entity_spawned_wait description=Sets the period to wait for the mission entity to be ready in seconds
net_unstreamable_binds_group_size description=Minimum number of unstreamable entities to group together in a single bind
net_unstreamable_binds_timeslice description=Timeslice duration in seconds for ViewBindSolarSystemUnstreamables to spread workload across multiple frames
net_use_persistent_instanced_interior_spawning description=When players want to spawn in their home location, setting this CVar allows the spawn process to find and unstow an instanced interior which the player owns, and unstow the player within it.
net_use_persistent_spawning description=Whether to use persistent spawning when unstowing players: They will use spawn state from snapshot instead of working it out in game code.
net_variable_service_reply_wait description=Sets the period to wait for variable service to reply in seconds
net_variable_service_wait description=Sets the period to wait for variable service in seconds
net_vehicle_persistence_query_wait description=Sets the period to wait for vehicle persistence streaming query to complete in seconds
net_vehicle_streaming_query_wait description=Sets the period to wait for vehicle streaming query in seconds
net_view_create_player_bubble_wait description=Sets the period to wait for the player's bubble to be created
net_view_grant_player_owned_tokens_wait_seconds description=Sets the period for the replicant to wait to assign player-owned tokens in seconds
net_view_max_location_resolve_backoff_seconds description=That maximum amount of time, in seconds, between player location resolution requests during login
net_view_solar_system_init_wait_seconds description=Sets the period to wait for the solar system entities to initialize in seconds
network.server.mesh.connect.to.hybrid description=Should the DGS connect to the hybrid
network.server.mesh.enable.server.crash.recovery description=If disabled the hybrid will quit when a remote server is disconnected
network.server.mesh.game.advertised.address description=Set the address that this instance will advertise as accepting game connections on
network.server.mesh.game.bind.address description=Set the game bind address that this instance will accept connections on
network.server.mesh.game.bind.port description=Set game port to bind to
network.server.mesh.game.bind.sockets description=Set the number of game ports to bind sockets to
network.server.mesh.service.advertised.address description=Set the address that this instance will advertise as accepting service connections on
network.server.mesh.service.bind.address description=Set the service bind address that this instance will accept connections on
network.server.mesh.service.bind.port description=Set service port to bind to
network.server.mesh.service.bind.sockets description=Set the number of service ports to bind sockets to
network.territories.default.config.file description=File path under system.startup.product.config.path containing the default territories distribution to load
network.territories.isolate.solar.systems description=Force DGSs to manage territories from only one solar system at a time
network.territories.use.static.assignment description=Assign territories only to DGSs that are starting up fresh
open_url description=
p_ActorClothInspector description=Opens an Imgui window to debug and tweak cloth attached to actors.
p_CapsuleVerticalAdjustmentSpeed description=Capsule vertical speed in meters per seconds.
p_GEB_max_cells description=Specifies the cell number threshold after which GetEntitiesInBox aborts
p_GEB_warn_cells description=Specifies the cell number threshold after which GetEntitiesInBox issues a warning
p_LCPCG_divergence_threshold description=LCPCG solver divergence threshold - limits beta to 1/threshold (1000) when residuals grow beyond threshold ratio to prevent runaway conjugate directions
p_LCPCG_zero_threshold description=LCPCG solver zero threshold for preventing division by zero operations
p_LCPStage_instrumentation description=Enable LCP solver stage instrumentation and diagnostic counters (0=off, 1=on)
p_MC_improvement description=Defines a required residual squared length improvement, in fractions of 1
p_OverrideCurrentPlanet description=If called with an argument, it will override it for the atmospheric rendering 
Usage: p_OverrideCurrentPlanet [PLANET_NAME]
p_RWI_log description=Enables RayWorldIntersection call logging
p_RWI_max_len description=Specifies the length threshold for ray lengths after which RayWorldIntersection aborts
p_RWI_warn_len description=Specifies the length threshold for ray lengths after which RayWorldIntersection issues a warning
p_accumulate_masses_in_grids description=Add the masses of rigid entities in the grid to the host mass (0/1): 0 -- disabled, 1 -- enabled
p_accuracy_LCPCG description=Desired accuracy of LCP CG solver (velocity-related, m/s)
p_accuracy_LCPCG_no_improvement description=Required LCP CG accuracy that allows to stop if there was no improvement after p_max_LCPCG_fruitless_iters
p_accuracy_MC description=Desired accuracy of microcontact solver (velocity-related, m/s)
p_actor.groundAlign.minHit description=The smallest number of ground-trace hit required to mark the current surface as safe-to-stand for an actor.
p_actor_capsule_push_up_check description=Enables the additional sphere sweep checks in actorentity, to stop the actor capsule being pushed into ceilings. 0 -- disabled, 1 -- enabled (default)
p_actor_gravity_adjustment description=Gravity adjustment for character handling (float b/w 0 and 1): 0 -- no adjustment, 1 -- the character always behaves like in Earth gravity.
p_actor_inertia_mode description=Enables new inertia calculation, so inertia is less affected by frame time: 0 -- disabled, 1 -- enabled (default)
p_adaptive_substeps description=If slow frames are detected, adaptively decreases the number of substeps in the range [1, p_max_substeps].
Usage: p_max_substeps [0|1]

p_ae_prevent_damping_reduction_in_pile description=When in CArticulatedEntity::Update() a contact is detected that indicates that the AE is below another island entity then we don't apply the damping reduction for another contact of the same AE that implies that a limb of the AE is above another island entity. Default 1
p_ae_use_fixed_damping_in_pile description=When in CArticulatedEntity::Update() a contact is detected that indicates that the AE is below another island entity the flag pef_fixed_damping is set onto the AE ensuring that the damping value defined by the AE is used for the whole simulation island unless there is a different entity in the island encountered earlier carrying that flag. The flag is removed either if the AE is not below another RE/AE during the next Update() call or at the end of the call if the AE fell asleep. . Default 1
p_apply_rigid_gforces description=Calculate the and apply the GForce for each RigidEntity every frame (0/1): 0 -- disabled, 1 -- enabled
p_approx_caps_len description=Breakable trees are approximated with capsules of this length (0 disables approximation)
p_articulated_part_warning_threshold description=Prints a warning into the log when adding more parts to an articulated entity than the threshold. Default: 0 (disabled)

p_break_on_fences_stuck_in_deletion description=If set to >0, will debugbreak if a fence is stuck in the deletion queue
p_break_on_validation description=Toggles break on validation error.
Usage: p_break_on_validation [0/1]
Default is 0 (off). Issues DebugBreak() call in case of
a physics parameter validation error.
p_breakability_draw_failed_patches description=Draw the parts of a cluster that should have a contact patch but has failed to find one. Used with p_draw_helpers srR_M. Default off

p_breakability_golden_gun description=Breaks breakable parts off with a single shot. Default off

p_breakability_impact_scale description=Scales the impulses transferred to the broken off chunks from prior impacts

p_calculate_actor_gforces description=Calculate the local GForce for each ActorEntity every frame (0/1): 0 -- disabled, 1 -- enabled
p_check_out_of_bounds description=Check for physics entities outside world (terrain) grid:
1 - Enable raycasts; 2 - Enable proximity checks; 3 - Both
p_cleanup_grids_in_mainthread description=Enables / Disables (1/0) the cleanup code to be executed on the mainthread (outside of physical timestep). (default is on) 
p_cleanup_grids_on_demand description=Enables / Disables (1/0) the cleanup code to be executed only on grids that were marked dirty by repositioning an entity. (default is on) 
p_collision_mode description=This variable is obsolete.
p_command_queue_gui description=Open up an imgui window to inspect dumped command queues. 0/1: Disable/Enabled.
p_complain_about_duplicate_unqiue_ids description=Complain (e.g fire asserts) when duplicate unique ids are encountered. Default: 1

p_constraint_compliance description=Constraint compliance (regularization)
p_constraint_damping_rate description=Contraint damping rate
p_constraint_sandwich_teleport_delay description=The number of (sub)steps that a constraint sandwich needs to be present to trigger a teleport (default 32)
p_constraint_sandwich_teleport_drift_threshold description=The threshold over which the positional drift has to be after which sandwich detection is triggered (default 10 cm)
p_cosserat_step_min_iterations description=The minumum number of iterations cosserat rods will perform during a step

p_cull_distance description=Culling distance for physics helpers rendering
p_cyclic_ent_grid description=Turns on / off (1/0) the cyclical physics entity grid. (default is off) 
p_damping_group_size description=Sets contacting objects group size
before group damping is used.Usage: p_damping_group_size 3
Used for internal tweaking only.
p_damping_zerog description=Default damping in zerog for rigids.
Default is 0.154321 (on). Should be set in the system.cfg / user.cfg.
p_debug_draw_actor_ray_shapes description=Debug draws the results of raycasts used by actorentity to determine ground shape. 0 -- disabled (default), 1 -- enabled
p_debug_draw_sdf_set_idx description=the index of the sdf set to draw (default 0)
p_debug_draw_sdf_set_resolution description=the resolution for the sdf set debug drawing remeshing - [default 128, max 512, min 8]
p_debug_draw_sdf_sets description=toggles between debug drawing individual fields (0) and entire sets (1) - [default 1]
p_debug_explosions description=Turns on explosions debug mode
p_debug_fields description=Enable additional helpers when drawing fields (0/1/2): 0 -- disabled (default), 1 -- draw full gradients, 2 -- draw boundary points
p_debug_isovalue description=isovalue to override debug rendering with (must be used in conjunction with p_override_isovalue)
p_debug_joints description=If set, breakable objects will log tensions at the weakest spots
p_debug_raytrace description=Enables physical debug raytracing
p_debug_rendering_cache_ordered_meshes description=Enables/Disables caching of debug geometry for ordered meshes (default 1) 
p_debug_rendering_scale description=Sets a scale that is applied to all physics debug rendering 
p_debug_shockwaves description=Turns on shockwaves debug visualization
p_defer_terrain_physicalization description=Setting to 1 will defer all on-demand terrain physicalization requests to happen outside of the timestep
p_disable_terrain_physicalization description=Setting to 1 will disable all on-demand terrain physicalization
p_distance_field_penetration_checks_mode description=Uses distance fields for deep penetration checks: 0 -- disabled, 1 -- enabled, use support mesh, 2 -- enabled, use an implicit octree
p_distance_field_penetration_implicit_octree_node_inflation description=Scale value to inflate the leaf nodes of the implicit octree during field penetration testing, default 4.0, mininum 1.0
p_distance_field_penetration_type_mask description=Determines which entity types can use distance fields for deep penetration checks. See PE_TYPE for descriptions. Default are rigids
p_distance_field_penetration_types description=Usage [Entity_Types]
Entity Types:
R - rigid
A - articulated
S - spaceships
W - wheeled vehicles
H - hover vehiclesExample: p_distance_field_penetration_types RA - rigids and articulated use collision detection with sdfs
p_distance_rejection_checks description=if suitable sdfs present, use these as an additional rejection test before the midphase during collision detection .
Usage: p_distance_rejection_checks [0/1]
p_do_step description=Steps physics system forward when in single step mode.
Usage: p_do_step 1
Default is 0 (off). Each 'p_do_step 1' instruction allows
the physics system to advance a single step.
p_drag_mode description=Drag mode of bullet: 0 -- disabled, 1 -- force proportional to velocity, 2 -- force proportional to square of velocity
p_draw_collision_history description=Draws a history of collisions around the current player or his vehicle
p_draw_collision_history_size description=Set size of history of collisions around the current player or his vehicle
p_draw_grid description=Toggles display of the grid [0 off(default), 1 draw boxes, 2 draw optimization fields]

p_draw_helpers description=Usage [Entity_Types]_[Helper_Types] - [t|s|r|R|l|i|g|a|y|e]_[g|c|b|l|t(#)]
Entity Types:
t - show terrain
s - show static entities
r - show sleeping rigid bodies
R - show active rigid bodies
l - show living entities
i - show independent entities
g - show triggers
a - show areas
w - show waterman
y - show rays in RayWorldIntersection
p - show projectile paths in projectile manager
e - show explosion occlusion maps
Helper Types
g - show geometry
m - show clustermeshes
c - show contact points
b - show bounding boxes
B - show local space OBB of entity
E - show local space OBB of only colliding parts of entity
l - show tetrahedra lattices for breakable objects
j - show structural joints (will force translucency on the main geometry)
J - show (articulated) tapered capsules
v - show distance fields (if present)
s - show self colliding joints
i - show interior grid visualization (if present)
e - show surfel visualization (if distance fields present)
p - show cluster mesh patches
M - show contact patches of breakable clusters
n - show face normals of meshes
N - show vertex normals of meshes (if present)
o - show local part bounds
O - show part bounds in grid space
q - show quantum obstacle field geometry
C - show the interpolated rigid transforms during continuous rwi checks
a - show contact area 
W - show contact borders 
R - show spawn boxes
P - show suspension info. The colour depicts how long the spring is, blue is fully relaxed, red is fully compressed. The larger cylinder is the rest-length, anything larger than that will be extended with a smaller piston visually
d - show desired state sent from authoritative server that should be matched by this client 
t(#) - show bounding volume trees up to the level #
f(#) - only show geometries with this bit flag set (multiple f's stack)
Example: p_draw_helpers larRis_g - show geometry for static, sleeping, active, independent entities and areas
p_draw_helpers_cache_time description=Specifies for how long we cache the debug geometries.
p_draw_helpers_gpu description=Enables rendering of physics helpers on GPU
p_draw_helpers_mode description=Determines when draw helpers is executed [0 before queue processing, 1 after queue processing, >1 post step] (default = 1)
p_draw_potential_colliders description=Draws all potential colliders around the current player
p_dump_factory_stats description=If set to >0, dumps factory stats to the log every n minutes (default: 0). 0 disables factory stats dumping
p_dump_heavy_entities description=Enables debug dumping of additional information of heavy entities. Default: 0
value == 0: disabled
value & 1 : print the number of colliders and their names
value & 2 : print the number of contacts and their positions

p_dump_instance_counts description=If set to >0, dumps instance counts to the log every n minutes (default: 5). 0 disables instance count dumping
p_dump_vvg_stats description=If set to >0, dumps vvg stats to log
p_editor_physics_state_serialization description=Enables/Disables the state serialization of all physical entities types in editor (default 0)
p_enable_accurate_FFT description=Enable Accurate FFT Wave Scaling based on ocean depth [1 - enable, 0 - disable]
p_enable_actor_breadcrumbs description=Whether to record actor breadcrumbs
p_enable_constraint_sandwich_teleport description=Enables constraint teleports if a 3rdparty collider is found between positional constraints (default: enabled)
p_enable_entity_scale description=Enables/Disables the global entity scale of static entities to improve container sharing (default 0)
p_enable_integrity description=Enable integrity calculations (0 -- disabled [default], 1 -- enabled)
p_enable_island_preprocessing description=Enables rigid island preprocessing by allow island-level GEA query and broad-phase collision detection
p_enable_physical_quantum_travel description=Enables physical quantum traveling [WIP]
p_enable_ricochet description=Ricochet of bullets (0/1): 0 -- disabled, 1 -- enabled
p_enable_rigid_timeout description=Enable rigids to be forcefully timeouted if they are far away from the camera (s42 only)
p_enable_single_ent_islands_batched description=Optimization for rigid entity island stepping. If enabled, single entity islands are gathered in batches and one thread processes a batch. Default = 0.
p_enable_tapered_capsules description=Enable support for tapered capsules (a.k.a bispheres) on articulated entities. Default: 0

p_enable_terrain_collision description=Enable collisions against terrain height maps. [1 - enable, 0 - disable]
p_enforce_contacts description=This variable is obsolete.
p_ent_grid_use_obb description=Whether to use OBBs rather than AABBs for the entity grid setup for brushes
p_entity_snapshot description=creates a snapshot of all physical entities and diffs it against the last.
useful to help find physical entities that leak
p_fatal_on_breakable_cluster_unique_id_clashes description=If != 0 will cause a fatal error if there clusters with duplicate unique ids

p_fatal_on_breakable_cluster_unreachable_clusters description=If != 0 will cause a fatal error if there are unreachable breakable clusters

p_fence_max_destruction_rounds description=If set to >0, the maximum number of times a fence may reside in destruction queue before getting forcefully deleted 
p_filter_grids description=Enable filtering drawn phys entities by their grids
p_filter_poststep_events description=if set to >0 will not post poststep events if the position or orientation of the entity hasn't changed
p_fixed_timestep description=Toggles fixed time step mode and defines the size of the fixed step in seconds.Usage: p_fixed_timestep [float]
Default is 0 (off). When set to 0, the time step is variable, based on the frame rate.
Forces fixed time step when setting a value > 0.

p_fixup_spawn_bloopers description=If spaceships enable themselves, this will 
  1: report an error if the current position is in deep penetration (and keeps the entity disabled)
  2: will teleport the ship to a free location in the immediate surroundings
Default is 2 (zonk em around).
p_fly_mode description=Toggles fly mode.
Usage: p_fly_mode [0/1]
p_foliage_collide_against_hosted_articulated description=Enables/Disables foliage rope instance collisions with hosted articulated entities.
p_force_sync description=Forces main thread to wait on physics if not completed in time
p_grid_max_nodes_to_sort description=If set to >0, depicts the number of nodes the spatial grids are allowed to sort per timestep (default: 4). 0 disables sorting
p_grid_portals_transition_mode description=If set to >0, any active grid portals will take precedence over any grid overlap tests. If set to >1 then crossing a grid portal will evict/enter the grid, but additional overlap checks with prims/bitvoxel/fields are performed as well
p_group_damping description=Toggles damping for object groups.
Usage: p_group_damping [0/1]
Default is 1 (on). Used for internal tweaking only.
p_ignore_gravityareas_when_inheriting description=If enabled, gravity areas inside the physics grid will be ignored when the physics grid is inheriting gravity
p_impulse_scale description=Global scale factor that translates shed energy to integrity loss.
p_inspect description=Enables inspection of physical entities
p_joint_damage_accum description=Default fraction of damage (tension) accumulated on a breakable joint
p_joint_damage_accum_threshold description=Default damage threshold (0..1) for p_joint_damage_accum
p_joint_gravity_step description=Time step used for gravity in breakable joints (larger = stronger gravity effects)
p_jump_to_profile_ent description=Move the local player next to the corresponding entity in the p_profile==2 entities list and copy its worldspace coordinates to the clipboard.
p_large_map_grid_cell_size description=Size of cell in physical entity grid for very large maps (read: space)
p_lattice_max_iters description=Limits the number of iterations of lattice tension solver
p_limit_simple_solver_energy description=Specifies whether the energy added by the simple solver is limited (0 or 1)
p_limit_solver_energy description=Specifies whether the energy added by the constraint solver is limited (0 or 1). Default: 1
p_list_active_objects description=
p_living_group_processing_method description=Produces and processes living groups (0) separately or (1) simultaneously. Default 1
p_log_grid_mass_changes description=log changes of grid masses due to rigids being added/removed/being updated (0/1): 0 -- disabled, 1 -- enabled
p_log_integrity_loss description=Log integrity loss caused by collisions, bitmask. 1 -- integrity loss, 2 -- penetration depth, 4 -- friction, 8 -- collision normal, 16 -- relative normal velocity, 32 -- normal impulse
p_log_large_unprojection_contacts description=Logs additional info for large unprojection contacts if > 0 or breaks on the server if set to 2. Default 2
p_log_lattice_tension description=If set, breakable objects will log tensions at the weakest spots
p_max_LCPCG_alpha description=LCPCG solver maximum step size limit (default: 50 - consider 10.0 for ill-conditioned systems)
p_max_LCPCG_contacts description=Maximum number of contacts that LCPCG solver is allowed to handle
p_max_LCPCG_fruitless_iters description=Maximum number of LCP CG iterations w/o improvement (defined by p_min_LCPCGimprovement)
p_max_LCPCG_iters description=Maximum number of LCP CG iterations
p_max_LCPCG_microiters description=Limits the total number of per-contact iterations during one LCP CG iteration
(number of microiters = number of subiters * number of contacts)
p_max_LCPCG_microiters_final description=Same as p_max_LCPCG_microiters, but for the final LCP CG iteration
p_max_LCPCG_subiters description=Limits the number of LCP CG solver inner iterations (should be of the order of the number of contacts)
p_max_LCPCG_subiters_final description=Limits the number of LCP CG solver inner iterations during the final iteration (should be of the order of the number of contacts)
p_max_MC_iters description=Specifies the maximum number of microcontact solver iterations *per contact*
p_max_MC_mass_ratio description=Maximum mass ratio between objects in an island that MC solver is considered safe to handle
p_max_MC_vel description=Maximum object velocity in an island that MC solver is considered safe to handle
p_max_PreCG_contacts description=Maximum number of contacts that PreCG solver is allowed to handle
p_max_angular_velocity description=Clamps physicalized objects' angular velocities to this maximum value
p_max_approx_caps description=Maximum number of capsule approximation levels for breakable trees
p_max_bone_velocity description=Clamps character bone velocities estimated from animations
p_max_contact_gap description=Sets the gap, enforced whenever possible, between
contacting physical objects.Usage: p_max_contact_gap 0.01
This variable is used for internal tweaking only.
p_max_contact_gap_player description=Sets the safe contact gap for player collisions with
the physical environment.Usage: p_max_contact_gap_player 0.01
This variable is used for internal tweaking only.
p_max_contact_gap_simple description=Specifies the maximum contact gap for objects that use the simple solver
p_max_contacts description=Maximum contact number, after which contact reduction mode is activated
p_max_debris_mass description=Broken pieces with mass<=this limit use debris collision settings
p_max_entity_cells description=Limits the number of entity grid cells an entity can occupy
p_max_gforce_delta description=One frame gforce changes above that value will be reported as collision gforce.
p_max_object_splashes description=Specifies how many splash events one entity is allowed to generate
p_max_plane_contacts description=Maximum number of contacts lying in one plane between two rigid bodies
(the system tries to remove the least important contacts to get to this value)
p_max_plane_contacts_distress description=Same as p_max_plane_contacts, but is effective if total number of contacts is above p_max_contacts
p_max_player_velocity description=Clamps players' velocities to this value
p_max_player_velocity_debugbreak description=The number that DEBUG_VALIDATE_VELOCITY on PE_ARTICULATED / PE_ACTORS will throw an exception
p_max_substeps description=Limits the number of substeps allowed in variable time step mode.
Usage: p_max_substeps 5
Objects that are not allowed to perform time steps
beyond some value make several substeps.
p_max_substeps_large_group description=Limits the number of substeps large groups of objects can make
p_max_timestep description=Sets the maximum physics time step size in seconds.Usage: p_max_timestep [float]
Forces the physics timestep to be no larger than p_max_timestep.

p_max_unproj_vel description=Limits the maximum unprojection velocity request
p_max_velocity description=Clamps physicalized objects' velocities to this value
p_max_velocity_from_explosions description=Clamps velocities resulting from explosions to this value (set to -1 to disable)
p_min_LCPCG_improvement description=Defines a required residual squared length improvement, in fractions of 1
p_min_MC_conv_test_iters description=Specifies the minimum number of microcontact solver iterations *per contact set* after which the convergence test is performed during each iteration and might stop the iterations if it encounters no improvement (relates to p_MC_improvement). The test can be disabled by setting this cvar to zero.
p_min_MC_iters description=Specifies the minmum number of microcontact solver iterations *per contact set* (this has precedence over p_max_mc_iters)
p_min_awake_time description=The minimum time a rigid stays awake.
p_min_grid_cell_size description=Min size of cell in physical entity grid
p_min_send_time description=Sets a minimum send time for rigid entity updates (it has to send at least this often).  A value less than zero means 'ignore this'.
p_min_separation_speed description=Used a threshold in some places (namely, to determine when a particle
goes to rest, and a sliding condition in microcontact solver)
p_net_debug_action_authority description=Log attempted violations of physics authority.
p_net_early_apply description=1 - Update replication before simulation. 0 - Apply replication after simulation
p_net_fix_time description=time that interpolation takes to fix replication error
p_net_interp description=The amount of time which the client will lag behind received packet updates. High values result in smoother movement but introduces additional lag as a trade-off.
p_net_optimize_attached description=1 - don't send physics data for attached entities, 0 - send physics data for attached entities
p_net_pos_d_factor description=D gain for position convergence controller.
p_net_pos_dist_scale description=Scales position correction strength with position error. When error is 0 strength is 1. When error is p_net_pos_snap_distance strength is equal to this cvar value.
p_net_pos_i_factor description=I gain for position convergence controller.
p_net_pos_p_factor description=P gain for position convergence controller.
p_net_pos_snap_distance description=Maximum distance that object can drift from network replicated position before it is snapped to network position
p_net_relax_factor description=During relaxation period, interpolate between factor and 1
p_net_relax_time description=Time that PID controller takes to get back to full strength after collision/(extrapolation->interpolation switch)
p_net_rot_d_factor description=D gain for rotation convergence controller.
p_net_rot_dist_scale description=Scales rotation correction strength with rotation error. When error is 0 strength is 1. When error is p_net_rot_snap_distance strength is equal to this cvar value.
p_net_rot_i_factor description=I gain for rotation convergence controller.
p_net_rot_p_factor description=P gain for rotation convergence controller.
p_net_rot_snap_distance description=Maximum angle that object can drift from network replicated rotation before it is snapped to network rotation
p_net_state_max_age description=maximum age to consider network interpolation data valid
p_net_use_pid description=Use PID for convergence between predicted and local state.
p_net_use_predictors description=1 - Use predictors to update physics entity. 0 - Use raw replicated state to update entity
p_netsync_config_window description=Opens an Imgui window to configure values used by netcode.
p_new_breakable_system description=Enables/Disables the new breakable system
p_no_friction description=Disable friction on rigid contacts (0/1): 0 -- enabled (default), 1 -- disabled
p_num_bodies_large_group description=Group size to be used with p_max_substeps_large_group, in bodies
p_num_jobs description=Specifies the number of jobs for phys.sim.(used by phys job simulation mode)
p_num_startup_overload_checks description=For this many frames after loading a level, check if the physics gets overloaded and freezes non-player physicalized objects that are slow enough
p_override_isovalue description=if 1 use the cvar 'p_debug_isovalue' as an isovalue for rendering, if 2 animate between -p_debug_isovalue to +p_debug_isovalue, 0 disable
p_override_max_time_substep description=Set maximal substep duration of all entities to the given value.
p_params_collect_callstack description=Enables the collection of a call stack when commands are queued in physics. Default: 1/0 - depends on physics debug validation
p_params_validation description=Toggles break on validation error.
Usage: p_params_validation [0/1]
Default is 1 (enabled). 
Issues DebugBreak() call in case of a physics parameter validation error.
p_params_validation_ae_joints_offsets_level description=Triggers the ae joint offset validation based on a level.
Usage: p_params_validation_ae_joints_offsets_level x
		0 (disabled) 
		1 (coarse) 
		2 (fine-grained) 
Default is 1 (enabled). 
Issues DebugBreak() call in case of too large ae joint offsets.
p_parse_command_queues description=Dump and load command queues this frame.
0: Disabled
1: Dump command queues when DebugValidateParams fails
2: Dump parsed command queues

p_penalty_scale description=Scales the penalty impulse for objects that use the simple solver
p_physical_properties description=AddGeometry uses the density and thickness of the assigned physical material to determine the physics part mass
p_plasticity_power description=Exponent of plasticity multiplier in integrity loss calculation.
p_player_draw_colliding_geom description=Draw the affected physical geometry of the player when intersecting with other objects. Only drawn when physics helper rendeirng is enabled.
p_player_draw_ground_collider_finders description=Draw the geometry for the ground-collider finder(s).
p_player_extremity_unprojection_rate description=Rate at which collisions with the extremities will push you out of the collider.
p_player_geom_scale description=Scale size for living entity geometry.
p_players_can_break description=Whether living entities are allowed to break static objects with breakable joints
p_pod_extents_clamp description=Length in metres for which pod is to be performed around a query (0 == disable clamping)
p_pod_instance_clamp description=number of pod instances allowed to be created per patch (<0 == disable instance clamping)
p_preallocate_thread_local_data description=Preallocates thread local data on engine startup to prevent spurious large allocation at runtime (enabled by default on shipping
p_print_articulated_parts description=prints the average and peak number of parts on articulated entities.
p_profile description=Enables group profiling of physical entities
p_profile_island_metrics description=Enables recording of rigid entity island profiling metrics.
p_profile_moving_average description=The number of frames for the (approx. exponential) moving average during profiling
p_profile_name description=substring to added the profile dump (./p_profile_XXX.csv)
p_profile_plot_max_frames description=The number of frames for phys profile plots
p_profile_toplevel_metrics description=Enables top level profiling info to be sent to metrics dashboard.
p_profile_use_detailed_tags description=Add additional tags to functions when capturing a cigProfile. Warning: May cause profiler to use a lot of memory!
p_prohibit_unprojection description=This variable is obsolete.
p_projectile_grid_sampling_mode description=Switches between different modes for sampling projectile hits on embedded grids overlapping the projectiles path in its current grid. Default: 0
0: When getting a hit during the time step with semi-continuous collision detection. Record the time and do collision detection in overlapped grids with this time
1: Do collision detection for overlapped grids with the grid transformation at the end of the time step and perform semi-CCD inside the grid. (Behavior before BUG-50118)

p_proxy_highlight_range description=Physics proxies with triangle counts >= p_proxy_highlight_threshold+p_proxy_highlight_range will get the maximum highlight
p_proxy_highlight_threshold description=Physics proxies with triangle counts large than this will be highlighted
p_queue_reposition description=Enables / Disables (1/0) the deferred processing of reposition requests. (default is on) 
p_ray_fadeout description=Fade-out time for ray physics helpers
p_ray_peak_time description=Rays that take longer then this (in ms) will use different color
p_remesh_interior_grids description=If set to 1, will extract a debug mesh to visualize the extents of an interior grid (NEEDS RESTART!), if set to 2, will extract a debug mesh of any bitvoxels in view if necessary
p_report_metrics_interval description=If set to >0, reports to metrics subsystem every X seconds (default: 15). 0 disables physics metrics reports
p_rigid_body_integration_method description=Integration method for rigid bodies (default=1): 0 -endpoint(rectangle), 1 -midpoint(trapezoid)
p_rigid_cost_event_moving_average_window description=Window size used to smooth rigid entity cost reporting with a moving average 
p_rigid_cost_event_threshold description=Emit a phys event if the rigid entity step function costs more than this threshold. Unit is ms
p_rigid_gforce_scale description=Scale the calculated rigid gforce impulse by this factor before applying.
p_rigid_gforce_threshold description=Only apply rigid GForce if the root velocity change exceeds this threshold.
p_rope_approximate_local_extents_from_bbox description=Switches between the approximation of the local extents from the bounding box(1) or the approximation of the bounding box from local extents(0). Default: 1
p_rope_collider_size_limit description=Disables rope collisions with meshes having more triangles than this (0-skip the check)
p_rope_exact_extents_point_limit description=Limit on the number of rope points at which the local extents are approximated from the bounding box of the rope. Default: 9
p_rope_subdivided_tied_elastic_elongation_limit description=Limits the elastic elongation as a factor of the base length of subdivided ropes that are tied at both ends to an entity. (A value of 1 disables elongation; Default: 10)
p_rope_subdivided_tied_length_limit description=Limits the length in meters of subdivided ropes that are tied at both ends to an entity. Default 100
p_rotational_velocity_damping_factor description=If in [0,1) and p_rotational_velocity_damping_threshold is violated will reduce the rotational velocity to a fraction of the current velocity after one second, e.g. for a value of 0.5f and rotational velocity of 600 revolutions/s the resulting velocity will be 300/s after one second. 

p_rotational_velocity_damping_threshold description=If non-negative additional damping will be applied to the rotational velocity of rigid bodies if it is higher than the CVAR's value. The value is revolutions per second. The damping value is defined by p_rotational_velocity_damping_factor

p_rwi_break_at_length description=Throws error if length of ray (in meters) in rwi exceeds given length. Set to 0 to disable.
p_send_time_variance description=Alters up the minimum send time after each send by this plus or minus this amount so things don't always send on the same frame
p_show_thread_profile description=Enables the display of the physics thread profile summary
p_single_ent_thread_batchsize description= Max amount of single entity islands that are processed by one thread. Applicable only when p_enable_single_ent_islands_batched = 1 and should be > 0. Default = 100.
p_single_step_mode description=Toggles physics system 'single step' mode.Usage: p_single_step_mode [0/1]
Default is 0 (off). Set to 1 to switch physics system (except
players) to single step mode. Each step must be explicitly
requested with a 'p_do_step' instruction.
p_skip_redundant_colldet description=Specifies whether to skip further collision checks between two convex objects using the simple solver
when they have enough contacts between them
p_sleep description=Sleep X ms inside step of the physics world to simulate increased load - base value
p_sleep_deviation description=Random addition of up to X ms to the base sleep value
p_softex_collide_against_hosted_articulated description=Enables/Disables softex instances collisions with hosted articulated entities. If set to 2 will include both actor and articulated
p_softex_full_step_mode_enable description=Enables/Disables softex full step sub-stepping mode, which is very expensive and hence disabled by default
p_softex_sleep_enable description=Enables/Disables softex instances from going to sleep (default 1)
p_spawn_bloopers_detection_scale description=This scale [valid values between 0 and 1] scales the spawn boxes that physics uses to track initially intersecting spawns
Default is 0.25 (setting the value to 0 disables spawn box tracking effectively).
p_spawn_rate_limiting description=Limits the number of entities that can be spawned per timestep.
The limit is a compile time constant, currently set to (1024)
The use of rate limiting is deprecated and can cause deadlocks
p_spike_duration description=Duration of physics queue spikes (in ms)
p_spike_frequency description=Frequency of physics queue spikes. (in s)
p_splash_dist0 description=Range start for splash event distance culling
p_splash_dist1 description=Range end for splash event distance culling
p_splash_vel0 description=Minimum water hit velocity to generate splash events at p_splash_dist0
p_surface_type_editor description=Enables editing of physical surface types parameters
p_sync_pos description=Sync pos 0 - original point in update, sync pos 1 - after network and spawning updates
p_tick_breakable description=Sets the breakable objects structure update interval
p_time_step_tolerance description=Specifies the tolerance of performed timestep compared to requested timestep
p_unproj_vel_scale description=Requested unprojection velocity is set equal to penetration depth multiplied by this number
p_update_part_gs_bounds description=If enabled, updates the grid space bounds of each part after reposition. Default: 1
p_use_any_field_for_grid description=Uses any distance field attached to grid host as a part of grid (0/1): 0 -- disabled, 1 -- enabled
p_use_awake_env_bboxes description=Compute a bounding box when batch updating parts of the updated parts that is used to query physical entities to awake due to potential overlap. Currently this is only used for shadow entities for which the bounding box usually overlaps a large part of the interior volume.
p_use_distance_contacts description=Allows to use distance-based contacts (is forced off in multiplayer)
p_use_substep_physics description=Toggles sub stepped physics loop. Forces sub steps to no larger than p_max_timestep.Usage: p_substep_physics [0/1]
Forces sub steps when set to 1. When set to 0, the
time step is variable, based on the frame rate.
p_use_substep_physics_server_only description=Toggles sub stepped physics loop on server only. Forces sub steps to no larger than p_max_timestep.Usage: p_use_substep_physics_server_only [0/1]
Forces sub steps on server only when set to 1. When set to 0, the
time step is variable, based on the frame rate.
p_use_unproj_vel description=internal solver tweak
p_validate_selective_compounding description=Toggles validation of the user-switchable option to prevent compounding of physical entities during OC export and on attachment in the physical proxy.
Usage: p_validate_selective_compounding [0/1]
Default is 1 (validation enabled)
p_verify_parts_deferred description=Defers CPhysicalEntity::VerifyParts to be called only once per timestep instead of every command.
Usage: p_validate_params [0/1]
Default is 1 (deferred). Deferred verification can hide the actual call site,
so set to 0 to catch the immediate command that caused an error.
p_warn_about_disallowed_compounding description=Switches warning about disallowed compounding in the asset setup of physical entities during OC export and on attachment in the physical proxy.
Usage: p_warn_about_disallowed_compounding [0/1]
Default is 1 (warning enabled)
p_wireframe_distance description=Maximum distance at which wireframe is drawn on physics helpers
p_wv_GUImovementhelper description=Opens an Imgui window to debug and tweak physical movement of wheeled vehicles.
party_invite description=Invite player to party.
party_kick description=Kick member from party.
party_launch description=Send Party Launch Notification.
party_leave description=Leave party.
party_set_leader description=Set Party Leader.
pfx_shake_distance description=Multiplier on the Cam Shake Distance parameter for particle effects camera shakes
pfx_shake_intensity description=Multiplier on the Cam Shake Rot and Shift parameters for particle effects camera shakes
ph_debug_accidental_fire description=Display debug info for the accidental hit filtering system
ph_debug_hostility_component description=Display debug info for hostility component
ph_debug_hostility_component_range description=Max range for displaying hostility info of other entities
ph_debug_hostility_component_type description=Controls which hostility component types we display debug info for
1: EntityComponentHostility
2: EntityComponentHostilityComposite
3: Both
ph_debug_hostility_include_dead_actors description=Whether or not to display hostility debug information (via ph_debug_hostility_component) for dead actors
ph_enable_reputation_hostility description=Enables reputation based hostility checks
ph_hostilityComposite_HitLogging_enabled description=Enables EntityComponentHostilityComposite OnHandleHit Logging
phpx_drawExtrapTime description=Flag to enable/disable in-world display of Time/Pct in Extrap/Interp mode
phpx_drawExtrapTime_Threshold description=Pct value for how much time spent extrapolating that will change the text color displayed
phpx_drawPosAges description=Bit mask to enable/disable drawing of ages of points in position history 0=off, 1=local, 2=remote, 3=both
phpx_drawRightTrails description=Bit mask to enable/disable drawing of right vector history 0=off, 1=local, 2=remote, 3=both
phpx_drawTrailDots description=Bit mask to enable/disable drawing of position dot trails 0=off, 1=local, 2=remote, 3=both. Add 4 to enable drawing of positional error between local and remote.
phpx_drawTrailLines description=Bit mask to enable/disable drawing of position line trails 0=off, 1=local, 2=remote, 3=both. Add 4 to enable drawing of positional error between local and remote.
phpx_drawUpTrails description=Bit mask to enable/disable drawing of up vector history 0=off, 1=local, 2=remote, 3=both
phpx_drawVelTrails description=Bit mask to enable/disable drawing of velocity vector history 0=off, 1=linear local, 2=linear remote, 3=both linear, 4=angular local, 8=angular remote, 12=both angular
phpx_extrapTime_logInterval_ms description=Interval (milliseconds) for logging extrapolation debug data to console/files
phpx_ignorelist_debugdist description=Enable/disable showing ignore list of Entity / Physics Proxy within specified distance (0 is off)
phpx_lengthAngVelTrails description=Enable/disable drawing of velocity vector history 0=off, 1=local, 2=remote, 3=both
phpx_lengthUpTrails description=Length in of up vector trails
phpx_lengthVelTrails description=Bit mask to enable/disable drawing of velocity vector history 0=off, 1=local, 2=remote, 3=both
phpx_pauseGraphs description=Flag to enable/disable debug latency logging to IMGUI graphs
phpx_pauseTrails description=Bit mask to pause recording of debug trails 0=off, 1=local, 2=remote, 3=both
phpx_showStatus description=Enable/disable drawing of physics proxy net sync status 0=off, 1=all, 2=net sync enabled only
pl_AIVehicle description=Enable AI control on the client player's vehicle.
pl_AbilityDebug description=Display player abilities
pl_ActivatePlayerStatusDisplay description=0 : DockItem; 1 Building Blocks; 2 DockItem & Building Blocks; 3 Building Blocks (force all on)
pl_IdleKickWarningCountdown description=Time a private server can be active in pre-game without starting the game (in seconds, pre-match only), server kicks all clients after this time
pl_ServerDisableClientIdleKick description=Disable server kicking any client for being idle too long
pl_SetPlayerConversationDofAndFovActive description=<active>, [<targetEntityName>], [<stickyFilter>] Sets the player conversation depth of field and field of view effect. For the first parameter, use 1 for Active or 0 for Inactive.
pl_SmoothingRagdollAngularRate description=Angular rotation smoothing for articulated entities with gravity
pl_SmoothingRagdollAngularRateNoGravity description=Angular rotation smoothing for articulated entities in Zero Gravity
pl_SmoothingRagdollEnabled description=Whether to use special ragdoll smoothing algorithms
pl_SmoothingRagdollMaxPredictionTime description=The time since last update in the predictor is limited by this value.
pl_SmoothingRagdollPredictionRate description=Determines what portion (from 0 to 1) of the predicted movement to apply. Larger values result in longer correction times for sudden changes in direction, lower values decrease the smoothness of the motion on remote clients.
pl_SmoothingRagdollQuaternionRate description=Quaternion smoothing amount with gravity
pl_SmoothingRagdollQuaternionRateNoGravity description=Quaternion smoothing amount in Zero Gravity
pl_SmoothingRagdollSnapDistance description=If the position is off by more than this number, smoothing will be skipped over
pl_SmoothingRagdollUsePredictor description=Whether or not the ragdoll uses the interpolated predictor values before smoothing with gravity
pl_SmoothingRagdollUsePredictorNoGravity description=Whether or not the ragdoll uses the interpolated predictor values before smoothing in Zero Gravity
pl_SmoothingRagdollVelocityRate description=Velocity smoothing over speed correction with gravity
pl_SmoothingRagdollVelocityRateNoGravity description=Velocity smoothing over speed correction in Zero Gravity
pl_SmoothingRagdollVelocityScale description=Velocity smoothing scaler with gravity
pl_SmoothingRagdollVelocityScaleNoGravity description=Velocity smoothing scaler in Zero Gravity
pl_action_handler.debugData.enable description=Enable actor action handler debug data (0=off, 1=on)
pl_action_handler.debugData.filter description=Comma separated list of sections to filter to.
pl_action_handler.debugData.flagFilter description=Flags to filter to.
pl_action_handler.validatePosition description=Validates the position of this player on the server and all other clients.
Optionally set a delta threshold to only output any client that is more than x.y out of position: pl_action_handler.validatePosition x.y
pl_action_handler.validatePosition.timeout description=Timeout for the command, in seconds.
pl_actorDebugData.actorFilters.maxRange description=Range from the camera, for displaying actors in the actor state debug, see "useMaxRange".
pl_actorDebugData.actorFilters.onlyShowInVision description=With this enabled, only actors within the view angle, specified by "visionConeCosine ", of the camera, (0=off, 1=on).
pl_actorDebugData.actorFilters.showAIPlayers description=Whether to enable display of AI players, in actor state debug, (0=off, 1=on).
pl_actorDebugData.actorFilters.showCorpses description=Whether to enable display of corpse actors, in actor state debug, (0=off, 1=on).
pl_actorDebugData.actorFilters.showLocalPlayers description=Whether to enable display of local client players, in actor state debug, (0=off, 1=on).
pl_actorDebugData.actorFilters.showOtherPlayers description=Whether to enable display of players which are neither local clients nor AI players, in actor state debug, (0=off, 1=on).
pl_actorDebugData.actorFilters.targetNearbyActorsRange description=Range from the camera, for targeting nearby actors.
pl_actorDebugData.actorFilters.useMaxRange description=With this enabled, only actors within the range specified by "maxRange" from the camera, are shown in the actor state debug, (0=off, 1=on).
pl_actorDebugData.actorFilters.visionConeCosine description=View angle to filter actors in the actor state debug, see "onlyShowInVision".
pl_actorDebugData.handlesDebug description=Render player handles
pl_actorDebugData.rendererModes.file description=Renderer mode for file actor state debug renderer. (0 = off, 1 = target actors only, 2 = all actors
pl_actorDebugData.rendererModes.floating description=Renderer mode for floating actor state debug renderer. (0 = off, 1 = target actors only, 2 = all actors
pl_actorDebugData.rendererModes.imgui description=Renderer mode for ImGUI actor state debug renderer. (0 = off, 1 = target actors only, 2 = all actors
pl_actorDebugData.targets description=Target entities for actor debug, as a comma separated list of actor names or IDs. Special values: "0": Target no actors, "1": Target only the local client actor (subject to filters).
pl_actor_ability.debugData.enable description=Enable ability debug data (0=off, 1=on).
pl_actor_ability.debugData.filter description=Comma separated list of sections to filter to.
pl_actor_ability.debugData.flagFilter description=Flags to filter to.
pl_adjustJumpAngleWithFloorNormal description=Set to true to adjust the angle a player jumps relative to the floor normal they're stood on. Can make jumping on slopes frustrating.
pl_aimComponent.enableWeaponOperatorData description=Enables showing weapon data in the driver seats.
pl_aimComponent.showAimControl description=Enables showing aim controller data.
pl_aim_acceleration_enabled description=Aim Acceleration: Enable/Disable aim acceleration.
pl_autoRespawn description=Enable player ships to automatically respawn upon death.
pl_awarenessComponent.debug description=Show debug information for the awareness component
pl_awarenessComponent.hazards.debugOverride.enabled description=Use the override values for determining hazard direction, also enables face protection
pl_awarenessComponent.hazards.debugOverride.x description=Sets x component of hazard direction
pl_awarenessComponent.hazards.debugOverride.y description=Sets y component of hazard direction
pl_awarenessComponent.hazards.debugOverride.z description=Sets z component of hazard direction
pl_breadcrumb_info.debugData.enable description=Enable breadcrumb debug data (0=off, 1=on).
pl_breadcrumb_info.debugData.filter description=Comma separated list of sections to filter to.
pl_breadcrumb_info.debugData.flagFilter description=Flags to filter to.
pl_breadcrumbs.debugNameFilter description=Filter debug information based on (partial) actor name comparison.
pl_breath.consumeOxygenInRoom description=Enable the players breathing and oxygen tank consuming oxygen from room they are currently in (Excludes helmets as oxygen is always consumed from helmet)
pl_breath.debug description=display breathing debug info
pl_breath.enableMistedBreathInHelmet description=Enable the players misted breath when they are wearing a sealed helmet
pl_breath.enabled description=enable the actor breathing component
pl_breath.overrideApparentTemperature description=Apparent temperature override value for breathing (0=disabled)
pl_breath.overrideBodyTemperature description=Body temperature override value for breathing (negative=disabled)
pl_breath.overrideBreathOxygenLevel description=Breath Oxygen Level override value for breathing (0=disabled)
pl_breath.overrideExertion description=Exertion override value for breathing (0=disabled)
pl_breath.overrideGForce description=GForce for override value breathing (negative=disabled)
pl_breath.overrideGForcePassout description=GForcePassout override value for breathing (negative=disabled)
pl_breath.overrideGForceStress description=GForceStress override value for breathing (negative=disabled)
pl_breath.overrideIsInEVA description=IsInEVA override value for breathing (negative=disabled)
pl_breath.overrideMistedBreath description=Misted breath strength override value for breathing between 0 and 1 (negative=disabled)
pl_breath.overrideRecovery description=Recovery override value for breathing (0=disabled)
pl_breath.overrideStamina description=Stamina override value for breathing (negative=disabled)
pl_breath.overrideSuitTemperature description=Suit temperature override value for breathing (negative=disabled)
pl_breath.proceduralBreathingAnim.debug description=Display the procedural breathing anim debug.
pl_breath.proceduralBreathingAnim.debugJoint description=Joint to show the debug graphs for.
pl_breath.proceduralBreathingAnim.enabled description=Enable the procedural breathing anim.
pl_breath.proceduralBreathingAnim.samplingStepCount description=Step count when sampling breathing curves.
pl_carryable.debugDraw description=Enable debug draw for carryables, <1-draws interactions> <2-draws state>
pl_carryable.debugDrawFreeAlignment description=Enable free alignment debug draw for carryables
pl_carryable.debugDrawTasks description=Enable debug draw for carryables tasks
pl_carryable.enableItemDropsToSwapBackToWeapon description=auto swap back to weapon after using a item like a medkit
pl_carryable.enableWeaponInspect description=Enable weapon inspect
pl_carryable.gripDepth description=Set grip depth, used if 'overrideGripDepth' is on
pl_carryable.gripHeight description=Set grip height, used if 'overrideGripHeight' is on
pl_carryable.gripOffsetPosX description=Set grip x-coord position offset , used if 'overrideGripOffset' is on
pl_carryable.gripOffsetPosY description=Set grip y-coord position offset , used if 'overrideGripOffset' is on
pl_carryable.gripOffsetPosZ description=Set grip z-coord position offset , used if 'overrideGripOffset' is on
pl_carryable.gripOffsetRotX description=Set grip x-rotation offset , used if 'overrideGripOffset' is on
pl_carryable.gripOffsetRotY description=Set grip y-rotation offset , used if 'overrideGripOffset' is on
pl_carryable.gripOffsetRotZ description=Set grip z-rotation offset , used if 'overrideGripOffset' is on
pl_carryable.gripWidth description=Set grip width, used if 'overrideGripWidth' is on
pl_carryable.leftGripDimension description=Set left grip dimension, used if 'overrideGripDimension' is on
pl_carryable.log description=Enable log for carryable entities
pl_carryable.logClench description=Enables verbose logging for clenching and unclenching of items.
pl_carryable.logStates description=Enable log for actor states
pl_carryable.nameFilter description=Filter carryables debug based on their name (partial, case insensitive)
pl_carryable.overrideGripDepth description=Enable grip depth override
pl_carryable.overrideGripDimension description=Enable grip dimension override
pl_carryable.overrideGripHeight description=Enable grip height override
pl_carryable.overrideGripOffset description=Enable grip offset override
pl_carryable.overrideGripWidth description=Enable grip width override
pl_carryable.overrideWristRotation description=Enable wrist rotation override
pl_carryable.placeWalkDistances.max description=Maximum distance between a player and item, when placing the item. If their distance is above this, the player will walk forwards to get into position before placing it.
pl_carryable.placeWalkDistances.maxPositioningDistance description=When placing an item, maximum distance from player to target (after walking request), above which we do not allow positioning proc clip to run. Must be slightly larger than max place walk distances.
pl_carryable.placeWalkDistances.min description=Minimum distance between a player and item, when placing the item. If their distance is below this, the player will walk backwards briefly to get into position before placing it.
pl_carryable.rightGripDimension description=Set right grip dimension, used if 'overrideGripDimension' is on
pl_carryable.takeWalkDistances.maxPositioningDistance description=When taking an item, maximum distance from player to target (after walking request), above which we do not allow positioning proc clip to run. Must be slightly larger than max take walk distances.
pl_carryable.takeWalkDistances.notWeapons.max description=Maximum distance between a player and non weapon item, for them to pick it up using take. If their distance is above this, the player will walk forwards to get into position before picking it up.
pl_carryable.takeWalkDistances.notWeapons.min description=Minimum distance between a player and non weapon item, for them to pick it up using take. If their distance is below this, the player will walk backwards briefly to get into position before picking it up.
pl_carryable.takeWalkDistances.weapons.max description=Maximum distance between a player and weapon, for them to pick it up using take. If their distance is above this, the player will walk forwards to get into position before picking it up.
pl_carryable.takeWalkDistances.weapons.min description=Minimum distance between a player and weapon, for them to pick it up using take. If their distance is below this, the player will walk backwards briefly to get into position before picking it up.
pl_carryable.watchdogWaitTime description=How long the carryable state watchdog will wait before for current state to be valid before returning to correct state.
pl_carryable.wristRotation description=Set wrist rotation, used if 'overrideWristRotation' is on
pl_choice.allow_audio_ui_with_dialogue description=0: omit ui sounds when there is dialogue audio playing 1: allow ui sounds even when there is accompanying dialogue
pl_choice.allow_third_person_quick_interact description=Allows quick interact to be done from 3rd Person without snapping to 1st Person
pl_choice.animation_timeout description=Time it takes for the player choice inner thoughts to start animating before disappearing completely based on the global_timeout
pl_choice.conversationTextOutroTime description=Set the time(float) in seconds that we allow an outro to play before we close the player thought canvas
pl_choice.conversationTextTime description=Set the max time(float) the player have to chose an option in a conversation, this value is multiplied by the number of options
pl_choice.debug description=0:Debugging off, 1: view signals, 2+: More debugging for the signal with this number
pl_choice.debug_blocked_interaction_monologue description=If set to 1, logs info about the inner monologue being played when clicking on a blocked interaction.
pl_choice.debug_distant_ip_indicator description=0: debug off, 1: debug on
pl_choice.debug_entity description=1: Information on the entity, physical entity and the physics part the cursor is over in Interaction Mode
pl_choice.debug_headlook description=1: debug headlook params
pl_choice.debug_ip_modifier description=debug interaction point's modifier
pl_choice.debug_kiosk description=1: debug kiosk interactions
pl_choice.debug_offscreen_selection description=debug selection range of offscreen ip
pl_choice.debug_screenfocus description=1: debug screen focus
pl_choice.debug_thoughts description=1: Debug draw some helper info for inner thoughts. 2: inner thought text is debug drawn to screen (helps check for rendering issues)
pl_choice.dialogue_audio_delay description=Delay in seconds before triggering inner thought dialogue
pl_choice.enable_corpse_looting_restrictions description=[0: Restrictions disabled, player corpses are lootable like normal. 1:Restrictions enabled, looting restricted see 'PlayerCorpseInteractionParams_Global.xml' DF record.
pl_choice.enable_dialogue_audio description=0:don't play inner thought play dialogue 1: do play inner thought dialogue
pl_choice.enable_distant_interaction_indicator description=0: Disabled. 1: Enabled if allowed by game mode. 2: Force enabled
pl_choice.enable_focused_conversation description=[0: the player can still interact with other items in the environment (interaction mode, prompts are as noraml). As long as an interaction prompt is on screen, no conversation option should be highlighted; 1: based on DF setup; 2: always force focused conversation.
pl_choice.enable_interaction_prompts description=0: Disabled. 1: Enabled if allowed by game mode. 2: Force enable 'selected' prompts. 3: Force enable both prompt types.
pl_choice.enable_interaction_prompts_In_Cockpit_While_Freelook description=0: Disabled. 1: Enabled if allowed by game mode. 2: Force enable 'selected' prompts.
pl_choice.enable_off_screen_selection description=Off screen IP selection. 0: Disabled | 1: Enabled
pl_choice.enable_quick_select description=1: enable tapping the IM action to quickly select the default interaction
pl_choice.enable_wheel description=Enable wheel PIS version. 0: Disabled 1: Game mode default, 2: Force Enabled
pl_choice.global_timeout description=Time it takes for the player choice inner thoughts to disappear and select a default option if the player doesn't select one in time. 0 to disable
pl_choice.highlighting description=0: no highlighting, 1: highlighting in IM and normal mode, 2: highlighting in IM only
pl_choice.offscreen_selection_using_cone description=use cone as selection range of offscreen ip
pl_choice.show_cursor description=0: don't draw the interaction mode cursor on the screen
pl_choice.show_curve description=0:disable 1:enable
pl_choice.show_thoughts_delay description=Time it takes for the inner thoughts to appear on screen after item selection
pl_choice.wheel_debug description=Debug PIS wheel
pl_choice.wheel_pixelsFocus description=Margin (in pixels) of the screen size to focus the PIS wheel. If the IP is outside this area, the camera will move towards the IP until is inside the area.
pl_choice.world_display_cursormode description=0: Default - 1: cursor stays still while dragging - 2: cursor snaps back to original position after dragging
pl_clientIdleCheckPeriodSeconds description=Period of time in seconds between updates of user activity/idle status
pl_clientIdleKickTime description=Time a player can idle on a server, potentially hogging it without starting the game (in seconds), server restarts if all clients are idle
pl_clientIdleKickTimeMinVehicleSpeedToIgnore description=Reset idle kick timer if the player is in a vehicle traveling at this speed or higher.
pl_clientIdleKickTimePersist description=Time a player can idle on a server in persistent universe mode, potentially hogging it without starting the game (in seconds), before being kicked
pl_clientIdleKickTimePreGame description=Time a player can idle on a server, potentially hogging it without starting the game (in seconds, pre-match only), server restarts if all clients are idle
pl_clientIdleKickTimeSpectating description=Time a player can idle on a server in spectator mode, potentially hogging it without starting the game (in seconds), before being kicked
pl_controlHints.debugShowUnbound description=1: Show unbound control hints in the UI.
pl_controlHints.enable description=0: Disabled, 1: default behaviour for game mode, 2: force enable
pl_controlHints.forceUpdate description=1 - Force the control hints to update even if the player state is the same.
pl_control_state.debugData.enable description=Enable actor control state debug data (0=off, 1=on).
pl_control_state.debugData.filter description=Comma separated list of sections to filter to.
pl_control_state.debugData.flagFilter description=Flags to filter to.
pl_control_state_machine.debugData.enable description=Enable actor control state machine action debug debug data (0=off, 1=on).
pl_control_state_machine.debugData.filter description=Comma separated list of sections to filter to.
pl_control_state_machine.debugData.flagFilter description=Flags to filter to.
pl_controls_Exponent_default_value description=Set the default value of a control option exponent
pl_controls_Exponent_maximum_value description=Set the maximum value of a control option exponent
pl_controls_Exponent_minimum_value description=Set the minimum value of a control option exponent
pl_controls_Exponent_step_value description=Set the step value of a control option exponent slider
pl_corpse.corpseFlowTimeout description=If the time taken for the corpse flow exceeds this many seconds on the server, it is aborted.
pl_corpse.debugLog description=Enable verbose corpse cigTrace logging (0=off, 1=local, 2=all, <names>=comma separated list of names).
pl_corpse.disableDropHeldItemOnDeath description=0: Players drop held items on death. 1: Held items remain attached on death. 2: Re-attach item to holster
pl_corpse.disableLandingZoneRescue description=If set to 1, dying ANY landing zone will leave behind a corpse
pl_corpse.enableDelayedRespawnEntitlement description=[TEST] If set to 1, allows respawn entitlement to be delayed until corpse spawn
pl_corpse.enableItemRecoveryFlow description=0: Off/ 1: All equipped items are sent to the hospital/vehicle local inventory/ 2: All equipped items are re-requipped. 
pl_corpse.keepAllItems description=If set to 1, all items are kept when respawning, and duplicated to the corpse. Set this if you don't want to respawn naked in test levels.
pl_corpse.keepMobiGlas description=Whether the player should keep their mobiglas on death.
pl_corpse.maxCorpsesPerPlayer description=Number of corpses per player allowed before cleanup.
pl_corpse.preLoadCorpses description=If enabled, players carry a pre-loaded corpse for use when they die.
pl_corpse.waitForEquipTimeout description=Time alloted to waiting for all items to spawn and equip (in seconds). Negative value disables the timeout.
pl_damage_multiplier_from_AI_spaceships description=Damage multiplier applied to damage done by AI spaceships on the player
pl_damage_multiplier_to_AI_spaceships description=Damage multiplier applied to damage done by the player on AI spaceships
pl_dead.enableDownedKillOnDisconnect description=If the client disconnects from the server while dowed, kill him on the server.
pl_debugFOVOffsets description=Shows debug information about the FOV and the offsets applied to the camera
pl_debug_actor_actions description=Enable debug log for actor actions
pl_debug_aiming description=
pl_debug_filter description=
pl_debug_hit_recoil description=
pl_debug_jumping description=
pl_debug_movement description=
pl_debug_speed description=1=Display current speed, 2=Also display stance speed
pl_defaultActions.loadDefaults description=1: Forces loading default actions from DF.
pl_defaultActions.log description=1: Log default actions
pl_defaultShip description=Default ship class to associate with the player in arena commander if the lobby is bypassed. i.e. ANVL_Hornet_F7C / ORIG_300i for example.
pl_drawMarkerDebug description=0: disabled 1:enabled
pl_dummy.blockEnabled description=Enable/Disable blocking on the dummy players
pl_dummy.changeWeapon description=0 = no weapon change, 1 = sequential through weapon list, 2 = random weapons
pl_dummy.despawnAll description=Remove all dummy players.
pl_dummy.fireEnabled description=Enable/Disable firing on the dummy players
pl_dummy.flowGraphEnabled description=Enable/Disable the flow graph modules for headlless clients
pl_dummy.hideAll description=1/0
pl_dummy.jumpChance description=Control how often dummy players jump - 0.0 is never, 1.0 is whenever they're not crouching
pl_dummy.maxInTime description=Maximum time for dummy player to remain in game (seconds, < 0.0F to disable
pl_dummy.maxOutTime description=Maximum time for dummy player to remain out of game (seconds, < 0.0F to disable
pl_dummy.minInTime description=Minimum time for dummy player to remain in game (seconds, < 0.0F to disable
pl_dummy.minOutTime description=Minimum time for dummy player to remain out of game (seconds, < 0.0F to disable
pl_dummy.moveEnabled description=Enable/Disable moving on the dummy players
pl_dummy.respawnAtDeathPosition description=0 = default respawn location, 1 = respawn at position where they were killed
pl_dummy.respawnMaxDelay description=Maximum time delay (seconds) until dummy is respawned
pl_dummy.respawnMinDelay description=Minimum time delay (seconds) until dummy is respawned
pl_dummy.setState description=(<entityName>, <state(s)>) Set the state of a dummy player.
example: pl_dummy.setState DummyPlayer0 fire:true move:default
pl_dummy.showDebugText description=Enable/Disable on-screen messages about dummy players
pl_dummy.spawn description=Spawn some dummy players for profiling purposes.
usage: pl_dummy.spawn [count=n] spawns n dummies around local client
   or: pl_dummy.spawn [count=n] [entityname] spawns n dummies around named entity
pl_dummy.suicideEnabled description=Enable/Disable killing dummy players who've been alive for too long
pl_dummy.turnEnabled description=Enable/Disable turning on the dummy players
pl_enableOceanKillplayer description=Enables automatically killing the player when they are within an ocean on a planet. Set to 2 to allow underwater with a helmet, otherwise suffocation damage rather than instant
pl_enableOverTheShoulderCam description=Enables over the shoulder 3rd person camera during conversation using a sticky filter (has to be 1 before the sticky filter starts)
pl_enableRiversKillplayer description=Enables automatically killing the player when they are within a river or basin on a planet. Set to 2 to allow underwater with a helmet, otherwise suffocation damage rather than instant
pl_exit_RequiresHold description=Switches whether or not the player has to hold to exit vehicle seats.
pl_fall.debugFallIntro description=Enable additional debugging for the fall state.
pl_followEntity.catchupModifier description=how much of the remaining distance should the player catch up each second
pl_followEntity.debugEnabled description=display debug information
pl_followEntity.minDirectionMatch description=how much should the directions match in order to start following
pl_gforce.animation.exteriorBlendspaceBlendTime description=Set blend time for the edge animations in the bspace
pl_gforce.animation.interiorBlendspaceBlendTime description=Set blend time for the middle animations in the bspace
pl_gforce.animation.interiorBlendspaceLimit description=Specify when interiorBlendspaceBlendTime has to be used instead of the external one
pl_gforce.animation.scaleGForce description=How much we scale the parameters passed to the bspace
pl_gforce.boostZoomScale description=Scales the FOV change when using AfterBurner. Set via options.
pl_gforce.debug description=display GForce debug info (1=real time X and Z params, 2=history of all axis)
pl_gforce.enabled description=enable the GForce stress mechanic
pl_gforce.headbobAdsModifier description=Scales the head bobbing effects additionally when under ADS.
pl_gforce.headbobScale description=Scales the head bobbing effects based on gforces that act on the player.
pl_ground.correctLinked description=If an actor is in the ground state and has had a parent for a given time, detach them. 1=players, 2=AI, 3=both.
pl_ground.debugDivergence description=Enable position divergence checking.
pl_ground.debugDivergenceGoto description=Goto the diverging actor.
pl_headMotionScale description=Scale applied to the head motion extra shake to tune it down or completely remove it
pl_health description=Sets a player's health.
pl_health.HealButtonPromptLevel description=The level at which the player will be shown a hint telling them to heal.
pl_health.HealButtonPromptPersist description=The number of seconds the Heal Button Prompt hint will persist after it appears
pl_health.HitIndicatorPersist description=The number of seconds the HitIndicator will persist after it appears
pl_health.bloodEffect description=Enable showing the blood effect on camera when hit. Disable this with g_godMode on.
pl_health.bodyPartDamageCap.enabled description=Enable/Disable Body Part Damage Caps
pl_health.bodyPartDamageCap.override description=Override the Damage Cap for ALL body parts
pl_health.debug description=1. Display actor health 2. Display body part health
pl_health.healBlur description=
pl_health.healBrightness description=
pl_health.healEffectDuration description=
pl_health.healSharpness description=
pl_health.hitBlur_addPerHit description=amount of radial blur to add per hit
pl_health.hitBlur_decayPerSecond description=how much radial blur decays every second
pl_health.hitBlur_maxIntensity description=maximum intensity of the radial blur when hit
pl_health.hitBlur_persistTime description=the time radial blur persists before decaying
pl_health.hitColor_maxIntensity description=Cyan Color Correction per hit
pl_health.recentHitsNumber description=maximum number of recent damage log entries to keep
pl_health.showLastHit description=display the last damage (1 dealt, 2 received, 4 other)
pl_health.showRecentHits description=display recent damage log (1 dealt, 2 received, 4 other)
pl_heldEntity.debugLog description=Enable verbose held entity states debugging to log (0=off, 1=local, 2=all, <names>=comma separated list of names)
pl_heldEntityAttachments.debug description=Debug info for the held entity attachments.
pl_hitReaction.debug description=Log hit reaction information.
pl_holster.debugLog description=Enable verbose holster/unholster states debugging to log (0=off, 1=local, 2=all, <names>=comma separated list of names)
pl_hostility_UI_enabled description=UI for Player Hostility enabled (Icons and Notifications)
pl_input.gamepad.forceCircularYawPitch description=If 1, input from yaw and pitch will be forced to be circluar (intended for cases where we know they have not been assigned to different analog sticks).
pl_input.useDummyInput description=Local player's will use the automated / demo / dummy input
pl_inputAccel description=Movement input acceleration
pl_inspect.viewLimitH description=Horizontal head / aim rotation limit.
pl_inspect.viewLimitV description=Vertical head / aim rotation limit.
pl_jump.airControl.controlScale description=Scales base air control while in air.
pl_jump.airControl.inertiaScale description=Scales inertia while in air.
pl_jump.airControl.resistanceScale description=Scales base air resistance while in air.
pl_jump.bumpSpeedMax description=Speed that triggers the maximum bump on a landing.
pl_jump.bumpSpeedMin description=Speed that triggers the minimum bump on a landing.
pl_jump.enableGravity description=Enable gravity affecting jump height.
pl_jump.overlay.maxArcTimeScale description=The fastest the arc can play
pl_jump.overlay.minArcTimeScale description=The slowest the arc can play
pl_ladder.debugActorStates description=Show the debug from actor ladder states.
pl_ladder.debugAnimEmbarkPoints description=Show the animation embark points on ladders (0=none, 1=walk, 2=run, 3=sprint) (requires pl_ladder.debugDraw).
pl_ladder.debugAnimGetOnDistances description=Show the animation get on distances on ladders (requires pl_ladder.debugDraw).
pl_ladder.debugDodge description=Show the debug for collision check when dodging.
pl_ladder.debugDraw description=Show the ladder debug draw (0=none, 1=editor only (only draw ladders with in range pl_ladder.debugDrawCullingDistance), 2=always, 3=always extended.
pl_ladder.debugRungs description=Show the rungs (requires pl_ladder.debugDraw).
pl_ladder.distanceBetweenRungs description=Distance in meters between the rungs of a ladder
pl_ladder.infiniteTop description=If different than zero player will never reach top of the ladder
pl_ladder.logVerbosity description=Do verbose logs whenever the player uses a ladder
pl_ladder.toggleDodge description=0=dodge works on hold, 1=dodge works like a toggle.
pl_lean.collisionCheckBone description=Bone to use for checking collisions when leaning
pl_lean.collisionSweepLengthFactor description=How much we extend the head the sweep in direction of head
pl_lean.collisionSweepOrigin.x description=X Origin of lean collision check
pl_lean.collisionSweepOrigin.y description=Y Origin of lean collision check
pl_lean.collisionSweepOrigin.z description=Z Origin of lean collision check
pl_lean.collisionSweepRadius description=Sweep collision sphere radius
pl_lean.debug description=Draw debug markers and text
pl_lean.debugStateMachine description=Draw debug info for the state machine
pl_lean.enabled description=Is player simple lean enabled
pl_lean.forceLean description=Force leaning direction, 0 - Disable, 1 - Force left, 2 - ForceRight, 3 - Force No lean
pl_lean.helmetAngle description=How much we rotatate of helmet when leaning in degrees
pl_lean.helmetDuration description=How long does the rotation take to finish
pl_lensdisplay.aspectModifier description=Aspect Ratio Modifier for the Visor and Lens UI
pl_lensdisplay.mfdcast_enabled description=Enables new MFD casts: -1 to force disable, 2 to force enable (0 or 1 will be overridden by game mode)
pl_lensdisplay.minimap_enabled description=Enable mini-map
pl_lensdisplay.refreshDefaultStyles description=Forces refresh of default style references
pl_link.debugLog description=Enable verbose link state debugging to log (0=off, 1=local, 2=all, <names>=comma separated list of names)
pl_link.forceClientValidation description=Client will skip performing seat enter locally to force linked state validation to trigger.
pl_loadLoadout description=Loads a different loadout for the current player
pl_lookAhead.adsEnablesPadlock description=When a user goes into ADS while having controls over vehicle weapons, look ahead padlock will automatically enable.
pl_lookAhead.adsPadlockIncludesCrosshair description=0: off, 1: includes attitude crosshair in ADS.
pl_lookAhead.adsSmoothing description=Smoothing when ADS padlock is used.
pl_lookAhead.config_strength_forward description=Sets the look ahead strength for the forward look point.
pl_lookAhead.config_strength_horizon_alignment description=Sets the look ahead strength for horizon alignment.
pl_lookAhead.config_strength_horizon_look_at description=Sets the look ahead strength for horizon look at.
pl_lookAhead.config_strength_jump_point_tunnel description=Sets the look ahead strength for jump point spline following.
pl_lookAhead.config_strength_mgv_forward description=Sets the look ahead strength for the forward look point in MGVs.
pl_lookAhead.config_strength_mgv_horizon_alignment description=Sets the look ahead strength for horizon alignment.
pl_lookAhead.config_strength_mgv_pitch_yaw description=Sets the look ahead strength for pitch yaw movement in MGVs.
pl_lookAhead.config_strength_mgv_target_padlock description=Sets the look ahead strength for padlock in MGVs.
pl_lookAhead.config_strength_mgv_target_soft description=Sets the look ahead strength for target strength in MGVs.
pl_lookAhead.config_strength_mgv_vjoy description=Sets the look ahead strength for VJoy in MGVs.
pl_lookAhead.config_strength_quantum_boost_target description=Sets the look ahead strength for quantum boost target.
pl_lookAhead.config_strength_roll description=Sets the look ahead strength for roll rotation.
pl_lookAhead.config_strength_target_padlock description=Sets the look ahead strength for padlock in pilot seats (soft).
pl_lookAhead.config_strength_target_soft description=Sets the look ahead strength for target tracking in pilot seats (soft).
pl_lookAhead.config_strength_turret_forward description=Sets the look ahead strength for the forward look point in turrets.
pl_lookAhead.config_strength_turret_pitch_yaw description=Sets the look ahead strength for pitch yaw movement in turrets.
pl_lookAhead.config_strength_turret_pointer description=Sets the look ahead strength for pitch yaw movement in turrets.
pl_lookAhead.config_strength_turret_target_padlock description=Sets the look ahead strength for padlock in turrets.
pl_lookAhead.config_strength_turret_target_soft description=Sets the look ahead strength for target strength in turrets.
pl_lookAhead.config_strength_turret_vjoy description=Sets the look ahead strength for VJoy in turrets.
pl_lookAhead.config_strength_velocity_vector description=Sets the look ahead strength for translation.
pl_lookAhead.config_strength_vjoy description=Sets the look ahead strength for the aim cursor.
pl_lookAhead.config_strength_yaw_pitch description=Sets the look ahead strength for yaw pitch rotation.
pl_lookAhead.enable_for_mgv description=Enables / disables look ahead mode for MGVs.
pl_lookAhead.enable_for_spaceship description=Enables / disables look ahead mode for ships.
pl_lookAhead.enabled_for_turret description=Enables / disables look ahead mode for manned turrets.
pl_lookAhead.target_auto_lock_weight description=Sets the dynamic weight for target tracking when auto targeting is enabled.
pl_lookAhead.target_padlock_auto description=-1: auto tracking disallowed by player, 0 no auto padlock active, 1 auto padlock active (this is a state).
pl_lookAhead.target_padlock_auto_enabled description=If set to 1 Look Ahead will automatically enabled padlock on targets (this is a user preference).
pl_lookAhead.target_padlock_player description=This is automatically set to 1 when the user is commanding a padlock tracking (this is a state).
pl_melee.angle_limit_from_behind description=Angle limit (in degrees) in which behind damage multiplier will apply (x2 for full range)
pl_melee.damage_multiplier_from_behind description=Damage multiplier for melee attacking somebody from behind
pl_melee.debug_combos description=Show debug information for melee combos
pl_melee.debug_gfx description=Enable/Disables debug gfx for melees
pl_melee.debug_gfx_block description=Enables/Disables debug gfx for melee blocking colliders.
pl_melee.debug_gfx_hitOnly description=Enable/Disables debug gfx for melees (successful hit only)
pl_melee.debug_syncedMelee description=Debug draw for the synced melee dodge window
pl_melee.debug_targetWarp description=Show debug graphics for warp target
pl_melee.enableEVASyringeStab description=0 = Disables syringe stab in EVA, 1 = Enables syringe stab in EVA
pl_melee.enabled description=0 = Disables melee attack, 1 = Enables old melee attack, 2 = Enables new melee attack.
pl_melee.impulseScale description=Scale the impulse from melee attacks (0=no impulse)
pl_melee.lockedBlock description=1 = Block will remain on despite blocked buttons being released
pl_melee.mp_melee_system description=Enables the three-part melee system
pl_melee.updateFrequency.active description=How often should we perform the melee check when there exists a valid target (0 = every frame) [s]
pl_melee.updateFrequency.passive description=How often should we perform the melee check when there is no valid target (0 = every frame) [s]
pl_mobiGlas_prototypeMobiGlas description=Enables animation and camera effects for new mobiGlas prototype
pl_mobiglasOpenCmd description=<actor name> <view name>

pl_mobiglas_background_exposure description=Relative brightness of the environment (in camera stops) when interacting with mobiGlas
pl_mobiglas_brightness description=Relative brightness of the mobiGlas interface (in camera stops)
pl_mobiglas_cursor_offset_acceleration_time description=acceleration time of the positional and angular offsets when cursor is moving on screen
pl_mobiglas_debug_position description=Display debug axis to help with mobiGlas position placement
pl_mobiglas_idle_movement_offset_range description=Idle movement offset range
pl_mobiglas_idle_movement_time description=Idle movement time
pl_mobiglas_inventory_enabled description=Enable the Inventory App on mobiGlas
pl_mobiglas_log_validation_fail description=enable log debug on mobiGlas validation fail.
pl_mobiglas_menu_angle description=angle of mobiGlas menu in degrees. Around its normal.
pl_mobiglas_menu_tilt description=tilt of mobiGlas menu in degrees. Around its up axis.
pl_mobiglas_offset_x description=offset of the menu from the mobiGlas position x
pl_mobiglas_offset_y description=offset of the menu from the mobiGlas position y
pl_mobiglas_offset_z description=offset of the menu from the mobiGlas position z
pl_mobiglas_position_offset_range_x description=x position offset range of the mobiglas when cursor is moving on screen
pl_mobiglas_position_offset_range_y description=y position offset range of the mobiglas when cursor is moving on screen
pl_mobiglas_position_offset_range_z description=z position offset range of the mobiglas when cursor is moving on screen
pl_mobiglas_remote_client description=allow display of full mobiGlas for remote clients
pl_mobiglas_rotation_offset_range_x description=x rotation offset range of the mobiglas when cursor is moving on screen
pl_mobiglas_rotation_offset_range_z description=z rotation offset range of the mobiglas when cursor is moving on screen
pl_mobiglas_scale description=scale of the mobiGlas ui.
pl_mobiglas_viewlock_smooth_time description=mobiGlas view lock smoothing time
pl_mouse_reinverted_during_im description=Sets that rotation inputs are inverted during interaction mode when fps pitch is inverted.
pl_movement.ladder_walk_SpeedScale description=Ladder walk on speed scale, only for LadderV1
pl_movement.prediction.moveSpeedSmoothing description=Motion parameter 'MoveSpeed' smoothing factor in MovementAction for local actors
pl_movement.prediction.moveSpeedSmoothingRemote description=Motion parameter 'MoveSpeed' smoothing factor in MovementAction for remote actors
pl_movement.prediction.travelAngleSmoothing description=Motion parameter 'TravelAngle' smoothing factor in MovementAction for local actors
pl_movement.prediction.travelAngleSmoothingRemote description=Motion parameter 'TravelAngle' smoothing factor in MovementAction for remote actors
pl_movement.removeSpeedModifiersWhenWalking description=Remove weight based speed modifiers when walking (and gradually apply them as speed increases up to fast run)
pl_movement.walk_SpeedScale description=Walk speed scale
pl_movementController.debugaimlook description=Debug aim/look direction in player movement controller
pl_movementTransition.enabled description=Toggles filter to enable some transitions.
Usage: pl_movementTransition.enabled [0ab...] (flags can be combined)
+a : Starts
+b : Stops
+c : Steps
+d : Jukes
+e : Hip flip
pl_movementTransition.logVerbosity description=Log out transition information if greater than 0
pl_movementTransition.minJukeAngle description=The smallest angle between current and desired movement direction where a juke transition request may be triggered.
Set to 0 to turn jukes off.
pl_movementTransition.naturalMotionAcceleration description=If greater than 0, will cause the player to accelerate from a base motion set to the next target set (like walk fast to run slow) instead of going to the target speed instantly.
pl_movementTransition.strafeHipFlipBlockAngle description=The maximum angle to block hip flips when switching strafe direction (0 = perfect strafe in other direction, 90 = perpedicular).
pl_movementTransition.strafeHipFlipBlockTime description=The time to block doing a hip flip when switching strafe direction.
pl_movementTransition.zeroGStanceChange description=Time between zero G transitions (keep it above 0, if the transition is instant the physics bug out)
pl_performance.lightweight.enableLightweightUpdates description=Enable actor lightweight updates. 1=client, 2=server, 3=both.
pl_performance.lods.combatAI.forceLod0 description=When set, AI in combat with a player are forced into Lod 0.
pl_performance.lods.combatAI.maximumLodClient description=When set, won't force lod 0 if above this lod. Set to -1 to disable.
pl_performance.lods.combatAI.maximumLodServer description=When set, won't force lod 0 if above this lod. Set to -1 to disable.
pl_performance.lods.combatAI.requiresVisible description=When set, won't force lod 0 if not visible (client only).
pl_performance.lods.forceRemotePlayersLod0 description=When set, remote players on the client are forced into Lod 0. This used to be required for remote movement, but now is only kept for debug purposes.
pl_performance.lods.forceVisibleRemotePlayersNearbyLod description=When set, visible remote players aren't allowed in far away lods. For example, they aren't allowed to go further than Lod3. This may help in cases where update frequencies are very bad on the client.
pl_performance.lods.overrideClientActorPerFrameBudget description=When set to a value greater than zero, this overrides the per frame actor budget, which is used by actor update manager (on clients/singleplayer) to decide update frequencies. Otherwise, budget is dynamically calculated from the amount of time actors take to update.
pl_performance.lods.overrideServerActorPerFrameBudget description=When set to a value greater than zero, this overrides the per frame actor budget, which is used by actor update manager (on dedicated servers) to decide update frequencies. Otherwise, budget is dynamically calculated from the amount of time actors take to update.
pl_pit.PIS_force_input_mode description=0: Uses regular cursor selection for the PIS wheel. 1: Uses angular selection for the PIS wheel (cursor is locked to the centre and its angle is used to select). 2: Enabled regardless of gamemode
pl_pit.QS_force_input_mode description=0: Uses regular cursor selection for the Quick Select wheel. 1: Uses angular selection for the Quick Select wheel (cursor is locked to the centre and its angle is used to select)
pl_pit.allowInventoryCache description=Keep inventory cached after closing UI - 1: enabled | 0: disabled
pl_pit.allow_flight_mode_wheel description=Allow the player to open the flight mode quick select wheel
pl_pit.angularInputCursorHelperZoneRadius description=The radius in which the cursor helper can move when using angular input with the PIS Wheel(e.g. pl_pit.PIS_force_input_mode > 0). The helper is constrained to this radius and used to position the real cursor.
pl_pit.cursor_offset_acceleration_time description=Acceleration time of the positional and angular offsets when cursor is moving on screen
pl_pit.debug description=1: debug personal thought menu
2: debug personal inventory
pl_pit.debugDisplay description=1: debug personal thought display
pl_pit.debugLooting description=1: debug looting UI
pl_pit.enableFirstPersonLoot description=First person loot UI - 1: enabled | 0: disabled
pl_pit.enable_hold_to_open_PIS_on_multiple_options description=If 1, holding the interaction key on an IP will open the PIS wheel if it has more than one interaction
pl_pit.enabled description=0: don't enable the personal thoughts menu 1: do enable the personal thoughts menu
pl_pit.forceSoftwareCursor description=0:Disabled 1:Enabled
pl_pit.holdToOpenPISForMultipleOptionsHoldTime description=If enable_hold_to_open_PIS_on_multiple_options is 1, this is the time in seconds the interaction key must be held to trigger the PIS wheel
pl_pit.inventoryTestFile description=File to populate test inventory.
pl_pit.logInventory description=1: Log inventory
pl_pit.overrideLootingGameMode description=Override Game Mode use for First person loot UI:
-1 = no override | 0 = Persistent Universe | 1 = ElectronicAccess | 2 = Squadron42 | 3 = Fronted | 4 = Undefined
pl_pit.toggle_quick_access_wheel description=Quick access works like a toggle, for testing purposes
pl_portModification.drawDebug description=+1:Draw Spheres
+2:Draw Names
+4:Allow Forbidden Ports
 +8:Allow un-editable Ports
pl_portModification.drawSize description=Sphere size
pl_portModification.enableObstruction description=enable / disable visibility and interaction through solid geometry
pl_portModification.maxDistance description=Maximum draw distance for spheres
pl_portModification.minDistance description=Minimum draw distance for spheres
pl_procAnim.DebugNameFilter description=Filter procedural animation debug based on (partial, case insensitive) actor name comparison
pl_proceduralRecoil.debug description=Show debug information for the procedural recoil. 1 = All, 2 = Hands, 3 = Aim, 4 = Body, 5 = Head
pl_proceduralRecoil.debugCurves description=Show the debug for the procedural aim recoil using curves.
pl_proceduralRecoil.enable description=Enable/disable the entire procedural recoil system
pl_proceduralRecoil.enableForVehicleWeapons description=Enable/disable recoil for vehicle weapons (marked up in data)
pl_proceduralRecoil.enableHandsRecoil description=Enable/disable the hands recoil
pl_proceduralRecoil.enableHeadRecoil description=Enable/disable the head recoil
pl_proceduralRecoil.enableHipsRecoil description=Enable/disable the hips recoil
pl_proceduralRecoil.enableRecoil description=Enable/disable the standard recoil, not affecting hips, kick recoil or head recoil
pl_proceduralRecoil.maxFrameTime description=Set maximal frame time used for recoil calculation to prevent large orientation jumps.
pl_proceduralRecoil.vehicleWeaponRecoilScale description=Scales the recoil for vehicle weapons up and down. This is set via the user options and clamped between pl_proceduralRecoil.vehicleWeaponRecoilScaleMin and 1.
pl_proceduralRecoil.vehicleWeaponRecoilScaleMin description=Minimum allowed scale for the vehicle recoil. This must be below 1 and bigger or equal than 0.
pl_renderInNearest description=Render player in nearest pass
pl_result_state.debugData.enable description=Enable actor result state debug data (0=off, 1=on).
pl_result_state.debugData.filter description=Comma separated list of sections to filter to.
pl_result_state.debugData.flagFilter description=Flags to filter to.
pl_result_state.debugData.target description=Turn on the result state debugging for the actor in the center of the screen.
pl_result_state.network.debug description=Enable actor result state network debugging (0=off, 1=local, 2=all, 3=players, <names>=comma separated list of names).
pl_result_state.network.debug.showVelocityDebug description=Whether to show "advanced" velocity debug, in remote movement processor's debug display.
pl_result_state.network.stallLogTime description=If given a value larger than zero, (upstream and downstream) stalls longer than this amount of time are logged out to kibana.
pl_result_state.network.useClientStarveTime description=If enabled, remote movement processor takes into account additional data timestamp offset, from the other client starving server of input.
pl_result_state_data.debugData.enable description=Enable actor result state data debug data (0=off, 1=on).
pl_result_state_data.debugData.filter description=Comma separated list of sections to filter to.
pl_result_state_data.debugData.flagFilter description=Flags to filter to.
pl_result_state_data_synced.debugData.enable description=Enable actor result state data synced debug data (0=off, 1=on).
pl_result_state_data_synced.debugData.filter description=Comma separated list of sections to filter to.
pl_result_state_data_synced.debugData.flagFilter description=Flags to filter to.
pl_result_state_network.debugData.enable description=Enable actor result state network debug data (0=off, 1=on).
pl_result_state_network.debugData.filter description=Comma separated list of sections to filter to.
pl_result_state_network.debugData.flagFilter description=Flags to filter to.
pl_scoped_options.debugData.enable description=Enable scoped options debug data (0=off, 1=on).
pl_scoped_options.debugData.filter description=Comma separated list of sections to filter to.
pl_scoped_options.debugData.flagFilter description=Flags to filter to.
pl_shopping.log description=Set to 1 to increase the verbosity of shopping assistance logging.
pl_shopping.trackPostTryOnRemoval.duration description=Duration an item will be tracked for, in milliseconds.
pl_shopping.trackPostTryOnRemoval.enabled description=Set to 1 to track any item being removed some time after TryOn has completed, added for RSI-384461. Set to 2 to also print out the callstack for the removal event.
pl_showStatus description=Log current player status
pl_show_equipment_changes description=Print equipment being added / removed from Actor inventory. 1. player, 2. all
pl_skills.addxp description=You can adjust the xp for the player defined with pl_skill.debugTarget using this cvar. Please use this cvar the following way: pl_skills.addxp [skill name] [xp amount]
pl_skills.debugTarget description=Set the target for the player skills debug. [ActorName]
pl_skills.enabled description=Should Player Skills be active? 0: Never active 1: Depending on Gamemode 2: Always active
pl_skyLine_enabled description=is the skyLine component enabled
pl_skyLine_map_overlay_alpha description=sets the alpha of planet overlays (for debugging mouse-over)
pl_socialNotification_duration_hangarInvite_hurry description=Duration of a hurried long UI social notification.
pl_socialNotification_duration_hangarInvite_normal description=Duration of a long UI social notification.
pl_speedThrottle.defaultFixedSpeed description=Default speed to use when using inputMode 1; persists between sessions; if 0 will use default speed configured in DataForge
pl_speedThrottle.enableGamepadMinSpeed description=Enable making gamepad movement input zero unless it's high enough to reach minimum speed (SlowWalk)
pl_speedThrottle.enabled description=Enable speed throttle and brake controls for player movement
pl_staging.debug description=Enable debug output to log.
pl_staging.enableSpawnInPlace description=Whether to enable in-place log-out/in after a graceful disconnect. 0: Never, 1: Only in green zones, 2: Always.
pl_staging.forceClientValidation description=After a given timeout on the client, skip the normal staging flow and validate to match the server.
pl_staging.forceRespawnInSameSolarSystem description=Make sure we find a hospital or med bed in the same solar system after dying.
pl_staging.reconnectRaycastMaxDistance description=Distance to search when the authoritative side works out whether a floor raycast is needed, after reconnecting. Must be smaller than waitForFloorMaxDistance to make definitely sure that a floor raycast will hit.
pl_staging.usePersistentRespawning description=Whether to use the new "persistent respawning" process in PU: This is where actors revive straight into the new spawn point, skipping staging state (and some of the old respawn process). Note: Has no effect unless net_use_persistent_spawning is set! 0: Use old respawning process, 1: Respawn by entity attachment (requires spawn point to be streamed in), 2: Respawn with cross-server teleport API (does not require spawn point to be streamed in).
pl_staging.waitForFloorMaxDistance description=Distance to search when raycasting for the floor, after a force teleport or reconnect.
pl_stamina.debug description=display stamina debug info
pl_stamina.debugHelper description=display breathing helper info (1=composition 2=location 3=both)
pl_stamina.debugProducerConsumer description=log information about the consume producer initialization
pl_stamina.debugSuffocation description=log information when the player begins to suffocate/lose pressure
pl_stamina.enableNpcBreathing description=Enable basic simulation of NPC breathing. (0=disabled, 1=enabled)
pl_stamina.enableNpcHeartRate description=Enable basic simulation of NPC heart rates. (0=disabled, 1=enabled)
pl_stamina.enabled description=enable the breathing-to-stamina gameplay
pl_stamina.gasTankAutoRefill description=Gas Tank automatically refills if the outer room has compatible gas composition
pl_stamina.overrideGasTankFillPercent description=Override the fill percentage of the target entity's gas tank. [ActorName, FillPercent]
pl_stamina.staminaOverride description=Override the stamina (0=disabled)
pl_stamina.waitForLoadout description=The stamina system will wait for the expected loadout before initializing to prevent premature suffocation. (0=disabled, 1=enabled)
pl_state_data_utilisation.debugData.enable description=Enable actor control state debug data (0=off, 1=on).
pl_state_data_utilisation.debugData.filter description=Comma separated list of sections to filter to.
pl_state_data_utilisation.debugData.flagFilter description=Flags to filter to.
pl_state_reload.interruptWhenSprinting description=Enables the sprint to interrupt the reload.
pl_state_take.showDebugInfo description=Displays debug info for the item being taken object.
pl_status.coldTurkey description=Removes all drugs and effects from an actor.
pl_status.enableBloodDrugLevel description=enable/disable the hunger actor status
pl_status.enableDownedDamage description=enable/disable the downed damage actor status
pl_status.enableHunger description=enable/disable the hunger actor status
pl_status.enableThirst description=enable/disable the thirst actor status
pl_status.logIncapacitated description=Log details about how actors get incapacitated
pl_status.logPrediction description=Log details about actor stat prediction
pl_status.logPredictionPlayerFilter description=FFilter stat prediction logs by a specific player
pl_status.logPredictionStatFilter description=Filter stat prediction logs by a specific stat type
pl_status.modifyStat description=Modifies a stat on the target player.
pl_status.modifyStatCooldown description=Modifies a stats cooldown on the target player.
pl_status.overrideOrificeBleedingAmount description=Overrides the blood placed surface effect emitter strength of the provided emitter location on the specified actor.
pl_status.overrideSweatAmount description=Overrides the sweat placed surface effect strength of the provided emitter location on the specified actor.
pl_stranded.debug description=Debug for detecting if AI have become stranded - stuck on top of a seat and not able to get off.
pl_takedown.aimVsSpineLerp description=Lerp factor between entity rotation and spine rotation
pl_takedown.allowNormalSideTakedown description=Convert left and right in normal takedown to back
pl_takedown.convertSideToBackAnglePercentage description=The percentage of relative forward dir and victim's forward dir used for takedown orientation when converting left and right in normal takedown to back
pl_takedown.debug description=Show take-down debug draw (1=local only, 2=all)
pl_takedown.debugDodgeWindow description=Prints specific debug for vanduul take-down dodge window open/close
pl_takedown.debugInterruptions description=Prints specific debug for take-down interruptions
pl_takedown.debugLog description=Log takedown information to console
pl_takedown.ignoreDFTakeDownQuadrantRestriction description=Disable the DF attacker quadrant restriction; allowing targets to be taken down from all quadrants
pl_takedown.ignoreFriendly description=Disable the friendly check for the take-down
pl_takedown.ignoreObstacleCheck description=Disable the obstacle check for the take-down
pl_takedown.ignoreVertDistanceCheck description=Disable the vertical distance check for the take-down
pl_takedown.maxVelocitySquared description=Maximum speed of target for attempting take-down in multiplayer
pl_takedown.mode description=0: disabled, 1: PvE only, 2: PvE+PVP
pl_takedown.quickSelect description=Skips the take-down stow/unstow animation
pl_takedown.updateFrequency.active description=How often should we perform the take-down check when there exists a valid target (0 = every frame) [s]
pl_takedown.updateFrequency.passive description=How often should we perform the take-down check when there is no valid target (0 = every frame) [s]
pl_targetMarkerEdgeDistance description=Distance marker is from the edge of the screen
pl_targetMarkerScale description=Set scale for the 3D target markers
pl_throw.quickSelect description=1 - deselects the weapon without animation, 0 - plays the full animation for the weapon deselect
pl_throw.remoteCatchupStrategy description=Strategy to use to keep throw sequence better in sync
0: none
1: Speed up anim
2: Fast forward anim
pl_throw.serverInstantThrow description=Throw right away on server to minimize visual lag in physical object on clients.
pl_throw.throwModeAngle description=Angle(-1 to 1) to pick the throw mode(underhand or overhand), where -1 is down and 0 is forward and 1 is up.
pl_ui.shoppingAR_enable description=Enables the new Shopping AR UI.
pl_ui_scrollbar_sound_interval_ms description=Time interval (in milliseconds) between each sound event played for scrolling with a UI ScrollBar
pl_ui_tracker_debug description=1: ODBTracker
pl_usable.checkMatchingEntityParentInValidation description=If enabled, persistence validation will fatal error if entity parent doesn't match. With this disabled it still fatals if streaming group doesn't match.
pl_usable.checkParentInValidation description=If enabled, persistence validation will fatal-error if entity parent is set wrong.
pl_usable.enableExitRotationCorrection description=Enable correction of exit rotation divergence.
pl_usable.enableExitValidation description=If enabled, validate exit sequence and pop actor out of usable early if an obstruction is detected. 0 - off; 1 - filtered to only movable/carryable/furniture; 2 - any usable
pl_usable.enableRecursiveSocketWorkaround description=Whether the workaround to stop stack overflows from recursive socketed usables is enabled.
pl_usable.fatalAtRecursiveSocket description=Whether to trigger a critical (fatal) error on discovery of a recursive socketed usable.
pl_usable.teleportToExitTransformOnExit description=When exiting a usable, actors are teleport to the exit transform of the usable.
pl_useFOVOffsets description=Enables the offset to the 1st person camera applied based on the FOV
pl_velocityInterpAirControlScale description=Use velocity based interpolation method with gravity adjustment
pl_visorMesh description=Overrides the visor mesh used for different aspect ratios.
0: Dynamically changes depending on the screen aspect ratio
1:  4:3 (11: flat version)
2: 16:9 (12: flat version)
3: 21:9 (13: flat version)
4: 32:9 (14: flat version)
5: 48:9 (15: flat version)

pl_visorMeshHeight description=Sets the height for the visor mesh for correct aligment
pl_visorReticleModelScale description=Scale the scanning and missile locked animation
pl_visor_markerAR.emergency_stop description=STOP using new Visor/Lens on game mode load; for full instructions please read https://cloudimperiumgames.atlassian.net/wiki/spaces/LIB/pages/3830874206/UI+-+Ship+HUD+-+Enable+by+default
pl_visor_markerAR.enabled description=Enables new implementation of Visor UI in AR (also needs `v_flightController.projection_prototype_enabled`). 
 - 0 = Disabled 
 - 1 = Game mode default 
 - 2 = Force Enable 
 - 3 = Enable AR and also show projection prototype
pl_visor_markerAR.hud_display_alignment_type description=-1: as provided: 0: NoRotation, 1: AngledToPitchSource, 2: AngledToView, 3. AngledToYawLineOrigin 
pl_visor_markerAR.hud_display_enabled description=< 0: as provided, 0: off, 1: on.
pl_visor_markerAR.hud_display_pitch_offset description=Sets a custom pitch angle from the forward view. Requires hud_display_use_cvar_offsets to be set, otherwise it will not be active.
pl_visor_markerAR.hud_display_use_cvar_offsets description=0: no, 1: Use offsets from CVARs.
pl_visor_markerAR.hud_display_yaw_offset description=Sets a custom yaw angle from the forward view. Requires hud_display_use_cvar_offsets to be set, otherwise it will not be active
pl_visor_markerAR.hud_pitch_ladder_centers_alignment_type description=-1: as provided: 0: NoRotation, 1: AngledToPitchSource, 2: AngledToView, 3. AngledToYawLineOrigin 
pl_visor_markerAR.hud_pitch_ladder_centers_enabled description=-1: as provided: 0: force off, 1: force on.
pl_visor_markerAR.hud_pitch_ladder_enable_zero_pitch_element description=< 0: as provided, 0: disable zero pitch, 1: enable zero pitch.
pl_visor_markerAR.hud_pitch_ladder_increments description=< 0: as provided, otherwise (between 0 and 90) sets custom increments.
pl_visor_markerAR.hud_pitch_ladder_labels_alignment_type description=-1: as provided: 0: NoRotation, 1: AngledToPitchSource, 2: AngledToView, 3. AngledToYawLineOrigin 
pl_visor_markerAR.hud_pitch_ladder_labels_enabled description=-1: as provided: 0: force off, 1: force on.
pl_visor_markerAR.hud_pitch_ladder_labels_position_type description=-1: as provided: 0: OnAngle, 1: OnYawLine.
pl_visor_markerAR.hud_pitch_ladder_sides_alignment_type description=-1: as provided: 0: NoRotation, 1: AngledToPitchSource, 2: AngledToView, 3. AngledToYawLineOrigin 
pl_visor_markerAR.hud_pitch_ladder_sides_enabled description=-1: as provided: 0: force off, 1: force on.
pl_visor_markerAR.hud_pitch_ladder_sides_position_type description=-1: as provided: 0: OnAngle, 1: OnYawLine.
pl_visor_markerAR.hud_yaw_line_anchor_type description=-1: as provided: 0: Forward, 1: 2: World.
pl_visor_markerAR.hud_yaw_line_enabled description=< 0: as provided, 0: off, 1: on.
pl_visor_markerAR.hud_yaw_line_end_angle description=< 0: as provided, otherwise (between 0 and 180) sets custom horizontal offset for the main yaw line.
pl_visor_markerAR.hud_yaw_line_fixed_angle description=Fixed angle when pl_visor_markerAR.hud_yaw_line_fixed_to_angle is set to 1.
pl_visor_markerAR.hud_yaw_line_fixed_to_angle description=< 0: as provided, 0: off, 1: on.
pl_visor_markerAR.hud_yaw_line_start_angle description=< 0: as provided, otherwise (between 0 and 180) sets custom horizontal offset for the main yaw line.
pl_visor_markerAR.hud_yaw_line_ticks_alignment_type description=-1: as provided: 0: NoRotation, 1: AngledToPitchSource, 2: AngledToView, 3. AngledToYawLineOrigin 
pl_visor_markerAR.hud_yaw_line_ticks_border_fade_angle description=< 0:  as provided, otherwise sets a custom fade which is used to fade out the ticks when they reach the border.
pl_visor_markerAR.hud_yaw_line_ticks_enabled description=< 0: as provided, 0: off, 1: on.
pl_visor_markerAR.hud_yaw_line_ticks_forward_fade_end_angle description=< 0:  as provided, otherwise sets a custom fade end angle for fading the ticks. This is based on the offset to the forward pitch angle! This is based on the pitch angle! Should be bigger than the start angle!
pl_visor_markerAR.hud_yaw_line_ticks_forward_fade_start_angle description=< 0: as provided, otherwise sets a custom fade start angle for fading the ticks. This is based on the offset to the forward pitch angle! Should be smaller than the end angle!
pl_visor_markerAR.hud_yaw_line_ticks_full_circle description=< 0: as provided, 0: off, 1: on.
pl_visor_markerAR.hud_yaw_line_ticks_increment description=<= 0: as provided, otherwise overwrites the tick increments on the yaw line.
pl_visor_markerAR.hud_yaw_line_ticks_increment_visual_ratio description=< 0: as provided, otherwise custom ratio between 0.01 and 1.
pl_visor_markerAR.infinity description=Distance far away enough to visually consider 'infinity'
pl_visor_markerAR.infinity_close_projection description=Distance from player to place markers that are projected to infinity
pl_weaponRaise.enableLowerOnFriendlyActors description=enable/disable weapon lowering animation when aiming friendly actors
0 = disabled, 1 = enabled if allowed by game mode, 2 = unconditionally enabled
pl_weaponRaise.enableLowerOnFriendlyEntities description=enable/disable weapon lowering animation when aiming friendly entities and kiosk
0 = disabled, 1 = enabled if allowed by game mode, 2 = unconditionally enabled
playerStats.friendlyFireEnabled description=Enable/Disable Friendly Fire. Usage: playerStats.friendlyFireEnabled <0 or 1> -- Default: Toggles Playable Areas
playerStats.log description=Enable/Disable StandardPlayerStats logging
playerStats.svfriendlyFireEnabled description=(Authority only) Enable/Disable Friendly Fire
pm_AsyncPrepare description=Enables async preparation of events. [0..1] 0: blocking, 1:async 
pm_CachingEnabled description=Enables event caching feature
pm_PreloadGlobalBanks description=Global (autoload) preload setting.
Usage: s_PreloadGlobalBanks [0..2]
The usage of this differs depending on the value of s_UsePrepareEvent
If s_UsePrepareEvent is 0 (banked media mode):
  0: don't preload any banks
  1: load all banks that have AutoLoad set in their ATL files
  2: load _all_ banks regardless of AutoLoad setting 
If s_UsePrepareEvent is 1 (loose media mode):
  0: don't prepare any events up front
  1: prepare all events for banks that have AutoLoad set in their ATL files
  2: prepare all events for all banks, regardless of AutoLoad setting
NOTE: ALL banks will be loaded up front when s_UsePrepareEvent is 1

pm_PrepareDelaySecs description=Prepare delay
pm_PrepareEventPoolHeadRoom description=Sets the amount of headroom the PreloadManager tries to maintain in the Prepare Event Pool.
Usage: s_PrepareEventPoolHeadRoom [0/...]
Default PC: 32Mb, XboxOne: 32, PS4: 32, Linux: 32

pm_UnprepareDelay description=Unprepare delay, in seconds
pm_UsePrepareEvent description=Specifies whether events will attempt to be prepared. Use this in conjunction with banks with loose media.
Note: don't use with banked media as the media will be loaded into memory twice! Once in the BankMediaPool and once in the PrepareEventPool.
Usage: s_WwiseUsePrepareEvent [0/1]
Default PC: 1(events will be prepared), NA for other platforms ATM

pp_RSFDebugWrite description=When RichSaveGames are enabled, save plain XML Data alongside for debugging
pp_RSFDebugWriteOnLoad description=When RichSaveGames are enabled, save plain XML Data alongside for debugging when loading a savegame
pp_RebindKeys description=Rebinds controls using specified XML file.
If no file is specified it will try to reset the controls bindings to the default.
Input: pp_RebindKeys <file>
Alternatively, use it to export any active remappings.
Input: pp_RebindKeys export <type> <index>
pp_ResortDevices description=Swap all actions assigned to one device with another.
Input: pp_ResortDevices <type> <id1> <id2>
Note: Currently the only supported type is joystick.
pp_RichSaveGames description=Enable RichSaveGame Format for SaveGames
preferred_region_id description=Set client's region_id. 0:Any, 1:US, 2:EU, 3:AU
preloadforstats description=Preload multiplayer assets for memory statistics.
profile description=Enable predefined frame history configuration and frameprofiler window
	0: Disabled
	1: Self Time of Functions on Main Thread
	6: Subsystem on Main Thread

profileStreaming description=Profiles streaming of different assets.
Usage: profileStreaming [0/1/2]
	1: Graph displayed as points.	2: Graph displayed as lines.Default is 0 (off).
profile_all_threads description=Disable Frame History ThreadGroup filter (same as calling 'profile_filter_thread -1')
profile_filter_devteam description=Set Frame History DevTeam filter by name or id (-1 implies no filter)
profile_filter_subsystem description=Set Frame History Subsystem filter by name or id (-1 implies no filter)
profile_filter_thread description=Set Frame History ThreadGroup filter by name or id (-1 implies no filter)
profile_mode description=Set Frame History Mode by id
profile_smooth description=Profiler exponential smoothing interval (seconds)
profile_weighting description=Profiler smoothing mode: 0 = legacy, 1 = average, 2 = peak weighted, 3 = peak hold
pu_editing description=Enable all persistent universe specific tools. Default: 0
q_Quality description=If called with a parameter it sets the quality of all q_.. variables
otherwise it prints their current state
Usage: q_Quality [0=low/1=med/2=high/3=very high]
q_ShaderCompute description=Defines the shader quality of Compute
Usage: q_ShaderCompute 0=low/1=med/2=high/3=very high (default)
q_ShaderFX description=Defines the shader quality of FX
Usage: q_ShaderFX 0=low/1=med/2=high/3=very high (default)
q_ShaderGeneral description=Defines the shader quality of General
Usage: q_ShaderGeneral 0=low/1=med/2=high/3=very high (default)
q_ShaderGlass description=Defines the shader quality of Glass
Usage: q_ShaderGlass 0=low/1=med/2=high/3=very high (default)
q_ShaderParticle description=Defines the shader quality of Particle
Usage: q_ShaderParticle 0=low/1=med/2=high/3=very high (default)
q_ShaderPostProcess description=Defines the shader quality of PostProcess
Usage: q_ShaderPostProcess 0=low/1=med/2=high/3=very high (default)
q_ShaderProjectedDecal description=Defines the shader quality of ProjectedDecal
Usage: q_ShaderProjectedDecal 0=low/1=med/2=high/3=very high (default)
q_ShaderProjectedWaterDecal description=Defines the shader quality of ProjectedWaterDecal
Usage: q_ShaderProjectedWaterDecal 0=low/1=med/2=high/3=very high (default)
q_ShaderShadow description=Defines the shader quality of Shadow
Usage: q_ShaderShadow 0=low/1=med/2=high/3=very high (default)
q_ShaderSky description=Defines the shader quality of Sky
Usage: q_ShaderSky 0=low/1=med/2=high/3=very high (default)
q_ShaderWater description=Defines the shader quality of Water
Usage: q_ShaderWater 0=low/1=med/2=high/3=very high (default)
q_obstacle.PhysicsDrawEnabled description=Short cut to enable the physics debugger settings for quantum obstacles: Enables the physics debugger by setting p_draw_helpers srR_qv and p_cull_distance to 5 seconds at 0.1c. 
1. Enabled (p_draw_helpers srR_qv and p_cull_distance to 150,000,000m) 
0. disabled (p_draw_helpers 0 and p_cull_distance to 250m) /n
q_obstacle.debug_enabled description=If enabled, draws positions of quantum obstacles.
quit description=Quits the game
r.CachedRenderChunkMerging description=Allows caching of merged RenderChunks.
0: Off
1: On
r.CachedRenderingParams.CacheDuration description=The amount of frames we keep the cache around without it being rendered.
Low number - Lower memory, worse performance. High Number - the opposite.
-1 never clear (until the object is destroyed).
r.ComputeSkinning.CorrectiveBudget description=Memory budget for GPU-skinning corrective bshapes in MiB.

r.ComputeSkinning.Debug description=Debugging modes for compute skinning.
0: Disabled
1: Display Batch submission
2: Display Corrective BShapes
3: Debug Tangent Reconstruction

r.ComputeSkinning.OutBufferBudget description=Memory budget for GPU-skinning output buffers in MiB.

r.DebugForceMetallic description=Converts diffuse reflectance to added specular, for debugging specular lighting effects
r.DebugRenderStage.IncludeTransparents description=Toggles transparent draws being included in r.DebugRenderStage.ObjectMode
r.DebugRenderStage.ObjectMode description=0: Debug Off
1: White Wireframe
2: White Wireframe Occluded
3: White Wireframe Overlay
4: Mip Sampled as Color
5: Texels Per Meter (controlled by r_TexelsPerMeter)
6: CPU Texels Per Meter (controlled by r_TexelsPerMeter)
7: Ratio of GPU to CPU texels per meter
8: Surface Type as debug gradient (Magenta for unassigned)
9: Flipped UVs (Green Normal, Red Inverted)
10: Decal Mode (Decal = Green; Water Decal = Blue)
11: Decal Overdraw Mode
r.DepthPrepassStage description=Enables/Disables the DepthPrepass Stage.
r.FixedPipelineStage description=Enables/Disables the Fixed Pipeline Stage.
r.ForwardStage description=Enables/Disables the entire Forward Stage.
r.ForwardStage.HDRSky description=Enables/Disables all HDRSky rendering in the ForwardStage.
r.ForwardStage.LightBeams description=Enables/Disables all LightBeam rendering in the ForwardStage.
r.ForwardStage.Opaque description=Enables/Disables the Opaque rendering in the ForwardStage.
r.ForwardStage.Particles description=Enables/Disables all Particle rendering in the ForwardStage.
r.ForwardStage.ParticlesCPU description=Enables/Disables all CPU Particle rendering in the ForwardStage.
r.ForwardStage.ParticlesGPU description=Enables/Disables all GPU Particle rendering in the ForwardStage.
r.ForwardStage.PlanetPatches description=Enables/Disables all PlanetPatch rendering in the ForwardStage.
r.ForwardStage.Polygons description=Enables/Disables all Polygon rendering in the ForwardStage.
r.ForwardStage.Transparent description=Enables/Disables the Transparent rendering in the ForwardStage.
r.ForwardStage.WaterVolumes description=Enables/Disables all WaterVolume rendering in the ForwardStage.
r.GBufferStage description=Enables/Disables the entire GBuffer Stage.
r.GBufferStage.Planets description=Enables/Disables the planet rendering in the GBuffer Stage.
r.GBufferStage.ProjectedDecals description=Enables/Disables the projected decal rendering in the GBuffer Stage.
r.GBufferStage.RenderMeshes description=Enables/Disables the rendermesh rendering in the GBuffer Stage.
r.GBufferStage.SkinnedRenderMeshes description=Enables/Disables the skinned rendermesh rendering in the GBuffer Stage.
r.GI description=Activate global illumination
0 - Off
1 - On (diffuse only)
2 - On (diffuse + black specular) 

r.GI.Bounce.Primary description=What type of rays to use for first bounce (hardware will be downgraded to software if hardware is not supported)
1 - Software
2 - Hardware

r.GI.Bounce.Secondary description=What type of rays to use for second bounce (hardware will be downgraded to software if hardware is not supported)
0 - None
1 - Software
2 - Hardware

r.GI.Bounce.SoftwareMode description=What kind of light storage to use for software bounces
0 - Sample directly from environment probes
1 - Sample live cubemap light atlas
2 - Sample spatial hash (emulate hardware GI cache)
r.GI.BruteForce.TemporalFilterSpeed description=Speed of screen-space temporal filter: 0 = infinite accumulation, 1 = no accumulation (new samples have minimum (1/x - 1) weight)

r.GI.Cache.BucketCount description=Number of hash-map buckets in the world-space GI Cache.

r.GI.Cache.CompactBuckets description=Compact cache bucket contents to avoid orphaning higher indices when lower ones are removed. Very small additional cost (~.02ms)

r.GI.Cache.DebugUsage.BucketHeight description=How tall (in pixels) to draw a bucket

r.GI.Cache.DebugUsage.BucketWidth description=How wide (in pixels) to draw a bucket

r.GI.Cache.EvictionFrames description=How many frames to keep an untouched cache entry before evicting it

r.GI.Cache.JitterScale description=Radiance cache jitter relative to cell size

r.GI.Cache.MinCellSize description=Position quantization in GI Hash (in meters at MinCellSizeDistance from the camera and below).

r.GI.Cache.MinCellSizeDistance description=Distance at which cache cells begin to grow beyond MinCellSize

r.GI.Cache.TemporalFilterSpeed.Direct description=Speed of temporal filter: 0 = infinite accumulation, 1 = no accumulation (accumulated sample weight is clamped to (1/x - 1)) 

r.GI.Cache.TemporalFilterSpeed.Indirect description=Speed of temporal filter: 0 = infinite accumulation, 1 = no accumulation (accumulated sample weight is clamped to (1/x - 1)) 

r.GI.Cache.Uncertainty.Decay description=0-1 decay multiplier on sample uncertainty (for indirect lighting) caused by direct lighting changes. Lower = faster

r.GI.Cache.Uncertainty.Sensitivity description=Sensitivity multiplier on indirect lighting uncertainty values. Higher values mean lower "activation energy" to trigger faster updates of cells

r.GI.CubeCache.RaysPerUpdate description=How many indirect bounce rays to evaluate per update of a cube-cache texel

r.GI.CubeCache.Resolution description=Per-face resolution of the cubemap lighting cache

r.GI.CubeCache.TemporalFilterSpeed.Direct description=Speed of temporal filter: 0 = infinite accumulation, 1 = no accumulation (accumulated sample weight is clamped to (1/x - 1)) 

r.GI.CubeCache.TemporalFilterSpeed.Indirect description=Speed of temporal filter: 0 = infinite accumulation, 1 = no accumulation (accumulated sample weight is clamped to (1/x - 1)) 

r.GI.CubeCache.Uncertainty.Decay description=0-1 decay multiplier on sample uncertainty (for indirect lighting) caused by direct lighting changes. Lower = faster

r.GI.CubeCache.Uncertainty.Sensitivity description=Sensitivity multiplier on indirect lighting uncertainty values. Higher values mean lower "activation energy" to trigger faster updates of cells

r.GI.CubeCache.UpdatesPerFrame description=How many pixels of the cube cache to light per frame

r.GI.Cull.EnablePortalCulling description=Whether to do (spherical) portal culling when searching for global illumination contributors

r.GI.Cull.Radius description=What radius to search for global illumination contributors

r.GI.Debug.Cache description=0: Off
1: Draw debug overlay of hash table occupancy.
2: Draw bounding boxes of cache entries

r.GI.Debug.DisableRayTracing description=Force-disable ray-tracing, i.e. emulate software-only mode

r.GI.Debug.FurnaceTest description=Force all traced rays to return intensity 1 white

r.GI.Debug.ProbeGrid.Freeze description=Freeze probe grid to current camera location

r.GI.Debug.ProbeGrid.Mode description=Debug the zone-space probe grid(s)
0: Off
1: Unfiltered Front-face
2: Unfiltered Back-face
3: Unfiltered 2D Chart
4: Spherical Harmonics Front-face
5: Spherical Harmonics Back-face
6: Spherical Harmonics 2D Chart

r.GI.Debug.Rays description=0: Off
1: Mark ray hits
2: Draw full rays

r.GI.Debug.Rays.Color description=0: Green 
1: Show shading result

r.GI.Debug.Rays.MaxBounceDepth description=Max ray bounce depth to show in debug view

r.GI.Debug.Rays.MinBounceDepth description=Min ray bounce depth to show in debug view

r.GI.Debug.ScreenCache description=Debug overlays for the screen probe cache
0: Off
1: On

r.GI.Debug.ScreenCache.Scale description=Scaling on the screen probe cache debug views.
r.GI.Debug.ScreenFilters description=0: Off
1: Original diffuse GI
2: Filtered diffuse GI
3: Diffuse luminance delta
4: Diffuse history sample count
5: Interpolation mask before accumulation
6: Interpolation mask after accumulation
7: Specular reflection colors
8: Specular reflection directions
9: Filtered specular
10: Specular history sample count
11: Specular fireflies

r.GI.Debug.ScreenPixel description=Debug overlays for the pixel that the mouse is hovering over
0: Off
1: Interpolation weights
2: Spatial filter weights

r.GI.Debug.ScreenProbes description=0: Off
1: Blended irradiance
2: Diffuse probes (SH)
3: Diffuse probes (octmap)
4: Chrome probes (SH)
5: Chrome probes (octmap)
6: Octmap radiance
7: Octmap depth
8: Probe age
9: Probe reuse
10: Cache reuse
11: Cache tile occupancy
12: Occlusion cones
13: Probe data
14: Probe lookup mask

r.GI.Debug.ScreenProbes.ClearAllTempBuffers description=Manually clear all temporary buffers every frame to help track down uninitalized data

r.GI.Debug.ScreenProbes.DrawGrid description=Draw grid lines at screen probe borders when debug is enabled

r.GI.Debug.ScreenProbes.GatherInterval description=Run the sampling & filtering passes for screen space probes every n frames

r.GI.Debug.ScreenProbes.JitterInterval description=Change the jitter of screen space probe capture/interpolation positions every n gathers

r.GI.Debug.ScreenProbes.MaxFrameCount description=Stop gathering more samples when a screen probe has n frames of gathers

r.GI.Debug.ScreenQueue description=Debug overlays for screen probes being processed this frame
0: Off
1: Queue entries
2: Probe positions

r.GI.Debug.ScreenQueue.Scale description=Scaling on the screen probe queue debug views.
r.GI.Debug.ScreenTrace description=Debug overlays for screen traces
r.GI.Debug.ScreenVectors description=1: Reprojection vectors (dark orange = prev pos, yellow = reprojected pos)

r.GI.Debug.ScreenVectors.Density description=Draw screen vectors for every nth probe to reduce clutter. <=1 = draw vectors for every probe

r.GI.Debug.ScreenZoom description=Zoom debug output at the mouse cursor's position by the given factor

r.GI.Debug.Specular description=0: Off
1: Debug Gloss Ranges
2: Debug Reprojection

r.GI.Debug.Transparency.Freeze description=Freeze transparency volume to current camera location

r.GI.Debug.Transparency.Mode description=Debug the transparency froxel probes
0: Off
1: Radiance probes (front-face)
2: Radiance probes (back-face)
3: Radiance probes (2D Chart)
4: Irradiance probes (front-face)
5: Irradiance probes (back-face)
6: Irradiance probes (2D Chart)

r.GI.Debug.Transparency.Slice description=Which slice of the transparency volume to debug-draw (-1 for all slices)

r.GI.Debug.ViewGeometry description=View the GI geometry as it appears to the current traversal mode (e.g. ray-tracing, software-tracing)
0: Off
1: Lit Color
2: Color retrieved from light-cache
3: Surface Albedo
4: Light-cache uncertainty
5: Random-color cache cells (or texels)
6: Random-color cache tiles (or texture slices)
7: Surface Diffuse
8: Surface Specular
9: Surface Emissive
10: Visarea ID (random color)
11: Lighting Model (emissive. transmissive, etc)

r.GI.EnvProbes.AcceptanceMargin description=Extra safety margin (in meters) when comparing probe GBuffer depth against projection bounds and deciding whether to trace out of it

r.GI.EnvProbes.SearchDistance description=Distance in meters that a ray can search out of one probe and into another (when using Env-probe lighting)

r.GI.LightingRepeat description=Repeat the GI lighting stage multiple times to get faster response (expensive)

r.GI.Lights.CellCount description=Number of cells in the light/env-probe lookup

r.GI.Lights.EnableThisAreaOnly description=Enable lights marked as "This Area Only" to only affect surfaces inside their own VisArea.

r.GI.Lights.EnvProbeLookup.BigLightSize description=Maximum size of a probe before it's no longer divided into cells (smaller values means less hash-map usage but more lights linear-searched)

r.GI.Lights.EnvProbeLookup.Cascade0CellsToRange description=Number of cells in the range of environment probe lookup's cascade 0 (must be power of 2)
Total number of cells in cascade 0 will be (n*2)^3

r.GI.Lights.EnvProbeLookup.Cascade0Range description=Range to end of environment probe lookup's cascade 0

r.GI.Lights.EnvProbeLookup.CullRatio description=Ratio to cull onvironment probe from environment probe lookup. Any probe with an extent less than this ratio compared to a cascade tile will be culled

r.GI.Lights.EnvProbeLookup.Size description=Number of entries in the env-probe lookup structure

r.GI.Lights.LightCellSize description=Size (in meters) of a hash-cell in the light lookup structure

r.GI.Lights.LightLookup.BigLightSize description=Maximum size of a light before it's no longer divided into cells (smaller values means less hash-map usage but more lights linear-searched)

r.GI.Lights.LightLookup.Cascade0CellsToRange description=Number of cells in the range of light lookup's cascade 0 (must be power of 2)
Total number of cells in cascade 0 will be (n*2)^3

r.GI.Lights.LightLookup.Cascade0Range description=Range to end of light lookup's cascade 0

r.GI.Lights.LightLookup.CullRatio description=Ratio to cull lights from light lookup. Any light with an extent less than this ratio compared to a cascade tile will be culled

r.GI.Lights.LightLookup.Size description=Number of entries in the light lookup structure

r.GI.Lights.MaxEnvProbes description=Max number of environment probes that can be submitted to GI at once

r.GI.Lights.MaxLights description=Max number of lights that can be submitted to GI at once

r.GI.Lights.MaxShadows description=Max number of shadows (including fourier shadows) that can be submitted to GI at once

r.GI.Lights.SoftwareShadowBias description=Constant depth-bias (in meters) to counteract inaccuracy in the software-tracing scene representation

r.GI.Lights.SortShadingRequests description=Sort shading requests for performance

r.GI.MaterialBuffer.Clear description=Clears material buffer (cvar resets after clear)
1: Black
2: Pink

r.GI.MaterialBuffer.EnablePerVertexData description=Enable certain meshes to use per vertex material data

r.GI.MaterialBuffer.PerVertexBudgetMB description=Memory available for per vertex data in the material buffer
r.GI.MaterialBuffer.TempBudgetMB description=Memory available for temporary per vertex data allocations needed when calculating per object material data
r.GI.Materials.EnableLightLinks description=Enable light links
r.GI.ProbeGrid.CellSize description=Distance between probes in the zone-space probe atlas

r.GI.ProbeGrid.NumCascades description=How many power-of-two cascades to add finer detail

r.GI.ProbeGrid.NumDownsamples description=Pow-2 downsample size from full-res probes to filtered texture

r.GI.ProbeGrid.ProbeResolution description=Square resolution of one probe in the zone-space probe atlas

r.GI.ProbeGrid.UpdatesPerFrame description=How many zone-space probes to update per frame

r.GI.ProbeGrid.ValidateIndexing description=Check all probe grid indices/allocations for duplicate/orphaned values

r.GI.Rays.Binning description=Enable ray-binning

r.GI.Rays.Binning.NumAngularBins description=Number of bins for ray-binning (will be rounded up to power of 2)

r.GI.Rays.Binning.NumSpatialBins description=Number of bins for ray-binning (will be rounded up to power of 2)

r.GI.Rays.MaxDistance description=Default max distance for a ray (should be enough to escape the RT scene but not enough to miss the sky cubemap)

r.GI.Rays.SharpReflectionThreshold description=Ray divergence value below which we use per-ray direct light value instead of radiance cache

r.GI.ScreenCache.DisableReuse description=Disable screen cache entry reuse/updates for debugging
r.GI.ScreenCache.MaxAge description=Max frames since last update on screen probe cache entries before they're discarded.
r.GI.ScreenCache.Mode description=Enable cache of evicted screen space probes
1: Single dedicated entry per tile (no motion reprojection)
2: General queue of most recently used entries from the entire frame

r.GI.ScreenCache.Scale description=Screen cache size as a fraction of the regular screen probe count
r.GI.ScreenFilters description=Enable denoising of the final screenspace GI
0 - Off
1 - On

r.GI.ScreenFilters.Accumulate description=Enable temporal accumulation of final screenspace GI

r.GI.ScreenFilters.Denoise description=Enable spatial denoising of final screenspace GI

r.GI.ScreenProbes.BaseRenderHeight description=Calculate screen probe density based on the given render height to maintain performance at higher screen resolutions
r.GI.ScreenProbes.ClampSamples description=Clamp ray results to hide NaNs/negatives
r.GI.ScreenProbes.DirOcclusionMode description=Enable directional occlusion on screen space probe irradiance
0: Off
1: Bent normal with darkened hemisphere
2: Only darken based on cone angle

r.GI.ScreenProbes.FireflyFilter description=Enable firefly filtering of screen space probes
1: Filter diffuse probes with few samples

r.GI.ScreenProbes.JitterMode description=Enable temporal jitter of screen space probes. Set as a combination of bitflags
-1: Enable all jitters
 1: Jitter probe capture positions
 2: Jitter probe capture orientations
 4: Jitter final interpolation positions

r.GI.ScreenProbes.RayMinDistance description=Minimum distance for ray queries (to avoid self intersections or hitting floating decals)
r.GI.ScreenProbes.Reprojection description=Enable reprojection of screen probe data based on camera motion + motion vectors
0: Off
1: On
2: Single threaded variant for debugging

r.GI.ScreenProbes.Reprojection.NormalChecks description=Use normal based checks for probe rejection

r.GI.ScreenProbes.SamplingMode description=Sampling mode when generating rays for screen probes
0: Uniform sampling
1: Importance sample brighter octmap texels
2: Balance between mode 1 and specular BRDF based on surface brightness

r.GI.ScreenProbes.SpatialFilter description=Enable spatial filtering of screen space probes
1: Filter probes that were sampled this frame
2: Filter all probes

r.GI.ScreenProbes.SpatialFilter.AngleChecks description=Check for parallax/angle errors during spatial filtering
0: Off
1: Unclamped angle checks
2: Clamp hit distances to preserve contact shadows

r.GI.ScreenProbes.Subsample.Count description=Number of probes to sample in each N x N region each frame

r.GI.ScreenProbes.Subsample.Factor description=Size of temporal subsampling regions (N tile x N tile squares)

r.GI.ScreenProbes.TemporalFilterSpeed description=Speed of screen-space temporal filter with clamped average blend mode
0 = infinite accumulation, 1 = no accumulation (accumulated sample weight is clamped to (1/x - 1))

r.GI.ScreenProbes.TemporalMode description=Blend mode for temporal accumulation of screen space probes
0: Off
1: Clamped exponential average
2: Biased shadow-preserving blend

r.GI.ScreenSpaceMode description=What technique to use for global illumination in screen space
0 - Disable / Black GI
1 - Brute force
2 - ReSTIR
3 - Screen Probes

r.GI.ScreenTrace description=Whether trace requests will try to use screen traces before handing off to world traces
r.GI.Specular description=Enable or disable GI system specular
0: Use old specular (i.e. env-probes)
1: Use GI specular (where possible)
2: Use GI specular and disable old specular (for dev purposes)
-1: Disable old specular but don't render new specular (for dev purposes)

r.GI.Specular.CleanupFireflies description=On/off firefly cleanup pass before filtering

r.GI.Specular.CleanupFireflies.FullRes.CleanupRadius description=Search radius for firefly removal pass, in pixels
(used when not upscaling)

r.GI.Specular.CleanupFireflies.FullRes.HighThreshold description=Threshold for bright fireflies to be marked for removal
(used when not upscaling)

r.GI.Specular.CleanupFireflies.FullRes.LowThreshold description=Threshold for dark fireflies to be marked for removal
(used when not upscaling)

r.GI.Specular.CleanupFireflies.FullRes.MarkRadius description=Search radius for firefly marking pass, in pixels
(used when not upscaling)

r.GI.Specular.CleanupFireflies.HalfRes.CleanupRadius description=Search radius for firefly removal pass, in full-res pixels
(used when upscaling)

r.GI.Specular.CleanupFireflies.HalfRes.HighThreshold description=Threshold for bright fireflies to be marked for removal
(used when upscaling)

r.GI.Specular.CleanupFireflies.HalfRes.LowThreshold description=Threshold for bright fireflies to be marked for removal
(used when upscaling)

r.GI.Specular.CleanupFireflies.HalfRes.MarkRadius description=Search radius for firefly marking pass, in full-res pixels
(used when upscaling)

r.GI.Specular.Denoise description=Denoise mode for specular GI
0 - No Denoise
1 - Split-ratio estimator
2 - A-Trous bilateral filter

r.GI.Specular.Denoise.Atrous.NumPasses description=How many passes to use in the A-trous filter (Min 2)

r.GI.Specular.Denoise.FullRes.FilterRadius description=Specular spatial denoise radius in pixels
(used when not upscaling)

r.GI.Specular.Denoise.HalfRes.FilterRadius description=Specular spatial denoise radius in full-res pixels
(used when upscaling)

r.GI.Specular.HalfRes description=Render parts of specular GI at half resolution and upscale

r.GI.Specular.MidGlossBoundary description=GBuffer gloss value where we switch to low-gloss GI mode

r.GI.Specular.MidGlossFade description=Fade range around LowGloss boundary

r.GI.Specular.Temporal description=Enable temporal filtering of specular GI

r.GI.Supported description=Allows global illumination to be enabled at runtime
0 - Off
1 - On

r.GI.Transparency description=Enable GI support for transparent objects

r.GI.Transparency.DepthResolution description=Number of depth slices in the GI transparency volume

r.GI.Transparency.FarDist description=Range of the GI transparency volume (in meters)

r.GI.Transparency.NearDist description=Range of the GI transparency volume (in meters)

r.GI.Transparency.ProbeResolution description=Square resolution of a GI transparency volume probe (4 or 8)

r.GI.Transparency.TemporalFilterSpeed description=Speed of temporal filter: 0 = infinite accumulation, 1 = no accumulation (accumulated sample weight is clamped to (1/x - 1)) 

r.GI.Transparency.VerticalResolution description=Number of tiles on the vertical axis in the GI transparency volume (size will be rounded up to the nearest pixel)

r.GamePostEffectsStage description=Toggles game post effect stage
0: Disabled
1: Enabled

r.GraphicsPipeline.AllowAsyncMatPermutationCompilation description=0: Stall for fallbacks and demanded permutation
1: Stall for demanded permutation
2: (Default) Don't stall
r.GraphicsPipeline.AllowAsyncShaderCompilation description=Allow Async Compilation of Shaders at the cost of wrong looking rendering. The default (0) will instead stall the game still the shader is compiled
r.GraphicsPipeline.SkipRedundantDeviceStateChanges description=Set to 1 to skip redundant calls to the GPU device
r.GraphicsRenderer description=Set Graphics API to use for rendering.
0 = Direct3D 11 (Default)
1 = Vulkan

r.HardwareRayTracing description=Enable hardware-accelerated ray tracing if available.

r.ImposterStage description=Control visibility of Imposters.
 0: Off
 1: On if no composite flare
r.ImposterStage.AlwaysOn description=Always render Distant Imposters (useful for debugging bulb size)
r.ImposterStage.AngleFalloff description=Angle falloff rate for flares at edge of projectors/area lights (0 = instant)
r.ImposterStage.FadeInPowCurve description=Pow Curve applied to fade in of imposters
r.ImposterStage.FadeInWidth description=Width in pixels at which Distant Imposters begin to render
r.ImposterStage.FadeOutPowcurve description=Pow Curve applied to fad out of imposters
r.ImposterStage.Multiplier description=Applies a brightness multiplier to Distant Imposters
r.ImposterStage.Width description=Minimum width in pixels of Distant Imposters, at this width they become squares
r.LegacyLensOpticsStage description=Toggles composited lens flare stage
0: Disabled
1: Enabled

r.LegacyOptics.HDR description=Toggles legacy optics going through the HDR pipeline
r.LegacyOptics.HDR.Brightness description=Brightness adjust applied to non-HDR flares when they're rendered directly to the HDR target
r.LegacyOptics.HDR.Gamma description=Gamma curve applied to non-HDR flares when they're rendered directly to the HDR target
r.MeshAggregate.MergeRenderParams description=MeshAggregate: Merges StatObj_RenderParams of the bound MeshRenderObject children when possible.
0: Off
1: On
r.Ocean.Caustics description=Toggles advanced water caustics for oceans and rivers.
Usage: r.Ocean.Caustics [0/1]
Default is 1 (enabled). 0 - disables.
r.Ocean.CausticsIntensity description=Water caustics intensity for oceans and rivers.
Usage: r.Ocean.CausticIntensity [f]
Default is 16.0
r.PSOCacheGen description=Enables/Disables the PSOCacheGen (Also stops PSO compilation at runtime if turned off)
r.PSOCacheGen.CompileShaders description=Compiles shaders before PSO creation. If turned off PSO will skipped if not all shaders are compiled.
r.PSOCacheGen.DebugConvertBinToText description=Converts the binary file to a human readable text format. Tries from P4K first, then from USER./n1: Convert all pipelines./n2:Skip invalid and not matching sys-specs.
r.PSOCacheGen.DebugConvertTextToBin description=Converts the text file (e.g. created with r.PSOCacheGen.TextMode) into the binary (.pso) format.
r.PSOCacheGen.DebugLog description=Enables extensive logging for the PSOCacheGen
r.PSOCacheGen.DisplayProgress description=Displays the progress on screen
r.PSOCacheGen.LogCacheMisses description=Logs PSOCache Misses in a file
r.PSOCacheGen.Multithreaded description=If turned on all available background workers are used to process PSOs in parallel.
r.PSOCacheGen.RunOnStart description=Immediately start compiling PSOs as soon as possible when the engine starts
r.PSOCacheGen.RunOncePerBuildAndSysSpec description=Kicks the PSOCacheGen only once per build-sysspec combination unless the driver cache becomes invalid as well.
r.PSOCacheGen.SendRequestLineInterval description=The amount of time in seconds which has to pass until we send a new pso request to the server. Note: Outdated entries are only getting deleted on startup.
r.PSOCacheGen.TextMode description=Runs the PSOCacheGen in text mode which creates a human readable form of all pipelines. Set to 2 to disable the background job processing of writing out the file (very expensive with janson!)
r.PSOCacheGen.WriteNewPipelines description=Whether the PSOCacheGen writes out new pipelines to disk or not. Useful for testing.
r.ParticleLightAtlasStage description=Enables/Disables the Particle LightAtlas Stage.
r.ParticleLightAtlasStage.Debug description=Sets particle light atlas to static color.
0: Normal
1: Black
2: White

r.ParticleStage.MergeField description=Enables/Disables Merge Field Pass in the Particle Stage.
r.ParticleStage.MoveRingBuffers description=Enables/Disables Move Ring Buffers Pass in the Particle Stage. Set to 2 to dummy execute it each and every frame which does nothing (useful for renderdocs).
r.ParticleStage.PlanetSpawn description=Enables/Disables Planet Spawn Pass in the Particle Stage.
r.ParticleStage.Sort description=Enables/Disables Particle Sort Pass in the Particle Stage.
r.ParticleStage.Spawn description=Enables/Disables Particle Spawn Pass in the Particle Stage.
r.ParticleStage.Update description=Enables/Disables Particle Update Pass in the Particle Stage. Note that disabling this stage while particles are still alive can cause various artifacts.
r.PlanetIntegrationResources.LoadInBackground description=Load PlanetIntegrationResources in the background
r.PlanetTerrain.Tessellation.CullingThreshold description=Threshold (cosine of angle between viewer and quad) for backface culling of planet terrain during tessellation
r.PlanetTerrain.Tessellation.Curvature description=Curvature factor for planet terrain subdivision
r.PlanetTerrain.Tessellation.LargeScaleQuadPixels description=Pixels amount per planet terrain quads to define screen space large scale subdivision criteria when a high density is important for complex ocean/terrain topology and LOD stability
r.PlanetTerrain.Tessellation.MaxGroundDistance description=Maximum distance for ground tessellation
r.PlanetTerrain.Tessellation.MaxSubdivisions description=Maximum number of subdivision steps per planet terrain quad
r.PlanetTerrain.Tessellation.QuadSize description=Average size (in pixels) of subdivided planet terrain quads
r.PlanetTerrainDepthPrepassStage description=Enables/Disables the terrain DepthPrepass Stage.
r.PostSilhouetteStage description=Enables/Disables the Post Silhouette Stage.
r.PostSilhouetteStage.Debug description=Enables debug output for the post silhouette stage like how many stages are getting executed, how many objects etc..
r.PuddleFormationFactor description=A scale factor to adjust the likelihood of puddles forming.
Usage: r.PuddleFormationFactor [n]
Default is 1.0
r.RainPatterFactor description=A 0.0 to 8.0 scale factor to adjust the visual effect of rain patter.
Usage: r.RainPatterFactor [n]
Default is 2.0
r.RainWetting description=Controls whether surfaces appear wet during rainfall.
Default is 1 (enabled). 0 - disables.
r.RenderGraph.DebugLog description=Outputs RenderGraph debug information for the next frame to the console/log
r.RenderGraph.ImmediateMode description=Runs RenderGraph in lockstep mode, executing passes immediately after they got added
r.RenderGraph.SkipEmptyPasses description=Set to 1 to skip empty passes which don't do anything this frame.
r.RenderLayers.CubemapPass description=Shows all objects that are from specific render layers, in Cubemaps Passes.
-2 - All render layers
-1 - Render layers visible by default
N - Just render layer N

r.RenderLayers.GeneralPass description=Shows all objects that are from specific render layers, in General Pass.
-2 - All render layers
-1 - Render layers visible by default
N - Just render layer N

r.RenderLayers.PlanetTerrainPass description=Shows all objects that are from specific render layers, in Planet Terrain Pass.
-2 - All render layers
-1 - Render layers visible by default
N - Just render layer N

r.RenderLayers.RTTPass description=Shows all objects that are from specific render layers, in RTTs Passes.
-2 - All render layers
-1 - Render layers visible by default
N - Just render layer N

r.RenderLayers.ShadowPass description=Shows all objects that are from specific render layers, in Shadows Passes.
-2 - All render layers
-1 - Render layers visible by default
N - Just render layer N

r.ScaleformStage description=Enables/Disables rendering in the Scaleform Stage.
r.ScaleformStageDebug description=Enables/Disables rendering debug information of the Scaleform Stage shown in imGUI.
r.SceneObjectRendering.ForceDefaultPipelineState description=Force the code to always use the default pipeline state.
r.SceneObjectRendering.ForceFallbackPipelineState description=Force the code to always use the fallback pipeline state.
r.SceneObjectRendering.Instancing description=0: Off
1: Instance drawcall merging
r.SceneObjectRendering.ResetGPUMaterialPermutationCaches description=Any positive number: Recompile all precreated gen12 cached pipeline states required for object rendering.
r.SceneObjectRendering.ShowDefaultPipelineStateForNotInitializedFallbacks description=Render an object with its default pipeline state if the fallback is not yet initialized. Note: Not all materials have a default and will be visible.
r.Shaders.DebugDraw description=Display selected component parts of shader debug mode.
0 = Disabled
1 = Primary Tint (None:Black, Primary:Red, Secondary:Green, Tertiary:Blue)
2 = Wear Tint (None:Black, Primary:Red, Secondary:Green, Tertiary:Blue)
3 = AO (Vertex + Texture)
4 = Wear blend texture
5 = Dirt blend texture (WIP-Ignore)
6 = Object Wear amount
7 = Object Dirt amount
8 = Number of base layers blending (LayerBlend and Organic)

r.ShadowMapStage description=Enables/Disables the ShadowMapStage
0: Disables shadowmapstage
1: Enables shadowmapstage
r.Shadows.ScreenSpace description=Enable rendering of screen space shadows
r.Shadows.ScreenSpace.FadeCurve description=Apply power curve for fading shadow
r.Shadows.ScreenSpace.FadeStart description=Ratio for controlling where to start the shadow fade
r.Shadows.ScreenSpace.HairAttenuation description=Lower shadow factor when hair is hit
r.Shadows.ScreenSpace.JitterMult description=Multiplier for controlling jittering strength
r.Shadows.ScreenSpace.LightSizeThreshold description=Screen space size of the light in order to be considered for screen space shadows rendering
r.Shadows.ScreenSpace.MaxSamples description=Max number of samples to be taken during ray trace
r.Shadows.ScreenSpace.MaxShadowTexelsTrace description=Maximum number of shadow texels that the screen space ray will be allowed to trace.
r.Shadows.ScreenSpace.Quality description=Control to determine quality of screen space shadows
r.Shadows.ScreenSpace.RayLengthThresholdMult description=Multiplier for adjusting threshold that would be considered in shadow from testing ray depth vs object depth
r.Shadows.ScreenSpace.RayNumPixelsStep description=Number of pixels to step along the ray. Higher number means fewer samples along the ray.
r.TSAA description=Enables temporal superampling antialiasing
r.TSAA.DebugZoom description=Enables AA debugging views
Usage: r.TSAA.DebugZoom [n]1: Display edge detection2: Zoom image 2x3: Zoom image 2x + display edge detection4: Zoom image 4x, etc
r.TSAA.ExtraSharpening description=Applies extra sharpening when TSAA is enabled.

r.TSAA.FlickerSmoothing description=Adjusts convergence time for flickering pixels
r.TSAA.FramerateAware description=Adjusts history blend factor based on current frame time
r.TSAA.JitterSequence description=Selects the projection matrix jitter sequence.
0: No jittering
1: Halton
2: R2

r.TSAA.JitterSequenceLength description=Length of the jitter sequence
r.TSAA.RTT description=Enables temporal antialiasing for RTT views
r.TSAA.ResponsiveAA description=Enables support for Responsive AA to reduce artifacts on transparent objects.
r.TSAA.ResponsiveAA.DepthBias description=Depth bias to avoid flickering of particles that collide with scene geometry.
r.TSR description=Enables temporal super resolution
r.TSR.Debug description=Visualize disocclusion, offscreen sampling and pixel locks
r.TSR.Experimental description=Enables experimental code paths
r.TSR.MipBiasScale description=Adjusts automatically computed mip bias (0: no bias, 1: optimal bias for selected upscaling factor).
Higher values can currently lead to noticeable Moire patterns, so the default is 0.5
r.TSR.Mode description=Selects if TSR should be used for just temporal anti-aliasing or also upscaling
0: Use TSR for TAA and temporal upscaling
1: Use TSR for TAA only

r.TSR.PixelLocks description=Enables pixel locks for more stable thin features
0: Disabled
1: Enabled
2: Enabled without lock validation
r.TSR.Technique description=Selects the technique used for temporal upscaling
-1: Auto-select best technique for system
 0: CIG TSR implementation
 1: AMD FSR
 2: nVidia DLSS (if available)

r.TSR.UpscalingPreset description=Adjusts the render resolution scale based on the specified preset
Preset gets only applied if r_ResolutionScale is 1.0
0: No preset
1: Auto (compute optimal setting for the window size and system)
2: Quality (/1.5)
3: Balanced (/1.75)
4: Performance (/2.0)
5: Ultra Performance (/3.0)

r.Vulkan.Memory.BudgetLogging description=Enables output of Per Heap Memory Budget stats from VMA at varying verbosity.
0 = Memory Budget logging Disabled. (Default).
1 = Memory Budget logging Per Frame.
2 = Memory Budget Logging Per Allocation.

r.Vulkan.Memory.CalculateStats description=Expensive memory statistics calculation from VMA. Must only be called once per CVAR change, reverts value after call.
0 = No statistics output. (Default).
1 = Outputs statistics to the log once and reverts.

r.Vulkan.Memory.DumpStatsJSON description=Dumps the current full VMA memory statistics to JSON file. Reverted after dump.
0 = JSON Dumping Disabled. (Default).
1 = JSON Dump Memory Stats to file.
2 = JSON Dump Memory Stats to file with detailed map visualization.

r.Vulkan.StagingBufferSizeMB description=Total desired size(MB) of staging buffers (CPU Buffers for CPU->GPU Uploads) used by non-streaming workloads.
r.Vulkan.StagingBufferSizeMBFibers description=Total desired size(MB) of staging buffers (CPU Buffers for CPU->GPU Uploads) used by non-streaming workloads.
r.Vulkan.Sync.PerFrame description=Change Vulkan sync behaviour for Per Frame waiting.
0 = Sync at the end of a frame to the previous frame of work. (Default).
1 = Sync at the end of a frame to the current frame of work.

r.Water.Decals.Enable description=Should water decals have collisions and be simulated? Default: 0

r.Water.EnableBackfaceCullingOnDistantOceanPatches description=Enables backface culling for distant ocean patches
r.Water.GraphicsTest.EnablePersonalValues description=Add some irregularities to interactions based on EntityIDs
r.Water.MaxRegionSims description=Max number of sim regions
r.Water.MinPatchSizeForBackfaceCulling description=Patches smaller than this do not perform backface culling
r.Water.NearClipFactor description=A scale factor applied to the water near clip distance set on the camera.
Usage: r.Water.NearClipFactor [n]
Default is 1.0
r.Water.PrePass.Debug description=Draws debug statistics on screen i.e. how many objects have been submitted per pass in a frame
r.Water.PreciseCollisions.Enable description=Should the entities check every one of their parts for an intersection with water by default, or only if there is lift? (Accurate, but potentially costly)

r.Water.Simulation.ActorVelocityFullImpact description=Use Waterbuffer Simulation
r.Water.Simulation.CullExplosionsOver description=Maximum size of explosions before not being shown
r.Water.Simulation.CullExplosionsUnder description=Minimum size of explosions before not being shown
r.Water.Simulation.EnableVelocityReducesImpact description=Use Waterbuffer Simulation
r.Water.Simulation.ForceUpdateZone description=Force WaterInteractionManager to refresh the it's zone
r.Water.Simulation.ShipsGenerateWaterWake description=Use Waterbuffer Simulation
r.Water.Simulation.SubObjectCullingMinSize description=Min size for sub-object region culling
r.Water.Simulation.UseSubObjectRegionCulling description=Use sub-object region culling for large water volumes (see C3DEngine::AllocateWaterBufferRegionsForBBox)
r.Water.Simulation.UseWaterBufferSim description=Use Waterbuffer Simulation
r.Water.Simulation.VelocityFullImpact description=Use Waterbuffer Simulation
r.Water.WaterVolume.ShowGrid description=Show how the water volume is split into a grid
r.Water.WaterVolume.ShowSpecificCell description=Show water volume specific cell debug
r.Water.WobbleAmount description=Amount of wobble distortion applied to underwater views.
Usage: r.Water.WobbleAmount [n]
Default is 1.0
r.WaterBoundaryStage description=Enables/Disables the Water Boundary Stage.
r.WaterBuffer.EnableFlatQuadTree description=Use Flatquadtree for non planet zones
r.WaterBuffer.FlatQuadtreeLODRatio description=Flatquadtree lod ratio
r.WaterBuffer.MinLevel description=Min Level at which planet patches use the waterbuffer
r.WaterBuffer.Use description=Enable/Disable the WaterBuffer
r.WaterPrePassStage description=Enables/Disables the Water Pre-Pass Stage.
r.WaterVolumes.Caustics description=Toggles advanced water caustics for water volumes.
Usage: r.WaterVolumes.Caustics [0/1]
Default is 0 (disabled). 1 - enables.
r.WaterVolumes.CausticsIntensity description=Water caustics intensity for water volumes.
Usage: r.WaterVolumes.CausticIntensity [f]
Default is 32.0
r.WettingAndCaustics.Debug description=Displays debug information on screen and visualizes all normals from water objects.
Also draws a orange sphere at the bottom of the normal if that object is considered to be used for projection.0: Off
1: Displays information on screen and visualizes all normals from water objects
2: Display Caustics RT (to be used in conjunction with r_showRenderTarget CausticsObjects)
r.WettingAndCausticsStage description=Enables/Disables the Wetting and Caustics Stage.
rDisplaySessionDaysToReset description=Controls when the QR Code is turned back On, shall be used for test environments PTU, ePTU only.
Usage: 
  0: Does nothing
  Above 0: use the int as an amount of day until we reactivate the QR code.
r_AABBSortOffsetRatio description=Proportion of visible AABB depth to add to sort distance
r_AnalyticShadowDebug description=Draw debug geometry for analytic shadows
Usage: r_AnalyticShadowDebug [0/1]

r_AnalyticShadowEnable description=Enable analytic shadows
Usage: r_AnalyticShadowEnable [0/1]

r_AntiAliasedLines description=Enables/Disables hardware accelerated line anti aliasing.
r_AntiAliasedPrimitiveRenderNodes description=Enable/Disable anti-aliased borders for certain Primitive RenderNodes.
0 = Anti-aliased borders Disabled.
1 = Anti-aliased borders for Lines, Quads & Rings Enabled (Default)

r_AuxGeom description=Enables aux geometry rendering.
r_Beams description=Toggles volumetric light beams.
Usage: r_Beams [0/1]

r_BreakOnError description=calls debugbreak on illegal behaviour
r_Brightness description=Sets the display brightness (not supported on PS3).
Usage: r_Brightness 0.5
Default is 0.5.
r_Character_NoDeform description=
r_ChromaticAberration description=Override chromatic aberration amount
-1: Use camera setting
 0: Disable
r_ChromaticAberration_default description=Chromatic aberration amount. Default is 6.0
r_ColorGrading description=Enables color grading.
0: off, 1: enabled, 2: hdr color grading.
r_ColorGradingChartImage description=If called with a parameter it loads a color chart image. This image will overwrite
 the dynamic color chart blending result and be used during post processing instead.
If called with no parameter it displays the name of the previously loaded chart.
To reset a previously loaded chart call r_ColorGradingChartImage 0.
Usage: r_ColorGradingChartImage [path of color chart image/reset]
r_ColorGradingDebug description=Displays information used for color grading.
Usage: r_ColorGradingDebug [0/1]
r_ColorGradingEditorPreviewMode description=Turns on color grading preview mode in editor
r_ConsoleBackbufferHeight description=console specific backbuffer resolution - height
r_ConsoleBackbufferWidth description=console specific backbuffer resolution - width
r_Contrast description=Sets the display contrast (not supported on PS3).
Usage: r_Contrast 0.5
Default is 0.5.
r_ConvertPSOListToBinary description=Converts text based pso list into a binary format
r_CustomResHeightEditor description=Height of custom resolution rendering. Only supported for main viewport in editor.
r_CustomResWidthEditor description=Width of custom resolution rendering. Only supported for main viewport in editor.
r_DamageMap_BaseResolution description=Base resolution for damage maps (larger objects may use a multiple of this resolution).

r_DamageMap_BuildSnapshot description=[0 - 2] When enabled with ProcessOnCPU, used for testing the snapshot functionality0 - off | 1 - Only build the snapshot data | 2 - Rebuild the damage map texture from the snapshot
r_DamageMap_Debug description=Debugging modes for damage maps.
0 - Disabled
1 - Print resources and ref counts
2 - Print queued explosions
3 - Print information about all damage maps in view
4 - Logs if there is a difference between the look up tree and the damage map
r_DamageMap_DebugDraw_AABBTree description=Debugging draw levels of the damage map AABB tree used for optimizing the damage map impacts on the CPU.
r_DamageMap_DebugGun description=Debug Gun to paint damage for damage maps.
0 - Disabled
1 - Enabled

r_DamageMap_DebugGun_DamageAmount description=Debug Gun - Damage Amount. Positive values will damage; Negative values will repair
r_DamageMap_DebugGun_DamageType description=Debug Gun to paint damage for damage maps.
0 - Physical
1 - Energy
2 - Distortion
3 - Thermal
4 - Biochemical
5 - Stun

r_DamageMap_DebugGun_ImpactTimeInterval description=Time between individual debug damage being applied.

r_DamageMap_DebugGun_Radius description=Debug Gun - Radius of impact.

r_DamageMap_DebugMainThreadImpacts description=Displays debug information regarding MainThread Impact.
r_DamageMap_DebugPositionBoneMapRendering description=Displays debug information regarding Position Bone Map Rendering and whether a DamageMap has impacts wait for Position Bone Map rendering to be completed.
r_DamageMap_DefaultRepairRatio description=The default percentage of a repair hit being converted to repaired material. This can be overriden on a per-impact basis.
r_DamageMap_EnableCPUCopy description=[0, 1] Sets whether each damage map will store a CPU version of the GPU texture for queries.
(Will increase update time, getting the CPU counterparts is an expensive operation)
r_DamageMap_Enabled description=Enables Damage Map Tech.
0 - Disabled
1 - Enabled

r_DamageMap_ForceCreatePositionBoneMap description=DamageMap PositionBoneMap Create - When greater than 0 all DamageMaps will create their associated Position Bone Map, if one does not exist yet.

r_DamageMap_MaxTexelDeviation description=The maximum percentage of a damage map's average texel length that a texel is allowed to diverge from before the damage map it belongs to is considered invalid.
r_DamageMap_MaxVRAMBudget description=Sets the Maximum VRAM used by the Damage Map System (mb).
r_DamageMap_Reset description=DamageMap Reset - When greater than 0.0f all damage maps will be reset to the values set in the associated CVars.

r_DamageMap_Reset_Burn description=DamageMap Reset - Burn Reset Amount.

r_DamageMap_Reset_Repair description=DamageMap Reset - Repair Reset Amount.

r_DamageMap_Reset_Temperature description=DamageMap Reset - Temperature Reset Amount.

r_DamageMap_Reset_Thickness description=DamageMap Reset - Thickness Reset Amount.

r_DamageMap_TransferCPUCopyToGPU description=[0, 1] When enabled the CPU version of the damage map will be used for rendering the damage maps.

r_DebugDeferredClipVolumeAABBs description=Shows AABBs of any clip volume submitted to deferred shading0=Disable
1=Enable
Usage: r_DebugDeferredClipVolumeAABBs[0/1]
r_DebugFontRendering description=0=off, 1=display various features of the font rendering to verify function and to document usage
r_DebugGBuffer description=Debug view for gbuffer attributes
  0 - Disabled
  1 - Diffuse color
  2 - Specular color
  3 - World-space normals
  4 - View-space normals
  5 - Gloss/smoothness
  6 - Glow
  7 - Translucency
  8 - Subsurface scattering
  9 - POM self-shadow
  10 - Cloth
  11 - Clear Coat
  12 - Validation mode
  13 - Validation mode overlay
  14 - Force white albedo
  15 - Force flat dielectric
  16 - Force flat metal
  17 - Total Reflectance Validation

r_DebugLightVolumes description=0=Disable
1=Enable
Usage: r_DebugLightVolumes[0/1]
r_DebugShadowMask description=0=Disable
>1=Debug three consecutive shadow masks in RGB channels, starting with mask n-1
r_DeferredShadingAmbient description=Enables/Disables ambient processing.
Usage: r_DeferredShadingAmbient [0/1/2]
  0: no ambient passes (disabled)
  1: vis areas and outdoor ambient  (default)
  2: only outdoor (debug vis areas mode)

r_DeferredShadingAmbientLights description=Enables/Disables ambient lights.
Usage: r_DeferredShadingAmbientLights [0/1]
Default is 1 (enabled)
r_DeferredShadingAmbientSClear description=Clear stencil buffer after ambient pass (prevents artifacts on Nvidia hw)

r_DeferredShadingAreaLights description=Enables/Disables more complex area lights processing.
Usage: r_DeferredShadingAreaLights [0/1]
Default is 1 (enabled)
r_DeferredShadingCustomBRDFs description=Enables/Disables support for additional BRDFs on Layer materials (cloth and clear-coat).
Fallback for clear-coat just increases gloss by 25%.
Usage: r_DeferredShadingCustomBRDFs [0/1]
Default is 1 (enabled)
r_DeferredShadingDBTstencil description=Toggles deferred shading combined depth bounds test + stencil test.
Usage: r_DeferredShadingDBTstencil [0/1]
Default is 1 (enabled)
r_DeferredShadingEnvProbes description=Toggles deferred environment probes rendering.
Usage: r_DeferredShadingEnvProbes [0/1]
Default is 1 (enabled)
r_DeferredShadingGGXSpecular description=Enables/Disables more complex specular lighting model (fallback is blinn-phong).
Usage: r_DeferredShadingGGXSpecular [0/1]
Default is 1 (enabled)
r_DeferredShadingHairPass description=Enables/Disables deferred shading for hair.
Usage: r_DeferredShadingHairPass [0/1]
Default is 1 (enabled)
r_DeferredShadingLightBoxDebug description=Toggles light box debug mode.
Usage: r_DeferredShadingLightBoxDebug [0/1]
Default is 0 (disabled)
r_DeferredShadingLightLodRatio description=Sets deferred shading light intensity threshold for PS3.
Usage: r_DeferredShadingLightLodRatio [value]
Default is 0.1
r_DeferredShadingLightStencilRatio description=Sets screen ratio for deferred lights to use stencil (eg: 0.2 - 20% of screen).
Usage: r_DeferredShadingLightStencilRatio [value]
Default is 0.2
r_DeferredShadingLightVolumes description=Toggles Light volumes for deferred shading.
Usage: r_DeferredShadingLightVolumes [0/1]
Default is 1 (enabled)
r_DeferredShadingLights description=Enables/Disables lights processing.
Usage: r_DeferredShadingLights [0/1]
Default is 1 (enabled)
r_DeferredShadingNormalFormat description=Texture format to use for g-buffer normals: 0=8u, 1=16u, 2=16f, 3=32f.

r_DeferredShadingOrenNayarDiffuse description=Enables/Disables more complex diffuse lighting model (fallback is Lambert).
Usage: r_DeferredShadingOrenNayarDiffuse [0/1]
Default is 0 (disabled)
r_DeferredShadingSSS description=0/1: Toggle deferred subsurface scattering2/3: Toggle legacy implementation
r_DeferredShadingScissor description=Toggles deferred shading scissor test.
Usage: r_DeferredShadingScissor [0/1]
Default is 1 (enabled)
r_DeferredShadingStencilPrepass description=Toggles deferred shading stencil pre pass.
Usage: r_DeferredShadingStencilPrepass [0/1]
Default is 1 (enabled)
r_DeferredShadingTiledCoherencyOpt description=Enable optimizations to make tiled light access more coherent
0 - Traditional, high-branching code
1 - Force high-level branches on light type to collapse lower level branches (default)
2 - Try to process lights in homogeneous loops

r_DeferredShadingTiledMaxNumLights description=Clamp maximum input lights to tiled shading. -1 uses engine maximum (currently 1024)
r_DeferredShadingTiledMultipass description=Split tiled shading into separate high and low occupancy passes (Default: true)

r_DeferredShadingTiledVGPRHack description=Enable a hack to prevent code reordering in tiled shading (Default: true)

r_DepthOfField description=Enables depth of field.
Usage: r_DepthOfField [0/1/2]
Default is 0 (disabled). 1 Enabled, 2 Full-resolution mode
r_DepthOfFieldCoCResolve description=Enables temporal blending of circle-of-confusion mask to reduce DOF flickering with TAA
r_DepthOfFieldTest description=Enforce DOF to be active with some default CoC parameters
r_DetailDistance description=Distance used for per-pixel detail layers blending.
Usage: r_DetailDistance (1-20)
Default is 6.
r_DisplacementFactor description=Global displacement amount.
Default is 1.0f.
r_DisplayInfo description=Toggles debugging information in top-right of screen with information customized via cvar 'sys_devteam'.
Usage: 
 0: off
 1: minimal data related to your team + issues
 2: + extended data related to your team
 3: + basic data not directly related to your team
 4: + extended data not directly related to your team
 5: + further extended data
r_DisplaySessionInfo description=Toggles session info qr code.
Usage: 
 0: off
 1: on
r_DrawNearFarPlane description=Default is 40.
r_DrawNearFoV description=Sets the FoV for drawing of near objects.
Usage: r_DrawNearFoV [n]
Default is 60.
r_DrawNearZRange description=Default is 0.1.
r_DynTexAtlasDynTexSrcSize description=
r_DynTexMaxSize description=
r_DynTexSourceSharedRTHeight description=Height override of shared RT for dynamic texture sources. Takes effect when bigger than 0.
r_DynTexSourceSharedRTUseMipMapping description=Enables mip maps and their generation when rendering dynamic texture sources using the shared RT.
0 - Mip mapping disabled
1 - Mip mapping enabled for selected Flash materials
2 - Mip mapping enabled for all Flash materials
r_DynTexSourceSharedRTWidth description=Width override for shared RT for dynamic texture sources. Takes effect when bigger than 0.
r_EnableStableGPUPowerState description=Enables ID3D12Device::SetStablePowerState. But requieres active window developer mode.
r_EnvCMResolution description=Sets resolution for target environment cubemap, in pixels.
Usage: r_EnvCMResolution #
where # represents:
	0: 64
	1: 128
	2: 256
Default is 2 (256 by 256 pixels).
r_EnvCMupdateInterval description=Sets the interval between environmental cube map texture updates.
Usage: r_EnvCMupdateInterval #
Default is 0.1.
r_EnvTexUpdateInterval description=Sets the interval between environmental 2d texture updates.
Usage: r_EnvTexUpdateInterval 0.001
Default is 0.001.
r_EnvironmentProbeGBufferRes description=Resolution of environment probe G-Buffers
r_EnvironmentProbeQuality description=Default quality setting for GPU-compressed environment probes.
0 = Fast
1 = High Quality

r_EnvironmentProbeRes description=Resolution of environment probes (must match rc.ini)
r_ExcludeMesh description=Exclude or ShowOnly the named mesh from the render list.
Usage: r_ExcludeMesh Name
Usage: r_ExcludeMesh !Name

r_ExposureAdaptRangePupil description=Number of stops the pupil can adjust towards scene luminance from resting state (current pigment adaptation).
r_ExposureAdaptTimeBright description=Seconds taken for photopigments to adapt halfway towards brighter scene luminance.
r_ExposureAdaptTimeDark description=Seconds taken for photopigments to adapt halfway towards darker scene luminance.
r_ExposureAdaptTimePupil description=Seconds taken for pupil and ganglion cells to adapt halfway towards scene luminance.
r_ExposureCompensationEV0 description=Exposure compensation to apply at EV 0 (moonlit night).
r_ExposureCompensationEV12 description=Exposure compensation to apply at EV 12. (overcast day)
r_ExposureCompensationEV16 description=Exposure compensation to apply at EV 16. (sand/snow on sunny day)
r_ExposureCompensationEV4 description=Exposure compensation to apply at EV 4 (dark interior).
r_ExposureCompensationEV8 description=Exposure compensation to apply at EV 8 (bright interior).
r_ExposureDebug description=Debug views for exposure and tonemapping.
Usage: 
 0 = Disabled
 1 = Show luminance histogram and exposure values-1 = All debug labels disabled
r_ExposureDebugCamera description=Debug the exposure settings on the camera being sent to the renderer
r_ExposureDebugScale description=Scale of debug histogram for r_ExposureDebug
r_ExposureDebugWeights description=Debug render the weights applied to histogram luminances for perspective correction
r_ExposureDiscardRatioBright description=Fraction of brightest pixels to discard.
r_ExposureDiscardRatioDark description=Fraction of darkest pixels to discard.
r_ExposureMultiplierMax description=Maximum multiplier to use for exposure.
r_ExposureMultiplierMin description=Minimum multiplier to use for exposure.
r_ExposureTargetEV description=Lock the exposure to the given EV.
Negative values are interpreted as their positive equivalent, with debug text disabled.
r_ExposureThresholdRange description=Dynamic range (from max luminance) to keep after discarding brightest pixels.
r_FlareHqShafts description=Toggles high quality mode for point light shafts.
Usage: r_FlareHqShafts [0/1]
Default is 1 (on).
r_FlaresIrisShaftMaxPolyNum description=Set the maximum number of polygon of IrisShaft.
Usage : r_FlaresIrisShaftMaxPolyNum [n]
Default is 200
0 Infinite
r_FlaresTessellationRatio description=Set the tessellation rate of flares. 1 is the original mesh.
Usage : r_FlaresTessellationRatio 0.5
Default is 1.0
Range is from 0 to 1
r_FlashlightBounceEnable description=Enable/Disable bounce light.
0 - Disable bounce light
1 - Enable bounce light and make the Flash lights which have the bounce light flag turned on as candidates

r_FlashlightBounceMultiplier description=Multiplier of the final result of the bounce lighting
r_FogDepthTest description=Enables per-pixel culling for deferred volumetric fog pass.
Fog computations for all pixels closer than a given depth value will be skipped.
Usage: r_FogDepthTest z with...
  z = 0, culling disabled
  z > 0, fixed linear world space culling depth
  z < 0, optimal culling depth will be computed automatically based on camera direction and fog settings
r_FogDownscaledSunShadow description=Enable replacing sun shadow maps with downscaled shadow maps
0: disabled
1: replace first and second cascades with downscaled shadow maps
2: replace first, second, and third cascades with downscaled shadow maps

r_FogDownscaledSunShadowRatio description=Set downscale ratio for sun shadow maps
0: 1/4 downscaled sun shadow maps
1: 1/8 downscaled sun shadow maps
2: 1/16 downscaled sun shadow maps

r_FogGasCloudQueryMode description=Modes for querying gas cloud data, which is used by fog for blending between the two systems. 
0 - Old behaviour where density + colour returned 0 
1 - Single sample of gas cloud at camera location 
2 - New mode where camera aligned grid of points are sampled, for smoother interpolation.
r_FogLightingAnisotropy description='K' term for anisotropic scattering function in fog - Range [-1,1], negative numbers = backward-scattering. Default 0.6
r_FogLightingExtinction description=Multiplier on the opacity of fog at a given density (default 0.3)
r_FogLightingRadialLobe description=Radiality of fog scattering (was a param per light)
r_FogLightingScatter description=Multiplier on the brightness of lights in fog (default 1)
r_FogLightingShadowExtinction description=Multiplier on the opacity of fog when calculating self-shadows at a given density (default 1.0)
r_FogLightingUVJitter description=Jitter UVs during inscatter calculation to reduce aliasing on narrow projectors
r_FogMinimumLightBulbSize description=Adjust the minimum size threshold for light attenuation bulb size. Small bulb size causes the light flicker.
r_FogRaymarchStartDistance description=Distance of first fog raymarch step
r_FogReprojectZoneMovement description=Enable reprojection based on movement of fog volumes due to their parent zone's movement.
r_FogReprojectionBlendFactor description=Adjust the blend factor of temporal reprojection.
Acceptable value is between 0 and 1.
0 means temporal reprojecton is off.

r_FogReprojectionMode description=Set the mode of ghost reduction for temporal reprojection.
0: conservative
1: advanced
r_FogShadowQuality description=Adjust shadow sample count per sample point.
0: 1 shadow sample per sample point
1: 2 shadow samples per sample point
2: 3 shadow samples per sample point
3: 4 shadow samples per sample point

r_FogShadowsWater description=Enables volumetric fog shadows for watervolumes
r_FogTracingQuality description=Adjust number of sample points.
0: 1 sample point in a voxel
1: 2 sample points in a voxel
2: 4 sample points in a voxel

r_FogTracingTexDepth description=Depth resolution of volume texture.
Huge value runs out of performance and video memory.

r_FogTracingTexHeight description=Width and height scale factor (divided by screen resolution) for volume texture.
Acceptable value is more than equal 2.

r_FogVisAreaEpsilon description=Slightly increases visarea sizes to cover tiny gaps between areas
r_FogVoxelisationDistance description=World-space size of fog's froxel volume
r_ForceResetTemporalEffects description=Force temporal effects to the state they'd be in just after a camera cut
r_FourierShadowsPoolSize description=Set size of fourier (gascloud) shadow pool
r_GPUBufferUpdateValidation description=Enable/Disable validation of GPU buffer update.
0 = GPU Buffer Update Validation Disabled
1 = GPU Buffer Update Validation Enabled

r_GPUCrash_Force description=Force a GPU Crash in TiledShading
r_GPUMarkers description=Insert markers into the GPU timeline to track GPU crashes.
0 - Disabled
1 - Track pipeline stage (regular).
2 - Track pipeline stage (verbose).
3 - Track draws/compute commands.

r_Gamma description=Adjusts the graphics card gamma correction (fast, needs hardware support, affects also HUD and desktop)
Usage: r_Gamma 1.0
1 off (default), accepted range on PS3 is 0.8 to 1.25
r_GasCloudAllowEditorMode description=Allow the gas cloud to display edit-friendly changes (eg. culling solid areas when the camera is inside them)
r_GasCloudCameraFourierAbsorbanceOffset description=Offset input depth when reconstructing optical depth from fourier data. Visual control for camera fourier AO map.
r_GasCloudCameraFourierAbsorbanceReductionMult description=Multiplier for when reconstructing transmittance from fourier weights. Reduces magnitude of high frequency details. Visual control for camera fourier AO map.
r_GasCloudCameraFourierAbsorbanceScale description=Scales input depth when reconstructing optical depth from fourier data. Visual control for camera fourier AO map.
r_GasCloudCameraFourierEnable description=Apply fourier shadow map from camera's location, like an AO map.
r_GasCloudCameraFourierGradient description=Camera fourier AO map power curve gradient.
r_GasCloudCameraFourierMaxSizeOuter description=Gas cloud camera fourier max outer size radius, for where tracing ends.
r_GasCloudCameraFourierMinSizeInner description=Gas cloud camera fourier min inner size radius, for where tracing starts.
r_GasCloudCameraFourierPreProcessTargetOpacity description=Opacity to reach when tracing chunks in camera fourier pre process pass, this decides when to stop tracing and outputs trace depth distance
r_GasCloudCameraFourierPreProcesssEnable description=Enable pre process pass for camera fourier shadows, which traces main view visible chunks for determining what distance the opacity reaches it's target and therefore no further chunks tracing is needed.
r_GasCloudDebug description=Gas cloud debug modes:
0: Disabled (default)
1: Solid walls
2: Show chunk boundaries
3: Low-alpha rays - boost very low alpha rays to visible opacity

r_GasCloudDebugCPUDensity description=Draw a scanning slice of density values calculated using only CPU data and world-space sample points
r_GasCloudDebugCPUDensityScale description=Density->Debug Opacity scale when visualising CPU density samples
r_GasCloudDebugCutoff description=Value for r_GasCloudDebug 1, anything greater than this value will appear solid
r_GasCloudDebugDrawChunkIdx description=Draw the chunk index at the center of the chunk in world space
r_GasCloudDebugDumpChunkVoxels description=Dump all the voxel values for the specified chunk index to .csv file
r_GasCloudDebugEmptyVoxelThreshold description=Voxel data must be less than or equal to this threshold value in order to be considered empty in the debug selection mode.
r_GasCloudDebugLinks description=Draw links between child and parent clouds
r_GasCloudDebugMaxChunks description=Cap number of drawn GasCloud chunks
r_GasCloudDebugMinMipHeight description=Cap detail level - zero is maximum detail
r_GasCloudDebugSelection description=Displays debug information for the current selected gas cloud. (Editor only)
r_GasCloudDebugShowChunks description=Display chunk AABBs as debug geometry
r_GasCloudDebugSlice description=Debug mode that renders a slice through the gas cloud to visualize various information:
0: Disabled (default)
1: Regular shading
2: Density
3: Chunk resolution

r_GasCloudDebugSliceAxisGS description=Determines which axis to render the plane slice in group space 0 = X, 1 = Y, 2 = Z
r_GasCloudDebugSliceDensityMultiplier description=Modify density when rendering debug slice
r_GasCloudDebugSliceHeatMapRangeModifier description=Used to shift the range of the heat map ratio
r_GasCloudDebugSliceHeatMapSteps description=Number of different colours we can have to represent the different sizes of chunks
r_GasCloudDebugSliceLightIntensityMultiplier description=Modify light intensity when rendering debug slice
r_GasCloudDebugSliceRatioOS description=Ratio across gascloud BBox in object space. Determines where to render plane slice.
r_GasCloudDebugSunShadowVolumes description=Draw bounds of gascloud sun shadow stencil volumes
r_GasCloudEnabled description=Enable gas cloud tech. Default: 1
r_GasCloudForceDensityDataType description=Determines what data type to treat the gas cloud density resource as. (Does not change the data type, just informs the engine what data type is expected for optimizations.)
0: Automatic detection based on compiled VDB.
1: Float32.
2: Float16.
3: Uint8.

r_GasCloudForceSunShadowDataType description=Force specific data type to be used for storing sun shadows tree. 
0: Float32.
1: Uint8.

r_GasCloudGenerateSunShadows description=Generate WIP sun shadows on new gasclouds
r_GasCloudInscatterBrickMaxSize description=Maximum resolution of a block in the inscatter pool. Default 32
r_GasCloudInscatterBrickMinSize description=Minimum resolution of a block in the inscatter pool. Default 8
r_GasCloudInscatterMaxBrightness description=Max brightness stored in gas cloud accumulator textures
r_GasCloudInscatterPoolSize description=Resolution of the inscatter pool (rounds up to power of 2)
r_GasCloudInscatterResRatio description=Relative resolution of light accumulator leaf voxel size
r_GasCloudNumBucketIndices description=Max number of bucket indices used for pre-binning gascloud nodes
r_GasCloudNumBucketsX description=Number of buckets used for pre-binning gascloud nodes (X axis)
r_GasCloudNumBucketsY description=Number of buckets used for pre-binning gascloud nodes (Y axis)
r_GasCloudOverrideColorsWithVolume description=Override gas clouds' albedo and light leak when inside of override volumes
r_GasCloudOverrideDensityWithVolume description=Override gas clouds' density scale when inside of override volumes
r_GasCloudStats description=Display gas cloud debug stats. Default: 0 
1 - High level stats 
2 - Octree tree allocation debug 
3 - Individual light stats
r_GasCloudStepLengthMultiplier description=Fixed multiplier on gascloud step length
r_GasCloudStreamInScreenSizeRatio description=Ratio of screen size that has to change from the stream out size, in order for the gas cloud to be requested to load. Ensures we do not constantly ping pong between loading/unloading gas clouds
r_GasCloudStreamOutScreenSizeThreshold description=Screen size threshold for determining when to allow streaming out of gas clouds. This is in addition of zone system screen space size culling, which won't update streaming state if below culling threshold.
r_GasCloudStreamingDebug description=Show gascloud streaming info
1: Show color-coded bounding boxes
2: Show text list of streaming resources
r_GasCloudSunShadowResolutionMult description=Multiplier for adjusting computed sun shadows resolution 
r_GasCloudSunShadowSupersample description=Log2 resolution multiplier for sun shadow generation
r_GasCloudTemporalInscatterRelativeDifferenceBiasFar description=Controls when temporal history should be discard based on how much inscatter changed
r_GasCloudTemporalInscatterRelativeDifferenceBiasNear description=Controls when temporal history should be discard based on how much inscatter changed
r_GasCloudTemporalInscatterRelativeDifferenceScale description=Controls when temporal history should be discard based on how much inscatter changed
r_GasCloudTemporalUpsample description=Use Temporal Upsampling on Gas Clouds
r_GasCloudUpsample description=Screen res downscale step for gascloud rendering
r_GasCloudVoxelTargetScreenSpaceSize description=How much vertical resolution a single voxel should occupy before trying to split to sub-nodes
r_GeomCacheInstanceThreshold description=Threshold after which instancing is used to draw geometry cache pieces
r_GetScreenShot description=Capture a single screenshot (variable is set to 0 after capturing)
1: Take screenshot immediately
2: Take screenshot 10 frames after resetting temporal effects
r_GfxReconstructCapture description=Trigger GfxReconstruct capture.
r_GfxReconstructDebug description=0 = GfxReconstruct will optimize captures and delete intermediary data
1 = GfxReconstruct will leave all intermediary data
r_GfxReconstructEnabled description=Enable GfxReconstruct captures via cvar. Needs to be set before loading the Client/Editor and impacts performance.
0 = Disabled
1 = Enabled
r_GfxReconstructFKey description=Function Key that triggers capture. Default is 0 (Disabled). Needs to be set before loading the Client/Editor.
r_GfxReconstructFlush description=0 = GfxReconstruct will batch commands together for capturing (Default)
1 = GfxReconstruct will flush after each write to file.
r_GfxReconstructFrameCount description=Sets the number of frames GfxReconstruct will capture. Default 10. Needs to be set before loading the Client/Editor.
r_GraphStyle description=
r_HDRDebug description=Toggles HDR debug visualization
0: off (default)
1: colormap of displayed output luminance in nits (cyan: 100 nits, yellow: 1.000 nits, magenta: 10.000 nits)
2: identify illegal colors (grey: normal, red: NotANumber, green: negative)
3: colormap of absolute luminance values

r_HDRDisplayDeviceLimits description=Restricts HDR output to the maximum brightness reported for the current display.

r_HDRDisplayMaxNits description=Restricts HDR output to specified maximum brightness.

r_HDRDisplayOutput description=Toggles HDR output for an HDR-capable display.
0: off
1: on (if app window is on HDR display)

r_HDRDisplayRefWhite description=Adjusts the reference white point (aka paper white or UI white) for brighter-than-standard viewing conditions.
Minimum is 80 nits, default 200 nits
r_HDRDitherGrainSize description=Override the pixel size of combined dither grain.
-1: Use camera setting
r_HDRDitherGrainSize_default description=The pixel size of combined dither grain. Default is 1.5
r_HDRDitherGrainStrength description=Override the strength of combined film grain and dithering, applied during tone mapping.
-1: Use camera setting
 0: Disable
r_HDRDitherGrainStrength_default description=The strength of combined film grain and dithering, applied during tone mapping. Default is 3.0
r_HDRDitherMode description=Selects dither mode (0: legacy, 1: combined dither and film grain)

r_HDRGradingCapture description=Captures an exposure-corrected HDR screenshot with embedded color chart (for color grading).

r_HDRGrainAmount description=Override the scaling factor on legacy film-grain, which itself is dependent on the current exposure. 
 -1: Use camera setting
r_HDRTexFormat description=HDR texture format. 
Usage: r_HDRTexFormat [Value] 0:(low precision - cheaper/faster), 1:(high precision)
Default is 0
r_HDRTonemappingCurve description=Toggles tone mapping curve.
0: Linear with clipping (tone mapping off)
1: Hue preserving display mapping
2: ACES filmic curve
3: Legacy hue preserving curve
r_HDRTonemappingCurveInputScaleACES description=Multiplier for input color when using ACES tone mapping curve (1: original)
r_HDRTonemappingCurveSlopeACES description=Adjusts contrast of ACES tone mapping curve (1: original, >1: less crushed blacks)
r_HDRVignetting description=Override whether vignetting is applied
-1 Use camera setting
0  Force disable
1  Force enable
r_HDRVignetting_default description=Enable/disable vignetting. Default is 1 (enabled)
r_Height description=Sets the display height in pixels.
Usage: r_Height [600/768/..]
r_HideDebugText description=Hides all debug text.
r_HideSunInCubemaps description=Stops the sun being drawn during cubemap generation.

r_IHV_Libraries_Enabled description=Enables the Independent Hardware Vendors libraries to be loaded at game start.
0 - Disabled
1 - Enabled

r_LargeBatchDisableTessellation description=Disables tessellation for large batch objects
r_LayerBlendMaxTexturesHighRes description=The maximum number of textures that can fit in the high res texture library for LayerBlend.
r_LayerBlendMaxTexturesLowRes description=The maximum number of textures that can fit in the low res texture library for LayerBlend.
r_LayerBlendReload description=Reloads textures and materials used by the multilayer material system.
Usage: r_LayerBlendReload 1
Set to 1 to reload textures and materials.
r_LayerBlendResolutionHighRes description=The resolution of textures that can fit in the high res texture library for LayerBlend. 0 = Auto
r_LayerBlendResolutionLowRes description=The resolution of textures that can fit in the low res texture library for LayerBlend. 0 = Auto
r_LayerBlendSpecTint description=Enables tinting of metals using the per-layer tints (metal is identified by spec colour > 115).
r_LightDebugActive description=Global toggle for other LightDebug CVars
r_LightDebugCullingList description=Controls what lights to process in debug mode.
0 - All lights
1 - Lights not hidden by opaque geometry (default)
2 - Lights intersecting opaque geometry
r_LightDebugMode description=Controls what to draw in debug mode.
0 - Normal scene (default)
1 - Highlight tiles that are performing an extra pass for planar lights
2 - Per-tile overdraw
3 - Experimental planar light modes controlled by r_LightExperimentalPlanarXXX
4 = Show environment probe coverage

r_LightDebugOverdrawRange description=Number of lights that will appear as "hottest" on the overdraw heat map
r_LightDebugShowAmbient description=Control visibility of ambient lights.
-1 - Show both ambient and non-ambient lights (default)
 0 - Hide ambient lights
 1 - Show only ambient lights
r_LightDebugShowEnvProbe description=Toggle visibility of environment probes
r_LightDebugShowPlanar description=Toggle visibility of point lights
r_LightDebugShowPoint description=Toggle visibility of point lights
r_LightDebugShowProjector description=Control visibility of projectors.
-1 - Show both projectors and non-projectors (default)
 0 - Hide projectors
 1 - Show only projectors
r_LightDebugShowShadowCaster description=Control visibility of shadow casters.
-1 - Show both casters and non-casters (default)
 0 - Hide shadow casters
 1 - Show only shadow casters
r_LightExperimentalPlanarDiffuse description=(Experimental) Type of area light calculation.
0 - None
1 - Standard CryEngine
2 - Standard CryEngine w/ tweaks
3 - 5-point structured sampling (default)
4 - Form-factor integration
5 - Visualize fallback distance

r_LightExperimentalPlanarSpecular description=0 - Disable specular
1 - Standard CryEngine (default)
2 - Phong Approximate Mode
3 - Brute force reference

r_LightsSinglePass description=
r_MergeGeneralDrawcalls description=Enabled merging of RenderChunks in General pass
Default is 1 (enabled). 0 disabled
r_MergePreZDrawcalls description=Enabled Merging of RenderChunks for PreZRendering
Default is 1 (enabled). 0 disabled
r_MergeRenderChunks description=
r_MergeShadowDrawcalls description=Enabled Merging of RenderChunks for ShadowRendering
Default is 1 (enabled). 0 disabled
r_MotionBlur description=Enables per object and camera motion blur.

r_MotionBlurAfterDOF description=Set when motion blur should be executed.
0: Before DOF
1: After DOF

r_MotionBlurCameraMotionScale description=Reduces motion blur for camera movements to account for a fixed focus point of the viewer.
r_MotionBlurCinematicMode description=Set motion blur behavior during cinematics.
0 - Apply full camera motion
1 - Use gameplay settings for camera motion
r_MotionBlurGameplayMode description=Set motion blur behavior during gameplay.
0 - Disabled
1 - Exclude camera rotation
2 - Exclude all camera motion

r_MotionBlurQuality description=Set motion blur sample count.
Usage: r_MotionBlurQuality [0/1/2]
0 - low quality, 1 - medium quality, 2 - high quality

r_MotionBlurShutterSpeed description=Override the camera exposure time for motion blur (as 1/x seconds).
 -1: Use camera setting
r_MotionBlurShutterSpeed_default description=The camera exposure time for motion blur (as 1/x seconds). Default is 250.0 (1/125 of a second)
r_MotionBlurTest description=Enforce active camera motion vectors on static geometry
r_MotionBlurTileCount description=The tile count for motion blur (which determines the max blur radius).
r_MotionVectors description=Enables generation of motion vectors for dynamic objects

r_MultiGPU description=Toggles MGPU support. Should usually be set before startup.
  0: force off
  1: automatic detection (reliable with SLI, does not respect driver app profiles with Crossfire)

r_OpticsBloom description=0 = No bloom
1 = CryTek bloom
2 = CIG bloom

r_OpticsDownsampleFilter description=Downsample filter for optics mip chain
-1 = Auto
0 = Four tap
1 = Nine Tap
r_OpticsExposure description=0 = Instant eye adaptation
1 = CIG eye adaptation
2 = CIG eye adaptation with dynamic range thresholding

r_OpticsFireflyFilter description=Anti-firefly filter
-1 = Auto
0 = Four tap
1 = Five Tap
2 = Nine Tap
r_OpticsFireflyFilterEnabled description=Enables/disables the firefly filter on bloom/flares.
r_OpticsFlares description=0 = No flares
1 = CryTek flares only
2 = CIG flares only
3 = All flares

r_OpticsPreset description=Loads a custom lens preset from DataForge.
Default is "DefaultLens"
r_OpticsQuality description=1 = Low, 2 = Medium, 3 = High, 4 = Very High
r_OpticsResampleBackbuffer description=Downsamples resolutions greater than 1080p to maintain a fixed cost on bloom/flares.
r_OpticsUpsampleFilter description=Upsample filter for bloom generation
-1 = Auto
0 = One tap
1 = Five Tap
2 = Nine Tap
3 = Anamorphic Five Tap
4 = Anamorphic Seven Tap
r_OverscanBorderScaleX description=Sets the overscan border width scale
Usage: r_OverscanBorderScaleX [0.0->0.25]
r_OverscanBorderScaleY description=Sets the overscan border height scale
Usage: r_OverscanBorderScaleY [0.0->0.25]
r_OverscanBorders description=Changes the size of the overscan borders for the left/right and top/bottom
of the screen for adjusting the title safe area. This is for logo placements
and text printout to account for the TV overscan and is mostly needed for consoles.
If only one value is specified, the overscan borders for left/right and top/bottom
are set simultaneously, but you may also specify different percentages for left/right
and top/bottom.
Usage: r_OverscanBorders [0..25]
       r_OverscanBorders [0..25] [0..25]
Default is 0=off, >0 defines the size of the overscan borders for left/right
or top/bottom as percentages of the whole screen size (e.g. 7.5).
r_OverscanBordersDrawDebugView description=Toggles drawing overscan borders.
Usage: r_OverscanBordersDrawDebugView [0=off/1=show]
r_PSOsSubmitRequestLine description=Submits request line for each pso compilation request to remote shader compile server
r_ParticlesAmountGI description=Global illumination amount for particles without material.
Usage: r_ParticlesAmountGI [n]
r_ParticlesDebug description=Particles debugging
Usage: 
0 disabled
1 particles screen coverage (red = bad, blue = good)
2 particles overdraw (pink = extremely bad (2x r_ParticlesOverdrawThreshold!), magenta = really bad, white = bad, red = not optimal, blue = good)
r_ParticlesInstanceVertices description=Enable instanced-vertex rendering.
Usage: r_ParticlesInstanceVertices [0/1]
r_ParticlesOverdrawOpacity description=The opacity of the background of the Particle Overdraw view. Default: 1.0
r_ParticlesOverdrawThreshold description=The Overdraw ceiling past which a pixel is considered too over-drawn. Default: 25
r_ParticlesRefraction description=Enables refractive particles.
Usage: r_ParticlesRefraction [0/1]
r_ParticlesSoftIsec description=Enables particles soft intersections.
Usage: r_ParticlesSoftIsec [0/1]
r_ParticlesTessellation description=Enables particle tessellation for higher quality lighting. (DX11 only)
r_ParticlesTessellationMaxTriSize description=Sets maximum size of particles (in pixels) to use when tessellating.
r_ParticlesTessellationMinTriSize description=Sets minimum size of particles (in pixels) to use when tessellating.
r_PixelDensityBaseScale description=User-specific extra scale for debug text
r_PlanetAtmoDebugVizMode description=Enables atmosphere debug visualization: 0 - disabled, 1 - atmosphere preview
r_PlanetAtmoUnifiedRaymarching description=Enables unified atmosphere render path: 0 - force disabled, 1 - enabled, 2 - force enabled
r_PlanetAtmoUnifiedRaymarchingLightShafts description=Bit mask to enable rendering of light shafts in atmosphere: Bit(0) - Terrain, Bit(1) - Clouds
r_PlanetAtmoUnifiedRaymarchingNewMsLutMode description=Enables new multiscatter LUT mode for unified atmosphere render path: 0 - force disabled, 1 - enabled, 2 - force enabled
r_PlanetAtmoUnifiedRaymarchingRenderMode description=Specifies which render mode to use for unified raymarching: 0 - full res, 1 - half res, 2 - temporal
r_PlanetGroundFog description=Enables planet ground fog
r_PlanetGroundFogHeightGenMode description=Selects how to generate planet ground fog height maps: 0 - Rasterize, 1 - Compute
r_PlanetGroundFogMapUpdateDistanceFactor description=Distance factor used to decide when to suspend map updates
r_PlanetGroundFogPreferredActiveHmCascade description=Preferred active planet terrain height map cascade to use for height map generation
r_PlanetOceanForceUpdate description=Force planet ocean FFT grid update
r_PlanetOceanPhysicsSimulationPath description=Use GPU(0) or CPU(1) simulation on physics (client only). Dedicated server will always uses CPU version because of null renderer only graphics path instantiated on production.
r_PlanetOceanSimulationDistanceCullingThreshold description=Sets ocean simulation distance culling threshold
r_PlanetOceanTimeScale description=Sets ocean time scale
r_PlanetTerrainHeightMap description=Enables planet terrain height maps
r_PlanetTerrainHeightMapBaseRange description=Range (in meters) to cover in highest detail cascade (0) of planet terrain height map
r_PlanetTerrainHeightMapNumCascades description=Number of cascades to use for planet terrain height map
r_PlanetTerrainHeightMapRangeScale description=Value to exponentially scale range in subsequent cascades (1..n) of planet terrain height map
r_PlanetTerrainHeightMapSwitchFactor description=Value multiplied to distance of camera to ground when picking base cascade of planet terrain height map
r_PlanetTerrainShadows description=Enables planet terrain shadows
r_PlanetTerrainShadowsMapUpdateDistanceFactor description=Distance factor used to decide when to suspend map updates
r_PlanetTerrainShadowsPreferredActiveHmCascade description=Preferred active planet terrain height map cascade to use for shadow map generation
r_PlanetTextureArrayReleasePixelsThreshold description=Used to control GPU textures release by planet radius pixel coverage in screen
r_PlanetVolumetricClouds description=Enables planet volumetric clouds
r_PlanetVolumetricCloudsLightningShadows description=Enables lightning shadows for planet volumetric clouds
r_PlanetVolumetricCloudsLocalShadows description=Enables local shadows for planet volumetric clouds
r_PlanetVolumetricCloudsLocalShadowsEvaluationThresholdFactor description=Factor to control threshold for local cloud shadow evaluation
r_PlanetVolumetricCloudsMapUpdateDistanceFactor description=Distance factor used to decide when to suspend map updates
r_PlanetVolumetricCloudsMapUpdateFrequency description=Frequency of map updates: 0 - continuous, 1 - lazy, 2 - frozen
r_PlanetVolumetricCloudsNumRaymarchSteps description=Total number of raymarch steps
r_PlanetVolumetricCloudsSmGenNumStepsPass0 description=Total number of raymarch steps for cloud shadow map generation
r_PlanetVolumetricCloudsSmGenNumStepsPass1 description=Total number of raymarch steps for cloud shadow map generation
r_PlanetVolumetricCloudsSmGenNumStepsPerFrame description=Number of raymarch steps to process per frame for cloud shadow map generation
r_PlanetVolumetricCloudsWmGenNumSamples description=Total number of samples per texel for weather map generation
r_PlanetVolumetricCloudsWmGenNumSamplesPerFrame description=Number of samples per texel to process per frame for weather map generation
r_PosX description=Sets the preferred display window left edge position, in pixels. Default is -1, which will center window on primary display.
Usage: r_PosX [-1=centered/0+=left edge position]
r_PosY description=Sets the preferred display window top edge position, in pixels. Default is -1, which will center window on primary display.
Usage: r_PosY [-1=centered/0+=top edge position]
r_PositionBoneMap_BaseResolution description=Base resolution for position-bone maps (larger objects may use a multiple of this resolution).

r_PostHoloBloomStrength description=The strength of overall bloom on the holograms.
Default is 1.0f, 0 = no bloom, higher = stronger bloom
r_PostHoloDebugClippingSphere description=Debug views for hologram clipping spheres.
Default is 0 (disabled). 1 Wireframe
r_PostHoloDebugDraw description=Debug views for holograms.
Default is 0 (disabled). 1 AABBs, 2 positions
r_PostHoloDebugTransitionType description=Set a transition on all holograms to test how they look.
Default is 0 (disabled). 1 Clip, 2 Dissolve, 3 Texture
r_PostHoloDebugTransitions description=Automatically animate transition-enabled holograms to preview the effect.
Default is 0.0f (disabled), higher = slower animations
r_PostProcessFilters description=Enables post processing special effects filters.
Usage: r_PostProcessEffectsFilters [0/1]
Default is 1 (enabled). 0 disabled
r_PostProcessGameFx description=Enables post processing special effects game fx.
Usage: r_PostProcessEffectsGameFx [0/1]
Default is 1 (enabled). 0 disabled
r_PostProcessNanoGlassDebugView description=Debug views for Nano Glass post processing.
Usage: CV_r_PostProcessNanoGlassDebugView [0/1]
Default is 0 (disabled). 1 Wire frame.
r_PostProcessParamsBlending description=Enables post processing effects parameters smooth blending
Usage: r_PostProcessEffectsParamsBlending [0/1]
Default is 1 (enabled).
r_PostProcessReset description=Enables post processing special effects reset.
Usage: r_PostProcessEffectsReset [0/1]
Default is 0 (disabled). 1 enabled
r_PostScaleformBloomStrength description=The strength of overall bloom on Scaleform.
Default is 0.2f, 0 = no bloom, higher = stronger bloom
r_PostprocessParamsBlendingDuration description=Sets how long it takes post processing effects parameters to blend to their target values
Usage: r_PostprocessParamsBlendingDuration [seconds]
Default is 0.5f.
r_PrecacheShaderList description=
r_PrintMemoryLeaks description=
r_ProfileArt description=Enable dev team profiling with the following modes. Axis: x vs y. Filter: a,b
1 - (default) RenderStage vs Statistic (All teams, All zones)
2 - RenderStage vs Statistic (Current team, All zones)
3 - Zones vs Statistic (All teams, All renderstages)
4 - Zones vs Statistic (Current team, All renderstages) - Columns sorted by highest team budget percentage used
5 - Teams vs Statistic (All zones, All renderstages)
6 - RenderStage vs Teams (Drawcalls, All zones)
7 - RenderStage vs Teams (Polycount, All zones)
8 - RenderStage vs Teams (Instances, All zones)
r_ProfileArtFrequency description=Refresh rate of the profiling system (In seconds).

r_ProfileArtProfileGroup description=Filters which profile group data should be collected and displayed.
1-n: Filters for one specific profile group.
IDs:
1 - Unknown
2 - UpdateInstBuffers
3 - DamageMapUpdate
4 - RuntimeCubemap
5 - RenderToTexture
6 - DepthPrePass
7 - DeferredOpaque
8 - ProjectedDecals
9 - Shadows
10 - SSDirOcclusion
11 - SSReflections
12 - GlobalIllumination
13 - Fog
14 - DeferredLighting
15 - SSScatter
16 - ForwardOpaque
17 - ForwardTransparent
18 - ToneMapping
19 - PostProcessing
20 - AfterPostProcess
21 - CoverageBuffer
22 - AmbientPass
23 - WaterSimulation
24 - WaterBoundary
25 - WettingAndCaustics
26 - WaterBuffer
27 - WaterPrePass
28 - Rain
29 - DebugText
30 - GasCloud
31 - GPUParticleUpdate
32 - GPUParticleSpawn
33 - GPUParticleLightAtlas
34 - GPUParticleSorting
35 - GPUParticleCopyMerge
36 - Scaleform
37 - GPUParticlePlanet
38 - GPUParticleFire
39 - PlanetAtmosphere
40 - PlanetVolumetricClouds
41 - PlanetTerrainHeightMaps
42 - PlanetTerrainShadows
43 - PlanetGroundFog
44 - ComputeSkinning
45 - PlanetOcean

r_ProfileArtShowBudgets description=Display all the budgets next to the render profiler data.

r_ProfileArtStats description=Filters which stats data should be collected and displayed.
1-n: Filters for one specific statistic.
IDs:
1 - DrawCalls
2 - PolyCount
3 - Instances
4 - EnvProbes
5 - Reg&AmbLights
6 - ShadowMaps
7 - FogVolumes
8 - LensFlares
9 - Beams

r_ProfileArtZoneFilter description=Filters which zones should have their data collected and displayed.
'str':     Filters for one specific zone matching the str name.
'*str':    Filters for zones that contain the str substring in their name.
IDs:       ZoneFilter uses a string name to filter for specific zones.
r_ProfileShaders description=Enables display of render profiling information.
Usage: r_ProfileShaders [0/1]
Default is 0 (off). Set to 1 to display profiling
of rendered shaders.
r_ProfileShadersGroupByName description=Group items by name ignoring RT flags.
Usage: r_ProfileShaders [0/1]
r_ProfileShadersSmooth description=Smooth time information.
Usage: r_ProfileShadersSmooth [0-10]
r_ProjectedDecalsDepthBias description=A depth bias applied during ztest operation to increase precision and prevent near plane clip issues when approaching very close to a decal surface.
Default is 1
r_RTT_AR_AfterToneMapping description=Sets AR RTT to render before or after tone mapping. Can be used at runtime.
0 - AR RTT renders before tone mapping
1 - AR RTT renders after tone mapping

r_RTT_AR_Enabled description=Enables Augmented Reality RenderToTexture Tech. If disabled in User.cfg, it will be permanently off and will require application restart to reactivate.
0 - Disabled
1 - Enabled

r_RTT_AllowSelfRTTDependency description=Allow RTTs to include themselves during rendering. Will force Atlas usage so that the previous frame is available.
r_RTT_AtlasAllocationSortingDebug description=Display RenderToTexture atlas tree allocation sorting.
r_RTT_AtlasMipMapping_Enabled description=Enables RenderToTexture Atlas MipMapping.
r_RTT_AtlasTreeAllocationDebug description=Display RenderToTexture atlas tree allocations.
r_RTT_CubemapOnlyModeIntensity description=Intensity on cubemaps in cubemap-only lighting mode to account for the lack of direct lighting.

r_RTT_DebugCameras description=Display params on current RTTOs with cameras.
r_RTT_DebugCubemapBackdrop description=Display RenderToTexture cubemap backdrops.
0 - Disabled
1 - Show the active cubemap on the RTTO
2 - Show all cubemaps in range of the RTTO (with the active one highlighted)

r_RTT_DebugForceRedrawStatic description=Repeatedly render any static RTTs that are triggered for debugging purposes. Note that this may 'jam' the streaming system until it is disabled.
r_RTT_DebugIsUpscalingSupport description=Enables RenderToTexture Resolution Upscale Support.
r_RTT_DebugMeshIncludes description=Display RenderToTexture mesh inclusion lists. The table can be navigated with the arrow keys.
r_RTT_DebugResolutionUpdates description=Display RenderToTexture resolution updates.
r_RTT_DebugResolutions description=Display RenderToTexture resolutions.
r_RTT_DebugSubmissionRequests description=Display RenderToTexture streaming requests.
0 - Disabled
1 - Output Entity Bubbles Stream Requests on the Main Thread
2 - Output Render Requests on the Render Thread
3 - Output Precached Stream on the Main Thread

r_RTT_DebugUsage description=Display list of all current RTTOs.
r_RTT_Enabled description=Enables RenderToTexture Tech. If disabled in User.cfg, it will be permanently off and will require application restart to reactivate.
Turning off during application use will stop all functionality from being used and therefore stop the RenderToTexture system from functioning.
0 - Disabled
1 - Enabled

r_RTT_FixAtlasColorCorrection description=Fix RTT copies into the atlas not handling premultiplied alpha correctly.
r_RTT_FlashPlayerNumViewportUpdatePerFrame description=Limit the number of flashPlayer viewport update per frame.

r_RTT_FlashPlayerViewportUpdateThreshold description=The threshold of viewport change rate to update the viewport of flash player.

r_RTT_ForceFlashColourCorrection description=Override colour correction setting on RTTs to track down RTTs tagged with incorrect color spaces.
 1 = Force conversion of values from sRGB to Linear
 2 = Force conversion of values from Linear to sRGB

r_RTT_GenerateMipmapChainEachRTTRender description=Enables Mipmap chain generation on each RTT Render.
r_RTT_MaxNumOfFullScreenRT description=Limit the number of full-screen render-targets which the RTT can draw in a single frame. Additional requests will be moved to the atlas and all RTTs will be down-scaled until they fit.

r_RTT_NumOfStaticRttoUpdatePerFrame description=The number of static RTTOs which are updated forcedly per frame to prevent streaming issue.

r_RTT_OverrideRTTTexture description=Override all RTT content with a hard-coded texture.
0 - Disabled
1 - TestCard
2 - ReplaceMe
3 - Black
4 - White

r_RTT_SortRenderOrderForDependency description=Change between RTT dependency sorting approaches.
0 - Legacy sorting that renders all dependent RTTs (i.e., RTTs seen by other RTTs) before independent ones, then by maximum resolution.
1 - Sorting by maximum parenthood depth (i.e., an RTT seen by another RTT is considered a child of that RTT, and all children will render before all their parents), then by minimum resolution.

r_RTT_TAACoherencyLifeTime description=The number of frame a coherent pipeline allocation lasts for.

r_RTT_TAAPoolSize description=The max number of RTTOs with TAA enabled.

r_RTT_UpdateIntervalOfStaticRTTO description=The interval in frames between two updates of the same static RTTO.

r_Rain description=Enables rain rendering
Usage: r_Rain [0/1/2]
0 - disabled1 - enabled2 - enabled with rain occlusion
r_RainAmount description=Sets rain amount
Usage: r_RainAmount
r_RainDistMultiplier description=Rain layer distance from camera multiplier
r_RainDropsEffect description=Enable RainDrops effect.
Usage: r_RainDropEffect [0/1/2]
0: force off
1: on (default)
2: on (forced)
r_RainIgnoreNearest description=Disables rain wet/reflection layer for nearest objects
Usage: r_RainIgnoreNearest [0/1]

r_RainMaxViewDist description=Sets rain max view distance
Usage: r_RainMaxViewDist
r_RainMaxViewDist_Deferred description=Sets maximum view distance (in meters) for deferred rain reflection layer
Usage: r_RainMaxViewDist_Deferred [n]
r_RainOccluderSizeTreshold description=Only objects bigger than this size will occlude rain
r_ReflectTextureSlots description=Reflect texture slot information from shader
r_Reflections description=Toggles reflections.
Usage: r_Reflections [0/1]
Default is 1 (reflects).
r_ReflectionsQuality description=Toggles reflections quality.
Usage: r_ReflectionsQuality [0/1/2/3]
Default is 0 (terrain only), 1 (terrain + particles), 2 (terrain + particles + brushes), 3 (everything)
r_Refraction description=Enables refraction.
Usage: r_Refraction [0/1]
Default is 1 (on). Set to 0 to disable.
r_RefractionPartialResolves description=Do a partial screen resolve before refraction
Usage: r_RefractionPartialResolves [0/1]
0: disable 
1: enable (default)
r_RefractionPartialResolvesClear description=Clear the rendertarget before partial resolve copy
0: disable (default)
1: enable
r_RefractionPartialResolvesModifier description=Extends (or Limits) area for partial resolves so refraction effects can properly sample outside of the screensize area
r_RefractionResolvesDebug description=Toggle refraction resolves debug display
Usage: r_RefractionResolvesDebug [0/1/2/3]
0: disable 
1: Additive 2d area (partial resolve) 
2: Bounding boxes (full screen or partial resolve. Using opauqe or transparent scene render target) 
3: Alpha overlay with varying colours (partial resolve) 

r_RefractionScreenSizeThresholdMultiplier description=Multiplier on top of screen space size for adjusting when we switch various refraction. (Using and blending mips, transparent or opaque scene capture.)
r_ReleaseAllResourcesOnExit description=
r_ReloadShaders description=Reloads shaders.
Usage: r_ReloadShaders [0/1]
Default is 0. Set to 1 to reload shaders.
r_RenderDocCapture description=To capture one RenderDoc (variable is set to 0 after capturing)
0=do not take a RenderDoc Capture (default), 1= save a RenderDoc Capture, 2>= save the number of captures
r_RenderDocEnabled description=Enable RenderDoc captures via cvar. Needs to be set before loading the Client/Editor and impacts performance.
0 = Disabled
1 = Enabled
2 = Enabled with API validation
r_RenderDocTimer description=RenderDoc capturing delay
r_RenderList_Batching description=Enable/disable render items batching to reduce calls to FX_FlushShader* 
Usage: CV_r_RenderList_Batching [0/1]

r_RenderList_HWInstancing description=Toggles HW geometry instancing.
Usage: r_RenderList_HWInstancing [0/1]
Default is 1 (on). Set to 0 to disable geom. instancing.
r_RenderList_HWInstancingDebug description=Toggles HW geometry instancing debug display.
Usage: r_RenderList_HWInstancingDebug [0/1/2]
Default is 0 (off). Set to 1 to add GPU markers around instanced objects. 2 will visually highlight them as well.
r_RenderList_Instancing description=Enable/disable render items instance merging
Usage: CV_r_RenderList_Instancing [0/1]
0: disable all instancing drawcall merging
1: enable instancing drawcall merging

r_RenderList_ShaderResourceSorting description=Sets what sorting and batching should occur with shader resources.
Usage: CV_r_RenderList_ShaderResourceSorting [0/1/2/3/4]
0: No sorting or batching
1: Sorting but no batching
2: Sorting and batching
3: Force re-sort and batch calculation for new resources every frame
4: Force re-sort and batch calculation for every resource every frame
Default is 2

r_RenderList_ShaderSort description=Sets sorting behavior of render items based on shader.
Usage: CV_r_RenderList_ShaderSort [0/1]
0: Use shader resource ID
1: Use per-technique shader sort ID
Default is 1

r_RenderMeshBoundingBoxDebug description=Enabled debug rendering of RenderMesh bounding boxes.
0 = Disabled
1 = Enabled AABB
2 = Enabled OBB

r_RenderTargetPoolLogEvents description=Log all RT Pool acquire/release events and dump to RTPoolEvents_FRAMEID.csv
r_RenderThreadDebugEventsEnable description=Toggles storing of threading signals and waits for debugging.
r_ReportVideoMemoryUsage description=Dump video memory usage stats to the console/log.
r_ReprojectOnlyStaticObjects description=Forces a split in the zpass, to prevent moving object from beeing reprojected
r_ResolutionScale description=Use an internal render resolution that is different from the output resolution of the main display. 1.0: No scaling, >1.0: Supersampling, <1.0: Upsampling
r_ResolutionScaleMinSize description=Clamps internal render resolution to specified lower bound (should be 512 for probes)
r_SSReflHalfRes description=Toggles rendering reflections in half resolution

r_SSReflections description=Glossy screen space reflections [0/1]

r_ScatteringGridCellHeight description=Scattering query grid cell height (m)
r_ScatteringGridGroundLODNumCells description=Num cells on each axis of the ground LOD scattering query grid
r_ScatteringGridSpaceLODNumCells description=Num cells on each axis of the space LOD scattering query grid
r_Scissor description=Enables scissor test
r_ScreenshotAlphaMode description=Include extra data in alpha channel in screenshots
0 = None, 1 = Transparency, 2 = DoF CoC (Depth of Field - Circle of Confusion)
r_ShaderCompilerDontCache description=Disables caching on remote shader compile server.
Usage: r_ShaderCompilerDontCache 0 #
Default is 0
r_ShaderCompilerPort description=Set user defined port of the remote shader compile server.
Usage: r_ShaderCompilerPort 61453 #
Default is 61453
r_ShaderCompilerServer description=Host name of machine running the remote shader compile server.
Usage: r_ShaderCompilerServer "host name"
Default is localhost
r_ShaderDebugParams description=Enables debug parameters and properties on all materials.
r_ShaderEmailCCs description=Adds optional CC addresses to shader error emails
Usage: r_ShaderEmailCCs "email1@cloudimperiumgames.com;email2@cloudimperiumgames.com" 
Default is empty 
r_ShaderEmailTOs description=Overrides remote shader compile server's TO addresses to send shader error emails
Usage: r_ShaderEmailTOs "email1@cloudimperiumgames.com;email2@cloudimperiumgames.com" 
Default is empty (that is, use server defaults) 
r_ShaderEmailTags description=Adds optional tags to shader error emails e.g. own name or build run
Usage: r_ShaderEmailTags "some set of tags or text" 
Default is build version
r_ShaderProjectName description=Name of project. Used for communication with remote shader compile server.
Usage: r_ShaderProjectName MyGame
Default is empty
r_ShadersAsyncCompiling description=Enable asynchronous shader compiling
Usage: r_ShadersAsyncCompiling [0/1/2/3]
 0 = off, (stalling) shaders compiling
 1 = on, shaders are compiled in parallel, missing shaders are rendered in yellow
 2 = on, shaders are compiled in parallel, missing shaders are not rendered
 3 = on, shaders are compiled in parallel in precache mode
r_ShadersCacheDeterministic description=Ensures that 2 shaderCaches built from the same source are binary equal
r_ShadersClientAssertOnFailedCompile description=Enables data assert on failed compilations in client. Always disabled in editor.
r_ShadersCompileAutoActivate description=Automatically reenable shader compilation if outdated shader is detected
r_ShadersDebug description=Enable extra operations when shaders get compiled
Usage: r_ShadersDebug [0/1/2/3/4/5]
 1 = Enables various logging messages regarding shaders and disables pipeline optimization in vulkan
 2 = Output initial technique script into USER/Shaders/debug/Techniques and the pre-processed compiler inputs into USER/Shaders/debug/scripts/[Technique]
 3 = Compile with debug information and optimizations disabled
 4 = Compile with debug information
 5 = Gen12 Shader Cache Log Info
Default is 0 (do nothing extra)
r_ShadersIgnoreIncludesChanging description=
r_ShadersLazyUnload description=
r_ShadersLoadFromPak description=Shaders (Preprocessed Bin+Cached Shaders) will first be loaded from PAK if available before compiling and storing it in the USER folder.
r_ShadersLogCacheMisses description=Log all shader caches misses
0 = No logging
1 = Logging to separate file only
2 = Logging to separate file and TTY (default)
r_ShadersRemoteCompiler description=Enables compilation on remote shader compile server
r_ShadersSubmitRequestline description=Submits request line for each compilation request to remote shader compile server
r_ShadersTokensFromFile description=Memory optimization only. Token data through CShaderMan::ParseShader() will be saved to file and loaded on demand. Saves up to 200-300MB of RAM. Off in ShaderCacheGen.
r_ShadowBiasClamp description=Shadow map bias clamp.
Usage: r_ShadowBiasClamp 0.0 min to unlimited max
r_ShadowBiasConstDeviceMultiplier description=ShadowMap Bias Multiplier.
Usage: r_ShadowBiasConstDeviceMultiplier is a multiplier on each individual non sun light's bias.
r_ShadowBiasSlopeMultiplier description=ShadowMap Slope Multiplier.
Usage: r_ShadowBiasSlopeMultiplier is a multiplier on each individual non sun light's slope bias.
r_ShadowBiasSunConstDevice description=ShadowMap Sun Const Bias.
Usage: r_ShadowBiasSunConstDevice value passed to D3D to account for floating point precision issues.
r_ShadowBiasSunConstJitterMultiplier description=ShadowMap Sun Const Bias Jitter Multiplier.
Usage: r_ShadowBiasSunConstJitterMultiplier is a multiplier on amount of additional const bias applied based on jitter kernel size
r_ShadowBiasSunConstLinearMultiplier description=ShadowMap Sun Const Bias Multiplier.
Usage: r_ShadowBiasSunConstLinearMultiplier is a multiplier on amount of const bias applied during sun shadows mask gen
r_ShadowBiasSunConstMaxAngle description=ShadowMap Sun Const Max Angle.
Usage: r_ShadowBiasSunConstMaxAngle is the maximum supported angle that polys in the same texel can be relative to each other and not get bias issues.
r_ShadowBiasSunSlopeJitterMultiplier description=ShadowMap Sun Slope Bias Jitter Multiplier.
Usage: r_ShadowBiasSunSlopeJitterMultiplier is a multiplier on amount of additional slope bias applied based on jitter kernel size
r_ShadowBiasSunSlopeMaxAngle description=ShadowMap Sun Slope Max Angle.
Usage: r_ShadowBiasSunSlopeMaxAngle is the maximum supported angle that geometry can be relative to the sun and not get bias issues.
r_ShadowBiasSunSlopeMultiplier description=ShadowMap Sun Slope Bias Multiplier.
Usage: r_ShadowBiasSunSlopeMultiplier is a multiplier on amount of slope bias applied at the D3D level during shadow map rendering
r_ShadowBiasSunStaticRegionConstLinearOffset description=ShadowMap Sun StaticRegion Const Bias Multiplier.
Usage: r_ShadowBiasSunStaticRegionConstLinearOffset is an additional offset on the amount of const bias applied during sun shadows mask gen. Specifically just for static regions
r_ShadowGen description=0=disable shadow map updates, 1=enable shadow map updates
r_ShadowGenDepthClip description=0=disable shadow gen depth clipping, 1=enable shadow gen depth clipping
r_ShadowGenMode description=0=Use Frustums Mask
1=Regenerate all sides
Usage: r_ShadowGenMode [0/1]
r_ShadowJitteringDirectionalLight description=Shadow map jittering radius for directional lights.
Usage: r_ShadowJitteringDirectionalLight [0=off]
r_ShadowJitteringOmniDirectionalLight description=Shadow map jittering radius for omnidirectional light.
Usage: r_ShadowJitteringOmniDirectionalLight [0=off]
r_ShadowJitteringProjectionLight description=Shadow map jittering radius for projection light.
Usage: r_ShadowJitteringProjectionLight [0=off]
r_ShadowMaskRegularLights description=Toggle rendering of shadow mask for regular lights
r_ShadowMaskSun description=Toggle rendering of shadow mask for Sun light
r_ShadowPass description=Process shadow pass
r_ShadowPoolDebugRender description=Draw shadow pool on screen
r_ShadowPoolDebugRenderSize description=How big to draw shadow pool debug (as fraction of vertical screen resolution)
r_ShadowSunCascadeBlendsWithStaticRegion description=Determine which starting cascade and up isthe static region allowed to blend over with max blending. (Index into array value).
r_ShadowSunCascadeCopy description=Enable or disable the process of copying lower sun cascade into higher cascade shadow pool
r_ShadowsAdaptionMin description=starting kernel size, to avoid blocky shadows.
Usage: r_ShadowsAdaptionMin [0.0 for blocky - 1.0 for blury], 0.35 is default
r_ShadowsAdaptionRangeClamp description=maximum range between caster and reciever to take into account.
Usage: r_ShadowsAdaptionRangeClamp [0.0 - 1.0], default 0.01
r_ShadowsAdaptionSize description=Select shadow map blurriness if r_ShadowJittering is activated.
Usage: r_ShadowsAdaptoinSize [0 for none - 10 for rapidly changing]
r_ShadowsGridAligned description=Selects algorithm to use for shadow mask generation:
0 - Disable shadows snapping
1 - Enable shadows snapping in world space
2 - Enable shadows snapping relative to zone movement between frames. Zone chosen is the one that encompasses the biggest cascade. 
r_ShadowsMaskDownScale description=Saves video memory by using lower resolution for shadow masks except first one
0=per pixel shadow mask
1=half resolution shadow mask
Usage: r_ShadowsMaskDownScale [0/1]
r_ShadowsMaskLocalLights description=Add local lights into the screenspace shadow mask as an optimisation (Default = 1)
0=lights sample shadows during lighting pass
1=lights are added to the shadow mask
Usage: r_ShadowsMaskLocalLights [0/1]
r_ShadowsNearestMapResolution description=Nearest shadow map resolution. Default: 4096
r_ShadowsPOMSelfShadowEnabled description=Enable or Disable POM Self Shadow Copy into ShadowMask. Default: 1 = ON
r_ShadowsPoolSize description=Set size of shadow pool (e_ShadowsPoolSize*e_ShadowsPoolSize)
r_Sharpening description=Image sharpening amount
Usage: r_Sharpening [Value]
r_ShowLightBounds description=Display light bounds - for debug purpose
Usage: r_ShowLightBounds [0=off/1=on]
r_ShowLines description=Toggles visibility of wireframe overlay.
Usage: r_ShowLines [0/1]
Default is 0 (off).
r_ShowRenderTarget description=Displays render targets - for debug purpose
[Usage]
r_ShowRenderTarget -l : list all available render targets
r_ShowRenderTarget -l hdr : list all available render targets whose name contain 'hdr'
r_ShowRenderTarget -nf zpass : show any render targets whose name contain 'zpass' with no filtering in 2x2(default) table
r_ShowRenderTarget -c:3 pass : show any render targets whose name contain 'pass' in 3x3 table
r_ShowRenderTarget z hdr : show any render targets whose name contain either 'z' or 'hdr'
r_ShowRenderTarget scene:rg scene:b : show any render targets whose name contain 'scene' first with red-green channels only and then with a blue channel only
r_ShowRenderTarget scenetarget:rgba:2 : show any render targets whose name contain 'scenetarget' with all channels multiplied by 2
r_ShowRenderTarget scene:b hdr:a : show any render targets whose name contain 'scene' with a blue channel only and ones whose name contain 'hdr' with an alpha channel only
r_ShowRenderTarget -e $ztarget : show a render target whose name exactly matches '$ztarget'
r_ShowRenderTarget -s scene : separately shows each channel of any 'scene' render targets
r_ShowRenderTarget -k scene : shows any 'scene' render targets with RGBk decoding
r_ShowRenderTarget -se scene : shows any 'scene' render targets with RGBe decoding
r_ShowRenderTarget -a scene : shows any 'scene' render targets with 101110/8888 aliasing
r_ShowRenderTarget -sl scene : shows any slices for 'scene' render targets (if 2d array or 3d texture) separately

r_ShowTexture description=Displays loaded texture - for debug purpose

r_ShowVideoMemoryStats description=
r_SilhouettePOM description=Enables use of silhouette parallax occlusion mapping.
Usage: r_SilhouettePOM [0/1]
r_Snow description=Enables snow rendering
Usage: r_Snow [0/1/2]
0 - disabled
1 - enabled
2 - enabled with snow occlusion
r_SnowDisplacement description=Enables displacement for snow accumulation
Usage: r_SnowDisplacement [0/1]
0 - disabled
1 - enabled
r_SnowFlakeClusters description=Number of snow flake clusters.
Usage: r_SnowFlakeClusters [n]
r_SnowHalfRes description=When enabled, snow renders at half resolution to conserve fill rate.
Usage: r_SnowHalfRes [0/1]
0 - disabled
1 - enabled

r_SonarVision description=Toggles sonar vision enabling.
Usage: r_SonarVision [0/1]
Default is 1 (on). Set to 2 to enable debug mode (force enabling). Set to 0 to completely disable sonar vision modes.
r_Stats description=Toggles render statistics.
0=disabled,
1=global render stats,
3=CPU times of render passes and video memory usage,
4=CPU times of render passes,
5=Occlusion query calls (calls to mfDraw/mfReadResult_Now),
6=display per-instance drawcall count,
8=Info about instanced DIPs,
13=print info about cleared RT's,
Usage: r_Stats [0/1/n]
r_StereoDevice description=Sets stereo device (only possible before app start)
Usage: r_StereoDevice [0/1/2/3/4]
0: No stereo support (default)
1: Frame compatible formats (side-by-side, interlaced, anaglyph)
2: HDMI 1.4 (PS3 and Xbox 360 only)
3: Stereo driver (PC only, NVidia or AMD)
4: Dualhead (PC only, two projectors or iZ3D screen)
100: Auto-detect device for platform
r_StereoEyeDist description=Maximum separation between stereo images in percentage of the screen.
r_StereoFlipEyes description=Flip eyes in stereo mode.
Usage: r_StereoFlipEyes [0=off/1=on]
0: don't flip
1: flip

r_StereoGammaAdjustment description=Additional adjustment to the graphics card gamma correction when Stereo is enabled.
Usage: r_StereoGammaAdjustment [offset]0: off
r_StereoHudScreenDist description=Distance to plane where hud stereo parallax converges to zero.
If not zero, HUD needs to be rendered two times.
r_StereoMode description=Sets stereo rendering mode.
Usage: r_StereoMode [0=off/1/2]
1: Dual rendering
2: Post Stereo

r_StereoNearGeoScale description=Scale for near geometry (weapon) that gets pushed into the screen
r_StereoOutput description=Sets stereo output. Output depends on the stereo monitor
Usage: r_StereoOutput [0=off/1/2/3/4/5/6/7]
0: Standard
1: IZ3D
2: Checkerboard (not supported on X360)
3: Above and Below (not supported)
4: Side by Side
5: Line by Line (Interlaced)
6: Anaglyph
7: VR Headset

r_StereoScreenDist description=Distance to plane where stereo parallax converges to zero.
r_StereoStrength description=Multiplier which influences the strength of the stereo effect.
r_SupersamplingFilter description=Filter method to use when resolving supersampled output
0 - Box filter
1 - Tent filter
2 - Gaussian filter
3 - Lanczos filter
r_TessellationTriangleSize description=Desired triangle size for screen-space tessellation.
Default is 10.
r_TexAnisotropy description=Specifies the level for anisotropic texture filtering.
r_TexAtlasSize description=
r_TexBindMode description=Enable texture overrides.
Usage: r_TexBindMode [0/1/2/4/5/6/7/8/9/10/11]
	1 - Force grey diffuse maps (other than fonts)
	2 - Force white diffuse maps (other than fonts)
	3 - Force flat normal maps
	4 - Force white gloss maps
	5 - Force white specular maps 
	6 - Force grey height maps
	7 - Force white diffuse maps and flat normal maps
	8 - Force diffuse maps to use mipmapdebug texture
	9 - Colour code diffuse maps to show minimum uploaded mip [0:green,1:cyan,2:blue,3:purple,4:magenta,5:yellow,6:orange,7:red,higher:white]
	10 - Colour code diffuse maps to show textures streaming in in green and out in red
	11 - Colour code diffuse maps that have requested a lower mip than the lowest available [-3: red, -2: yellow, -1: green]
	12 - Visualise textures that have more or less mips in memory than needed
Default is 0 (disabled).
r_TexLog description=Configures texture information logging.
Usage:	r_TexLog #
where # represents:
	0: Texture logging off
	1: Texture information logged to screen
	2: All loaded textures logged to 'UsedTextures.txt'
	3: Missing textures logged to 'MissingTextures.txt
r_TexNoLoad description=Disables loading of textures.
Usage:	r_TexNoLoad [0/1]
When 1 texture loading is disabled.
r_TexelsPerMeter description=Enables visualization of the color coded "texels per meter" ratio for objects in view.
The checkerboard pattern displayed represents the mapping of the assigned diffuse
texture onto the object's uv space. One block in the pattern represents 16x16 texels.
Usage: r_TexelsPerMeter [n] (where n is the desired number of texels per meter; 0 = off)
r_TexelsPerMeterSourceOpacity description=Opacity of TexelsPerMeter view relative to base texture
r_TexelsPerMeterUseTiling description=0: TexelsPerMeter is from mesh unmodified
1: TexelsPerMeter is relative to layer (HardSurface only atm)
r_TextureLodDistanceRatio description=Controls dynamic LOD system for textures used in materials.
Usage: r_TextureLodDistanceRatio [-1, 0 and bigger]
Default is -1 (completely off). Value 0 will set full LOD to all textures used in frame.
Values bigger than 0 will activate texture LOD selection depending on distance to the objects.
r_TexturesStreamPoolSize description=Size of texture streaming pool in MB.

r_TexturesStreamPoolSizeLimit description=Maximum texture pool size in MB if r_TexturesStreamPoolSize is set to -1
r_TexturesStreaming description=Enables direct streaming of textures from disk during game.
Usage: r_TexturesStreaming [0/1/2]
Default is 0 (off). All textures save in native format with mips in a
cache file. Textures are then loaded into texture memory from the cache.
r_TexturesStreamingDebug description=Enables textures streaming debug mode. (Log uploads and remove unnecessary mip levels)
Usage: r_TexturesStreamingDebug [0/1/2]
Default is 0 (off).1 - texture streaming log.2 - Show textures hit-parade based on streaming priorities3 - Show textures hit-parade based on the memory consumed
r_TexturesStreamingDebugDumpIntoLog description=Dump content of current texture streaming debug screen into log
r_TexturesStreamingDebugFilter description=Filters displayed textures by name in texture streaming debug mode

r_TexturesStreamingDebugLogCleanup description=Enables debug log output during cleanup of textures streaming system.
Usage: r_TexturesStreamingDebug [0/1]
Default is 0 (off).
r_TexturesStreamingDebugMinMip description=Filters displayed textures by loaded mip in texture streaming debug mode
r_TexturesStreamingDebugMinSize description=Filters displayed textures by size in texture streaming debug mode
r_TexturesStreamingMaxRequestedJobs description=Maximum number of tasks submitted to streaming system.
Usage: r_TexturesStreamingMaxRequestedJobs [jobs number]
Default is 32 jobs
r_TexturesStreamingMaxRequestedMB description=Maximum amount of texture data requested from streaming system in MB.
Usage: r_TexturesStreamingMaxRequestedMB [size]
Default is 4.0(MB)
r_TexturesStreamingMipBias description=Controls how texture LOD depends from distance to the objects.
Increasing this value will reduce amount of memory required for textures.
Usage: r_TexturesStreamingMipBias [-4..0..4]
Default is 0.
r_TexturesStreamingNegativeMipCompRange description=Controls how much to compress negative mip-factors to allow resolution reduction on nearby textures.
Usage: r_TexturesStreamingNegativeMipCompRange [0.01/1.00]
Default is 0.1
r_TexturesStreamingNoUpload description=Disable uploading data into texture from system memory. Useful for debug purposes.
Usage: r_TexturesStreamingNoUpload [0/1]
Default is 0 (off).
r_TexturesStreamingOnlyVideo description=Don't store system memory copy of texture. Applicable only for PC and PS3.
On Xenon it's on[1] by default and cannot be changed.
Usage: r_TexturesStreamingOnlyVideo [0/1]
Default is 0 (off) for PC and PS3, 1(on always) for XBox 360.
r_TexturesStreamingPostponeMips description=Postpone loading of high res mipmaps to improve resolution balance of texture streaming.
Usage: r_TexturesStreamingPostponeMips [0/1]
Default is 1 (on).
r_TexturesStreamingPostponeThresholdKB description=Threshold used to postpone high resolution mipmap loads in KB.
Usage: r_TexturesStreamingPostponeThresholdKB [size]
Default is 1024(KB)
r_TexturesStreamingPrecacheRounds description=Number of precache rounds to include in active streamed texture lists.
Default is 1
r_TexturesStreamingStreamer description=Change which streaming implementation is used for streaming textures.
Default is 1.
0: Planning Texture Streamer
1: Balanced Texture Streamer

r_TexturesStreamingSuppress description=Force unloading of all textures and suppress new stream tasks.
Default is 0
r_TexturesStreamingTopMipOnlyBias description=The mip bias for top mip only streaming textures, ex: runtime cubemap.
Reducing this value can prevent top mip only textures from being streamed out as regular textures.
Usage: r_TexturesStreamingTopMipOnlyBias [-4..0..4]
Default is -1.0.
r_ThermalVision description=Toggles termal vision enabling.
Usage: r_ThermalVision [0/1]
Default is 1 (on). Set to 2 to enable debug mode (force enabling). Set to 0 to completely disable termal vision modes.
r_ThermalVisionViewCloakFlickerMaxIntensity description=Sets thermal vision cloaked-object flicker random max intensity.
Usage: r_ThermalVisionViewCloakFlickerMaxIntensity [0.0+]
When looking at a refracting (cloaked) object sets the min scaling factor at which the object displays hot in thermal vision
r_ThermalVisionViewCloakFlickerMinIntensity description=Sets thermal vision cloaked-object flicker random min intensity.
Usage: r_ThermalVisionViewCloakFlickerMinIntensity [0.0+]
When looking at a refracting (cloaked) object sets the min scaling factor at which the object displays hot in thermal vision
r_ThermalVisionViewCloakFrequencyPrimary description=Sets thermal vision cloaked-object flicker primary frequency.
Usage: r_ThermalVisionViewCloakFrequencyPrimary [1+]
When looking at a refracting (cloaked) object sets the inverse frequency of the primary sine wave for the objects heat. Higher = slower
r_ThermalVisionViewCloakFrequencySecondary description=Sets thermal vision cloaked-object flicker secondary frequency.
Usage: r_ThermalVisionViewCloakFrequencySecondary [1+]
When looking at a refracting (cloaked) object sets the inverse frequency of the secondary sine wave for the objects heat. Higher = slower
r_TranspAfterDOFDepthBias description=Depth bias applied to TRANSP_AFTER_MB_DOF render list to prevent z-fighting when TSAA matrix jittering is active
r_TranspAfterDOFForceDistUI description=Distance within which interactive display screens are forced to TRANSP_AFTER_MB_DOF render list
r_TranspDepthFixup description=Write approximate depth for certain transparent objects before post effects
Usage: r_TranspDepthFixup [0/1]
Default is 1 (enabled)

r_UIBaseChromaAmount description=The baseline amount of chromatic aberration on holograms and Scaleform.
Default is 0.0f, 0 = no chroma aberration, higher = stronger chroma aberration
r_UIBlendMode description=Adjusts how the UI is blended onto the scene.
0 Alpha blend, 1 Additive, 2 Screen, 3 Custom CIG (additive + alpha blend), 4 Color dodge
r_UILuminanceThreshold description=The luminance value below which alpha blending kicks in with the custom CIG blending mode.
Default is 0.5f
r_UIShadowAmount description=Increases the visibility of holograms and Scaleform against bright backgrounds with a drop shadow.
Default is 0.0f, 0 = no drop shadow, higher = more visible shadow
r_UV_DebugGun description=Debug Gun to render text displaying the UV coords of the specific point of an object. (Centre of the screen ray down Z axis).
0 - Disabled
1 - Enabled

r_UltraResScreenshot description=Captures a series of NxN images that can be stitched together to get an ultra-resolution image
Usage: r_UltraResScreenshot 2/3/4/../N
r_UltraResScreenshotStabilization description=Number of times we should repeat rendering of a frame before capturing as part of r_UltraResScreenshot, for the benefit of any temporal techniques
r_Unlit description=Render just diffuse texture with no lighting (for most materials).
r_UseGPUPriority description=Enable to bump the GPU priority of the process to heighest. Useful for profiling out of focus windows. But can badly affect running two GPU intensive applications at once
r_UseTerrainTextures2K description=Use 2K resolution terrain textures.
r_UserChromaticAberration description=User options chromatic aberration amount (0-1)
Usage: r_UserChromaticAberration [Value]
r_UserSharpening description=User image sharpening amount (0-1)
Usage: r_UserSharpening [Value]
r_VSync description=Toggles vertical sync.
Usage: r_VSync [0/1]
0: Disabled
1: Enabled
r_VignetteBlur description=Sets strength of the vignette blur which is active when there is no explicit DOF

r_VisAreaClipLightsPerPixel description=Per pixel light/cubemap culling for vis areas: 0=off, 1=on
r_WaterGodRays description=Enables under water god rays.
Usage: r_WaterGodRays [0/1/2]
Default is 1 (Wobble, no god rays). Disable with 0, enable godrays and wobble with 2
r_WaterGodRaysDistortion description=Set the amount of distortion when underwater.
Usage: r_WaterGodRaysDistortion [n]
Default is 1.
r_Width description=Sets the display width in pixels.
Usage: r_Width [800/1024/..]
r_WindowMode description=Sets the window mode for the application.
Usage: r_WindowMode [0=windowed/1=borderless/2=fullscreen]
r_WindowMode_FlipDisabled description=Disables the flip present mode in Windows (currently causing visual issues on some hardware).
r_ZFightingDepthScale description=Controls anti z-fighting measures in shaders (scaling homogeneous z).
r_ZFightingExtrude description=Controls anti z-fighting measures in shaders (extrusion along normal in world units).
r_ZFightingShadowDepthScale description=Controls anti z-fighting measures in the shadow pass (scaling homogeneous z).
r_ZPassDepthSorting description=Toggles Z pass depth sorting.
Usage: r_ZPassDepthSorting [0/1/2]
0: No depth sorting
1: Sort by depth layers (default)
2: Sort by distance

r_ZPassOnly description=
r_ZPrePassSkipObjectsInMotion description=Toggles skipping z pre pass for chunks that will render motion vectors
r_ZPrePassVertDensityThreshold description=Threshold value to allow objects to render into z pre pass. Measured as chunk surface area per vert.
Usage: r_ZPrePassVertDensityThreshold [value] 

r_ZReadbackNaNCheck description=Check for NaNs in downsampled ZTarget
Usage: 
0 disabled
1 Fix NaNs in depth buffer during ZReadback
2 Assert on NaNs in depth buffer and fix them during ZReadback
r_buffer_banksize description=the bank size in MB for buffer pooling
r_buffer_fences description=Enable waiting on GPU fences for buffer updates
r_buffer_pool_defrag_dynamic description=enable/disable runtime defragmentation of dynamic buffers
r_buffer_pool_defrag_max_moves description=maximum number of moves the defragmentation system is allowed to perform per frame
r_buffer_pool_defrag_static description=enable/disable runtime defragmentation of static buffers
r_buffer_pool_max_allocs description=the maximum number of allocations per buffer pool if defragmentation is enabled
r_buffer_sli_workaround description=enable SLI workaround for buffer pooling
r_constantbuffer_banksize description=the bank size in MB for constant buffers pooling
r_constantbuffer_watermarm description=the threshold aftyer which constants buffers will reclaim memory
r_debugCVar1 description=Debug cvar to be used in shaders for testing purposes only
r_debugCVar2 description=Debug cvar to be used in shaders for testing purposes only
r_debugCVar3 description=Debug cvar to be used in shaders for testing purposes only
r_debugCVar4 description=Debug cvar to be used in shaders for testing purposes only
r_debugMissingVertexStreams description=Logs meshes and their shaders which rely on null vertex buffers bound. Ideally, we wouldn't need this.
r_debugRendering description=Can disable all debug rendering that is currently enabled, in the following way:
0=always disabled
1=disabled during screenshots/trackview-render, otherwise enabled
2=always enabled
NOTE: This CVar is not complete yet. For now, it is working as follows:
1=r_DisplayInfo disabled during g_imageTest* and g_CameraComponentOverrideCaptureCamera screenshots
2=r_DisplayInfo always enabled
r_deviceType description=Set the type of the device for the Gen12 Renderer.
0 = D3D11Legacy
1 = Vulkan

r_displayFrameGraph description=Shows a performance graph with basic timings.
The lower gray line is the 16 ms, the upper the 33 ms vsync target.
Yellow: Overall frame time
Green : GPU time
Blue  : CPU render time

r_enableAltTab description=Toggles alt tabbing in and out of fullscreen when the game is not in devmode.
Usage: r_enableAltTab [toggle]
Notes: Should only be added to system.cfg and requires a restart
r_enable_full_gpu_sync description=enable full gpu synchronization for debugging purposes on the every buffer I/O operation (debugging only).
0 - Disabled
1 - Loop indefinitely while waiting
2 - Fatal error if waiting more than 'r_full_gpu_sync_timeout' seconds
r_excludeDevTeam description=Skips the submission of render items from the requested dev team.
Usage: r_excludeDevTeam TeamName
See sys_devteam for allowable team names
r_exposureIncidentBlendAmt description=Amount of incident lighting for metering modes that blend reflected and incident measurements.
0.0 = Only reflected light
0.5 = Average of reflected and incident light
1.0 = Only incident light

r_exposureIncidentMode description=Blend amount between incident light measurements at the camera vs in the scene.
0 = At the camera position
1 = At surfaces in the scene
r_exposureIncidentNumScenePos description=Number of positions in the scene where measurements are taken (with r_exposureIncidentMode = 1).
r_exposureIncidentNumVectors description=Number of tiled lighting samples taken at each measurement position.
r_exposureIncidentSmoothingTime description=Seconds taken for incident light measurement to blend halfway towards the current frame's measurement.
r_exposureMeterMode description=What elements of scene lighting are used for exposure calculations.
0 = reflected light only (average luminance of the scene)
1 = incident light only (illuminance at a spot in front of the camera)
2 = blend of reflected and incident light (controlled by r_exposureIncidentBlendAmt)
3 = same as 2, with clamp on EV compensation based on reflectance of snow and charcoal
r_exposureNoiseRatio10EV description=Scene EV at which sensor noise is low enough to be "acceptable" by ISO standards.
r_exposureNoiseRatio40EV description=Scene EV at which sensor noise is low enough to be "excellent" by ISO standards.
r_exposurePerspectiveCorrection description=Apply weights to exposure calculations for stable results with higher FoVs
r_flaresApertureBlades description=Adjust the number of blades on the aperture.
r_flaresApertureRotation description=Rotate flare ghost images (to simulate aperture blade movement)
r_flaresApertureRoundness description=Adjust the roundness of ghost images (to simulate aperture blade movement)
r_full_gpu_sync_timeout description=sets timeout for full gpu synchronization after which program triggers a fatal error (debugging only)
r_glareFilterRatio description=Compression ratio on luminances over the threshold. E.g. a ratio of 10 will compress dynamic range by 90% (10:1).
r_glareFilterThreshold description=Luminance above which the glare filter activates. Default is 500 kcd/m^2.
r_gpuDeviceDebugLog description=Set the level of output logging for GPU driver backend systems.
0 = No log output.
1 = All log output.
2 = Backend GPU Device output.
3 = Backend SPIR-V Parse output.
4 = Backend GPU Device Memory output.
5 = GPU Allocator Memory output.
6 = Backend GPU Device Descriptor/Set output.

r_hideDebugPBRReference description=Hide the PBR reference overlay on r_debugGBuffer.
r_holograms description=Enables/disables hologram rendering.
r_intromovie description=Movie to be played waiting for the frontend loading screen
r_overrideDXGIAdapter description=Specifies index of the preferred video adapter to be used for rendering (-1=off, loops until first suitable adapter is found).
Use this to resolve which video card to use if more than one DX11 capable GPU is available in the system.
r_overrideDXGIFullScreenOutput description=Defines the preferred monitor for fullscreen display.
Defines the preferred output device for fullscreen display, which can be different from the windowed display device.
Usage: r_PreferredMonitor [0=Main Display Window (default)/(1-n) Monitor index]OBS: the output device must be attached to the selected video card. (see r_overrideDXGIAdapter and r_overrideDXGIOutput)
OBS2: many video cards support up to 2 devices connected, which would make the maximum index be 1.
Usage: r_overrideDXGIFullScreenOutput [0=main display output (default)/(1-n)=display index]
r_overrideDXGIOutput description=Specifies index of display to use for output (0=primary display).
r_profileGraph description=Shows performance graph for developers.
1 - Plot smoothed times
2 - Plot raw time data
The lower gray line is the 16 ms, the upper the 33 ms vsync target.
Yellow: Overall frame time
Green : GPU time
Blue  : CPU render time
Pink  : Main Thread processing time, if MT is the bottleneck
r_profilePipeline description=Displays profiler with detailed graphics pipeline and pass timings
0 - Disabled
1 - Pipeline sections with smoothed timings
2 - All pass labels with smoothed timings
3 - All pass labels with raw timings (unstabilized)

r_profilePipelineLogProfileGroup description=Filter for outputting specific profile group stats to console
Usage: Must have r_profilePipeline enabled, then set r_profilePipelineLogProfileGroup [0 - 32] based on EProfileGroup enum
r_scaleform description=Enables/disables Scaleform rendering.
r_shaderCompiler description=Specify which Shader Compiler to use for local shader compilation
Usage: r_shaderCompiler [0/1/2]
0 = FXC (default) (D3D11 Usage)
1 = DXC (Vulkan Usage)

r_shadersDeadCodeRemoval description=Enable removal of dead/unused code by shader parser to reduce size of shader bin and shader compilation time.0 - No code removal
1 - Remove unused FX params
2 - Remove unused FX params & structures & functions

r_shadersDisassemble description=Enable disassembly from DXC compiled shader. Can be used in conjunction with shadersDebug for varying outputs
Usage: r_shadersDisassemble [0/1]
 0 = Disables the generation of disassembly
 1 = Disassemble SPIRV/DXIL to readable text file in %cache%/shaders/Debug/Disassembly

r_shadersEnableExtraCRCChecks description=Perform extra checks to see if a shader can avoid being reparsed or recompiled. Only has an effect in editor. Otherwise acts as if set to 0.
0 - Invalidate shader if shader file (including headers before preprocessing) was changed. (Ie if basically anything changed)
1 - Perform extra CRC checks on shader after preprocessing and parsing. Reparse only if shader code after preprocessing has changed, and recompile only if both shader file and shader code after parsing have changed. (Default)

r_shadersMaxConcurrentBackgroundCompiles description=Maximum amount of concurrent shader compilations on background workers. Default is logicalCores/2. Note that the higher the count the more likely it is that the game will stall due to the fact that all background workers are doing shader compilations and our game is using background workers on the MT.
Any negative number resets it to the default.
r_shadersPreloadExts description=Preload all shader ext files during initialization (takes a few seconds)
r_ssdo description=Enables Screen Space Directional Occlusion
0 - Disabled
1 - Enabled

r_ssdoAmountAmbient description=Strength of occlusion applied to probe irradiance
r_ssdoAmountDirect description=Strength of occlusion applied to light sources
r_ssdoAmountReflection description=Strength of occlusion applied to probe specular
r_ssdoColorBleeding description=Enables AO color bleeding to avoid overly dark occlusion on bright surfaces (requires tiled deferred shading)
Usage: r_ssdoColorBleeding [0/1]

r_ssdoQuality description=Sets the SSDO quality
0 - Standard
1 - Reference mode (unoptimized)

r_ssdoRadius description=Sets the SSDO worldspace radius
r_ssdoStrength description=Allows boosting the AO amount (1.0 is the physically correct base)
r_sunshafts description=Enables sun shafts.
Usage: r_sunshafts [0/1]
Default is 1 (on). Set to 0 to disable.
r_testCard description=Render an image quality test card on the screen.
r_texturesStreamingAllowDeferredGPUTextureCreation description=Enable deferring of GPU texture creation for streamed textures in certain cases, to just before they are needed (allows for some more efficient multithreading)
r_texturesStreamingForceCancelReadingDebug description=Force cancel already started streaming read tasks.
Usage: r_texturesStreamingForceCancelReadingDebug X. Where X is number of textures that should have started streaming.
r_texturesStreamingMinLodBias description=Minimum fractional LOD bias for textures in resource streamer.
r_texturesStreamingNumAttemptsCleanup description=Number of attempts to allow streaming system to update stream slots before force removing them on cleanup/level unload.
r_texturesstreamingDeferred description=When enabled textures will be uploaded through a deferred context.

r_texturesstreamingJobUpdate description=Enable texture streaming update job
r_texturesstreamingMinUsableMips description=Minimum number of mips a texture should be able to use after applying r_texturesstreamingSkipMips.

r_texturesstreamingPostponeThresholdMip description=Threshold used to postpone high resolution mipmaps.
Usage: r_texturesstreamingPostponeThresholdMip [count]
Default is 1
r_texturesstreamingSkipMips description=Number of top mips to ignore when streaming.

r_transient_pool_size description=the bank size in MB for the transient pool
r_vulkanBatchCommands description=Change Vulkan batching of commands at end of frame behaviour.
0 = Single submittal of recorded graphics commands. Comes at a performance cost.
1 = Batches all Graphics commands to be submitted at the end of the frame. (Default).

r_vulkanCPUValidation description=Enable/Disable CPU validation layers for Vulkan backend.
0 = CPU Validation Layers Disabled (Default)
1 = CPU Validation Layers Enabled

r_vulkanDescriptorStrategy description=Set the Vulkan Descriptor Pool/Set allocation strategy.
0 = Static  : Single Large Pool for all DescriptorSet allocations - Driver manages allocations from all threads.
1 = Hybrid  : Single Large Pool for Static ResourceSets + Multiple Small Pools for Transient ResourceSets.
2 = Dynamic : Multiple Small (~16KB) Descriptor Pools where each CommandBuffer/Thread has exclusive access.

r_vulkanDeviceCheckpoints description=Enable/Disable Vulkan Checkpoint markup/insertion for GPU crash debugging.
0 = Vulkan Device Checkpoints Disabled (Default) 
1 = Vulkan Device Checkpoints Enabled

r_vulkanDisableLayers description=Try to disable overlays/VK layers that may cause instability.
r_vulkanForceDebugExtension description=Enable/Disable Debug Utils Extension for Vulkan backend.
0 = VK Debug Utils only enabled when required
1 = VK Debug Utils always on (useful when using external tools)

r_vulkanGPUValidation description=Enable/Disable GPU Assisted Validation for Vulkan Backend.
0 = GPU Assisted Validation Disabled
1 = GPU Assisted Validation Enabled

r_vulkanLegacySupport description=Enable/Disable Vulkan support for some D3D11 features. Such as binding NULL resources.
0 = Vulkan Legacy Support Disabled (Default)
1 = Vulkan Legacy Support Enabled 

r_vulkanLoaderDebug description=enable full verbose debug output for the vulkan loader.
r_vulkanOutputCommandSync description=enable full synchronization of Vulkan rendering and computing commands for debugging purposes.
r_vulkanPSOCache description=Enables using PSO Cache for Vulkan.
0 = PSO creation doesn't use cache.
1 = PSO creation uses cache.

r_vulkanPSOCacheLoad description=Attempt to load vulkan PSO cache on startup.
0 = PSO cache is fresh every run.
1 = Attempt to load PSO cache when possible. (Default).

r_vulkanProfileEmulation description=Try to emulate capabilities of another machine for Vulkan (useful for validaton)
AUTO                = VP_CIG_BASE_DLSS if validation is enabled, NO_PROFILE otherwiseNO_PROFILE          = None, do not overrideVP_CIG_BASE         = Base config for developmentVP_CIG_BASE-DLSS    = Base config for development (with DLSS)VP_CIG_BASE-RT      = Base config for development (with RT)VP_CIG_BASE-RT-DLSS = Base config for development (with RT+DLSS)
r_vulkanSynchronizationStyle description=Change Vulkan Synchronization style between Synchronization2 and original.
0 = Original Synchronization, no split barrier support and transitions are queued on BeginRecording.
1 = New Synchronization2 functionality includes split barriers (Default).

r_wireframe description=Can be used to globally set the polygon mode: 
0 (Default): Polygon mode used from Drawcallpackets 
1: Line mode 
2: Point mode
radAway description=Remove body and suit radiation. [ActorName, RadiationAdjust]
region_id description=Region id. 0:Any, 1:US, 2:Europe, 3:Oceania, 4: Asia, 5: Expansion (for further use)
removeGoto description=Remove a goto point from XML
Usage: removeGoto <point name: autocomplete>

reputation.change description=(Client) 1 - entity record 2 - scope record 3 - amount to change by.
reputation.changeClientDebug description=(Client) 1 - entity record 2 - scope record 3 - amount to change by.
reputation.changeState description=(Client) 1 - entity record 2 - state record 3 - value.
reputation.dumpCache description=Dumps the contents of the local reputation cache to the server log
reputation.get description=Get and display reputation on client and server. (Client) 1 - reputation record 2 - scope record
reputation.getLocal description=Get and display reputation on local client only. (Client) 1 - reputation record 2 - scope record
reputation.getRemote description=Get and display reputation on server only. (Client) 1 - reputation record 2 - scope record
reputation.getState description=(Client) 1 - entity record
reputation.seedState description=(Client) 1 - entity class
restartgame description=Restarts the game completely.
revive description=Revives the player.
rm_atmosphereShowMutablity description=Option to draw immutable atmosphere containers as red when debugging. [0=off/1=show]
rm_atmospherefogDensityMultiplier description=Multiplier for the density of the fog volume controlled by atmosphere containers
rm_behaviorList description=List the behaviours affecting your current position for each room
rm_debug_atmosphere_extra_log_filter description=Substring to match for atmosphere container entity name to show additional atmosphere debug logging for that entity.
rm_debug_atmosphere_sphere_size description=Modifies the size of spheres indicating atmospheres in room. Default value is: 0.5
rm_debug_connector description=Toggles debugging info for nearby room connectors and draws them as yellow boxes. Usage: rm_debug_room [0=off/1=show]
rm_debug_connector_extra_log_filter description=Substring to match for connector entity name to show additional connector debug logging for that entity.
rm_debug_draw_atmosphere_inheritance_links description=Determines whether to include atmosphere inheritance links in the debug visualization shown by room_debug_draw. On if > 0.
rm_debug_extra_log_filter description=Substring to match for room entity name to show additional room debug logging for that entity.
rm_debug_gas_producer_consumer description=Toggles debugging info for entities which consumes/produces gas, ie. something that breathes oxygen. Usage: rm_debug_gas_producer_consumer [0=off/1=show]
Set rm_debug_room_system_near_dist = 0 to debug self
rm_debug_occupant_extra_log_filter description=Substring to match for occupant entity name to show additional debug logging for that entity.
rm_debug_room description=Toggles debugging rendering for nearby rooms. Usage: rm_debug_room [0=off/1=show].
rm_debug_room_draw_filled description=If > 1 causes room debug visualization to show solid shapes rather than wireframe
rm_debug_room_extension_filter description=Optional filter for room extension info display, matches substring in extension types. 
Example: "rm_debug_room_extension_filter Jurisdiction" (room extensions only shows info for the IJurisdictionRoomExtension extension)
rm_debug_room_legacy description=Toggles legacy drawing of text for nearby rooms. Prefer using the Room System DebugGUI tool if possible. Usage: rm_debug_room_legacy [0=off/1=show].
rm_debug_room_overlaps_verbosity description=Determines the verbosity of rm_debug_debug.rm_find_overlapping_rooms. Recommended to set to 3 when looking for potential markup errors.
If this is > 0 the behaviour of rm_debug.room is overriden to show room overlap debugging info rather than atmospheric composition.0: off
1: Show only definite overlaps between rooms comprised entirely of box areas.
2: Also show probable overlaps between rooms made of complex shapes.
3: Also show warnings for rooms that appear to be nested correctly but the algorithm can't be certain.
4: Also show notifications for rooms that ARE properly nested. Not recommended due to spam.
rm_debug_room_system description=Toggle debug info for the current (client) or all connected (server) players. [0=off/1=show]
rm_debug_room_system_far_dist description=The maximum distance from a room object (room, connector, producer/consumer) the camera needs to be in order to draw the debug info. Default: 200
rm_debug_room_system_near_dist description=The minimum distance from a room object (room, connector, producer/consumer) the camera needs to be in order to draw the debug info. Default: 0.01
rm_debug_room_system_planet_far_dist description=The maximum distance from a planet room the camera needs to be in order to draw the debug info. Default: 4000000
rm_debug_room_system_show_atmosphere_for_position description=Toggle to show the output of rm_debug_room_system positional atmospheric properties instead of total. [0=off/1=show]
rm_debug_room_system_simple_dist description=The maximum distance from a room object(room, connector, producer / consumer) the camera needs to be in order to draw some simplified debug info. Default: 15
rm_enableDynamicAtmosphere description=Allow dynamic atmosphere features, including gas propagation and life support.
 0: Force off 
1: Use gamemode value. 
2: Force on.
Note that this CVar is intended to be set via user.cfg, changing it at runtime may not have the full effect as entities only read it when they are initializing.
rm_graph_deferredMapLoadTimeLimit description=Max time to spend loading room graphs per frame (ms).
rm_graph_update_time description=Delay between room markup edits and the room graph updating.  If 0, doesn't update.
rm_lifeSupportRequiresResources description=Whether or not life support requires resources to operate. Default = 1 YES, set to 0 for NO
rm_max_room_graph_subgraphs_for_export description=Maximum number of subgraphs to export in an OC - if above this the data will not be exported at all.
rm_propertyCalculations description=Show how a property is calculated for the client player at the current position
rm_propertyDebug description=List the final values of each property for the client player at the current position, use higher values to show steps up the room stack
rm_propertyParticles description=Show a visual debug of the strength for each property
rm_rainHumidityEnabled description=Enable overriding the humidity when the planet weather system outputs rain values
rm_rainHumidityMaximum description=The maximum humidity override to output when the planet weather system outputs rain values
rm_rainHumidityMinimum description=The minimum humidity override to output when the planet weather system outputs rain values
s_AudioEventPoolSize description=Sets the number of preallocated audio events.
Usage: s_AudioEventPoolSize [0/...]
Default PC: 256, XboxOne: 256, PS4: 256, Linux: 256

s_AudioObjectPoolSize description=Sets the number of preallocated audio objects and corresponding audio proxies.
Usage: s_AudioObjectPoolSize [0/...]
Default PC: 512, XboxOne: 512, PS4: 512, Linux: 512

s_AudioProxiesInitType description=Can override AudioProxies' init type on a global scale.
If set it determines whether AudioProxies initialize synchronously or asynchronously.
This is a performance type cvar as asynchronously initializing AudioProxies
will have a greatly reduced impact on the calling thread.
Be aware though that when set to initialize asynchronously that audio will play back delayed.
By how much will greatly depend on the audio thread's work load.
0: AudioProxy specific initialization.
1: All AudioProxies initialize synchronously.
2: All AudioProxies initialize asynchronously.
Usage: s_AudioProxiesInitType [0/1/2]
Default PC: 0, XboxOne: 0, PS4: 0, Linux: 0

s_AudioSystemImplementationName description=Holds the name of the AudioSystemImplementation library to be used.
Usage: s_AudioSystemImplementationName <name of the library without extension>
Default: CryAudioImplWwise

s_CaptureAllWwiseRequests description=Enable capture of all wwise commands to [USER]/audio_command_requests.xml.
s_DebugAudioRayOcclusion description=If set to 1 will display debug info for audio occlusion raycast components.
[Default is 0]
s_DefaultMultiPositionType description=Indicates the default multi position type, for audio objects which don't have the multi position type explicitly set.
1 = eAMPT_MULTISOURCES
2 = eAMPT_MULTIDIRECTIONS
Usage: s_DefaultMultiPositionType 1|2
Default: 2

s_DisablePrimaryListenerFocus description=Disable focus effect on the primary listener.
Usage: s_DisablePrimaryListenerFocus

s_DropListener description=Drop default listener at current location.
Usage: s_DropListener [0..1]
0: Disabled
1: Enabled (client entity zone mode). Default listener's location will remain at location it was 'dropped' within the client entity's zone.
   (good for dropping the listener in a ship or on a planet surface)2: Enabled (world position mode). Default listener's location will remain at location it was 'dropped' in world space.
   (good for dropping the listener in space and testing passbys)
s_DynamicRangePreset description=Set dynamic range preset [0,1,2]
 0 is MINIMUM RANGE (full compression)
1 is MEDIUM RANGE (moderate compression)
2 is FULL RANGE (no compression).
s_EnablePropagationPathing description=If set to 1, propagation is enabled.  2 is actors only.
s_EnableSecondaryOutput description=If true, enables the secondary (headset) output in wwise.
s_ExecuteTrigger description=Execute an Audio Trigger.
The first argument is the name of the AudioTrigger to be executed, the second argument is an optional AudioObject ID.
If the second argument is provided, the AudioTrigger is executed on the AudioObject with the given ID,
otherwise, the AudioTrigger is executed on the GlobalAudioObject
Usage: s_ExecuteTrigger Play_chicken_idle 605 or s_ExecuteTrigger MuteDialog

s_FileCacheManagerSize description=Sets the size in KiB the AFCM will allocate on the heap.
Usage: s_FileCacheManagerSize [0/...]
Default PC: 2048 (2 MiB), XboxOne: 393216 (384 MiB), PS4: 393216 (384 MiB), Linux: 393216 (384 MiB), WiiU: 131072 (128 MiB)

s_FullObstructionMaxDistance description=for the sounds, whose distance to the listener is greater than this value, the obstruction is value gets attenuated with distance.
Usage: s_FullObstructionMaxDistance [0/...]
Default: 5 m

s_GetAudioID description=Get the ATL ID for an audio trigger, rtpc or switch.
Usage: s_GetAudioID Play_SuperDinosaurAttack 

s_IgnoreWindowFocus description=If set to 1, the sound system will continue playing when the Editor or Game window loses focus.
Usage: s_IgnoreWindowFocus [0/1]
Default: 0 (off)

s_ListenerDebugSphereAlpha description=Set or modify the transparency of the listener sphere.
Usage: s_ListenerDebugSphereRadius [float]
Default alpha: 0.5

s_ListenerDebugSphereRadius description=Set or modify the sphere size of the listener.
Usage: s_ListenerDebugSphereRadius [float]
Default size: 20.0

s_LoadGlobalBanksBlocking description=Specifies whether all global banks will block the main thread when loading.
Usage: s_LoadGlobalBanksBlocking [0/1]
Default PC: 0 - asynchronous operation, NA for other platforms ATM

s_MixLevelMaster description=Sets master volume of all audio output on the primary bus (0..1).
s_MixLevelMusic description=Sets volume of music (0..1).
s_MixLevelSfx description=Sets volume of sound effects (0..1).
s_MixLevelShipComputerSpeech description=Sets volume of ship computer speech (0..1).
s_MixLevelSimulationAnnouncer description=Sets volume of simulation announcer (0..1).
s_MixLevelSpeech description=Sets volume of speech (0..1).
s_MixLevelTTS description=Sets volume of TTS (0..1).
s_MixLevelVOIP description=Sets volume of VOIP received (0..1).
s_OcclusionMaxDistance description=Obstruction/Occlusion is not calculated for the sounds whose distance to the listener is greater than this value. Setting this value to 0 disables obstruction/occlusion calculations.
Usage: s_OcclusionMaxDistance [0/...]
Default: 500 m

s_OcclusionMaxSyncDistance description=Physics rays are processed synchronously for the sounds that are closer to the listener than this value, and asynchronously for the rest (possible performance optimization).
Usage: s_OcclusionMaxSyncDistance [0/...]
Default: 10 m

s_PanningRule description=Set audio panning rule [0,1]. 0: Pan for speakers, with left and right positioned 60 degrees apart. 1: Pan for headphones, with left and right positioned 180 degrees apart.
s_PositionUpdateThreshold description=An audio object has to move by at least this amount to issue a position update request to the audio system.
This kind of optimization should ideally be done by the parent system so this is here for convenience.Usage: s_PositionUpdateThreshold [0/...]
Default: 0.1 (10 cm)

s_PreferredAudioInputDeviceHash description=Indicates the preferred audio input device, via the hash of it's identifier.
Usage: s_PreferredAudioInputDeviceHash <Hash of Audio Device ID>
Default: 0 - which means use the default device as indicated by the Operating System
NB: If a specified device is not present then the default device will be used instead

s_RtpcStepCount description=Number of valid steps for the RTPC value.  Changes below the step size won't be sent to the Implementation.
s_SetPrimaryListenerFocusEffect description=Set the parameters for the focus effect on the primary listener.
Usage: s_SetPrimaryListenerFocusEffect InnerRadius InnerRadiusValue OuterRadius OuterRadiusValue

s_SetPrimaryListenerFocusTarget description=Set the target entity for the focus effect on the primary listener.
Usage: s_SetPrimaryListenerFocusTarget EntityName

s_SetRtpc description=Set an Audio RTPC value.
The first argument is the name of the AudioRtpc to be set, the second argument is the float value to be set,the third argument is an optional AudioObject ID.
If the third argument is provided, the AudioRtpc is set on the AudioObject with the given ID,
otherwise, the AudioRtpc is set on the GlobalAudioObject
Usage: s_SetRtpc character_speed  0.0  601 or s_SetRtpc volume_music 1.0

s_SetSwitchState description=Set an Audio Switch to a provided State.
The first argument is the name of the AudioSwitch to, the second argument is the name of the SwitchState to be set,the third argument is an optional AudioObject ID.
If the third argument is provided, the AudioSwitch is set on the AudioObject with the given ID,
otherwise, the AudioSwitch is set on the GlobalAudioObject
Usage: s_SetSwitchState SurfaceType concrete 601 or s_SetSwitchState weather rain

s_ShipComputerVerbosityPreset description=Ship computer verbosity preset index.
s_StartAudioOutputCapture description=Start recording the audio output into the specified file.
The argument is the name of the file where the audio output should be recorded. The file will be placed in the %user% folder.
Usage: s_StartAudioOutputCapture audio_capture.wav

s_StartAudioRequestCapture description=Start recording the audio requests into the specified file.
The argument is the name of the file where the requests should be recorded. The file will be placed in the %user% folder.
Usage: s_StartAudioOutputCapture audio_request_capture.xml

s_StopAudioOutputCapture description=Stops recording the audio output into the file provided in the s_StartAudioOutputCapture call.
Usage: s_StopAudioOutputCapture

s_StopAudioRequestCapture description=Stops recording the audio requests into the file provided in the s_StartAudioRequestCapture call.
Usage: s_StopAudioRequestCCapture

s_StopTrigger description=Execute an Audio Trigger.
The first argument is the name of the AudioTrigger to be stopped, the second argument is an optional AudioObject ID.
If the second argument is provided, the AudioTrigger is stopped on the AudioObject with the given ID,
otherwise, the AudioTrigger is stopped on the GlobalAudioObject
Usage: s_StopTrigger Play_chicken_idle 605 or s_StopTrigger MuteDialog

s_SubmixRecordersDebugMode description=If set to 1, will provide debug logging for submix recorder actions.
If set to 2, in addition to the debug logging, will create a wav file each time the plugin is instantiated on a bus.
Will also output a message to the Wwise profiler every time a plugin is instantiated.

s_SubmixRecordersEnabled description=If true, enables submix recording using the CIG Submix Recorder plugin.
s_SubmixRecordersMuteOutput description=If true, submix recorders act as sinks and don't pass audio.
s_UseInstancedZoneCullingV2 description=Safety CVar for late 4.0 change
s_UseSyncMode description=Audio processing is executed on the Main Thread when set to 1, otherwise it uses the CryEngine AudioThreadUsage: s_UseSyncMode 0 or 1Default: 0
s_WwiseCommandQueueSize description=Specifies the size (in KiB) of the Wwise command queue.
Usage: s_WwiseCommandQueueSize [0/...]
Default PC: 2048 (2M), NA for other platforms ATM

s_WwiseMaxMemorySize description=Specifies the maximum size (in KB) that the Wwise audio system implementation will allocate dynamically.
When allocations reach this size, audio will be negatively affected, leading to missing sounds etc.
Usage: s_WwiseMaxMemorySize [0/...]
Default PC: 1GB, Xbox360: 0 , XboxOne: 0, PS3: 0, PS4: 0, Linux: 0

s_WwiseNumRefillsInVoice description=Number of refill buffers in voice buffer. 2 == double-buffered, defaults to 4.
Usage: s_WwiseNumRefillsInVoice [2/3/4]
Default PC: 4, NA for other platforms ATM

s_WwiseNumSamplesPerFrame description=Number of samples per audio frame (256, 512, 1024, or 2048)
Usage: s_WwiseNumSamplesPerFrame [256/512/1024/2048]
Default PC: 1024, NA for other platforms ATM

s_WwiseSecondaryPoolSize description=Specifies the size (in KiB) of the memory pool to be used by the Wwise audio system implementation.
Usage: s_WwiseSecondaryPoolSize [0/...]
Default PC: 0, Xbox360: 32768 (32 MiB), XboxOne: 32768 (32 MiB), PS3: 0, PS4: 0, Linux: 0

s_WwiseSeparateEngineThreadPriority description=Specifies the thread priority when Wwise uses its own thread for audio processing.
Usage: s_WwiseSeparateEngineThreadPriority [0/1/2]
Default PC: 1 (Highest), NA for other platforms ATM.  Other options: 0 (Above Normal), 2 (Time Critical)

s_WwiseStreamDeviceIOPoolSize description=Size (in KiB) of the stream device IO pool size.
Usage: s_WwiseStreamDeviceIOPoolSize [0/...]
Default PC: 16mb, NA for other platforms ATM

s_WwiseUseSeparateEngineThread description=Specifies whether Wwise should use its own thread or run on the AudioThread.
Usage: s_WwiseUseSeparateEngineThread [0/1]
Default PC: 1(use a separate thread), NA for other platforms ATM

s_allowFlowAudioPlaybackOnGlobalObject description=Allow Flowgraph Audio playback on global object.  Default: 0
s_audioDefaultMaterialOcclusion description=Default occlusion value for ray hits in CAudioRayOcclusionComponent
s_cameraViewFStopOverwrite description=If not 0, overwrites the value of the FStop on third person cameras
s_debugCameraFOVLensSize description=Debug the FOV and Lens Size values on third person cameras
s_debugVOIPForLocalPlayer description=If 1, enables VOIP for the local player to play on the local player.
s_enableOperatorShake description=Allow operator shake on third person cameras
s_enableRaceCommentary description=Enables or disables commentary in multiplayer races.
s_enableRaycastForClientFootsteps description=If 1, enables raycasting to determine surface for player footsteps.
s_entitlementEntityCreator.enableFullEditorEntitlement description=If set to 1, will fully entitle the player in the editor, if not, it will only entitle the player character.
s_entitlementEntityCreator.enableOfflineItemsEntitlement description=If 0, when doing offline entitlement, no items will be added, only the player entity
s_environmentFeedback.debugEnabledManager description=Enables debugging for GameContextManager
s_ffvs.enable_direct_connects description=Enable direct connects to variable service
s_gameContext.debugEnabled description=Enables debugging for GameContextManager
s_gameContext.textSize description=GameContextManager debug text size
s_invertCameraOrbitPitch description=Invert the Y axis on orbit cameras
s_localPlayerAudio.ObjectBasedReverbRatio description=Sets the default ratio of object based reverb when NOT seated in an active vehicle seat.
s_localPlayerAudio.PlayerAttackedRtpcCountdown description=Sets the countdown time of the attacked RTPC.
s_localPlayerAudio.RealisticModeAmount description=Sets the realistic mode effect level.
s_localPlayerEnvironment.RayLength description=Sets the max distance for the player actor rays.
s_localPlayerEnvironment.RaysPerFrame description=Sets the amount of rays per frame for the player actor.
s_localPlayerEnvironment.SphereRayCount description=Sets the amount of rays if a Fibonacci sphere is used for the player actor. Must be multiples of 2!
s_localPlayerEnvironment.SphereType description=0: Fibonacci sphere, 1: 60 point truncated icosahedron.
s_localPlayerEnvironment.WallaEnabled description=If set to 1 the Walla system will be enabled.
[Default is 0]
s_localPlayerEnvironment.WaveHeightCalculationsEnabled description=If 1, listenerUnderwaterRtpc will use accurate wave calculations as opposed to ocean radius.
[Default is 0]
s_oceanAudio.audioPositionLerpFactor description=Defines the lerp factor of audio position changes.
s_oceanAudio.audioPositionSnapDistance description=Defines at what distance audio objects are considered at the goal position after lerping.
s_oceanAudio.windThreshold description=Sets the update threshold for wind changes
s_oneShotManager.clearStats description=Resets the audio one shot counters.
s_oneShotManager.debugEnabled description=Enables debugging for OneShotManager
s_oneShotManager.debugEnabledDetails description=OneShotManager details
s_oneShotManager.filter description=Sets a filter for the audio one shot categories in the AudioOneshot debug page.
s_oneShotManager.textSize description=Text size.
s_physical.CONTINUOUS_CONTACT_ACTIVE_FRAMES description=continuous contact active frames
s_physical.CONTINUOUS_CONTACT_IDLE_FRAMES description=continuous contact idle frames
s_physical.FAKE_MASS_TERRAIN description=Fake mass terrain
s_shipAudio.enableShipDamageHandler description=Enables the event handler for ship damage (player needs to re-enter ship to work after enabling).
s_thruster.oneShotPriorityRank description=Sets the priority rank that is used to cull one shots.
s_valueOutputManager.clearStats description=Resets the audio value output counters.
s_valueOutputManager.debugEnabled description=Enables debugging for the ValueOutputManager
s_valueOutputManager.modifier description=Sets the modifier for shake strength based on audio (0..1).
s_walletClass.deliveryDelay description=delivery delay
s_walletClass.showInsuranceLogging description=Show wallet class insurance logging
s_walletClass.showWalletLogging description=Show wallet class logging
s_walletService.invalidLedgerVersionRetries description=Set the maximum number of retry to update a ledger if the version is not up to date
s_walletService.showRequestData description=Show wallet service request data
scenarioProgressIncreaseAmount description=Scenario service additive progress amount that will be increasing during update.
send_analytics_test description=Sends analytics test.
ser_debugRenderMode description=0: disable
 1: sort reads
 2: sort read bits
 3: sort writes
 4: sort write bits
 5: sort persistent writes
 6: sort persistent write bits
ser_debugRenderMode_AnalyticsMaxEvents description=how many analytics events to send per ranking
ser_debugRenderMode_AnalyticsUpdateRateInterval description=time interval between the analytics updates (in seconds)
ser_debugRenderMode_UpdateRateInterval description=time interval between updates of the SV profile display captures
service.analytics.max.bulk description=Maximum number of analytics events sent per grpc stream message to service
service.analytics.max.queue description=Maximum number of analytics events held in memory.
If messages cannot be offloaded fast enough to service. events will be lost once the queue is at max.
service.analytics.missed.events.report.interval description=Time interval(sec) for reporting how many events have been dropped since the last report
service.analytics.reconnect.min description=Auto-reconnect stream after minumum of X milliseconds (+random range)
service.analytics.reconnect.range description=Auto-reconnect additionional milliseconds
services.arenacommander.get_entitlements description=Get current player's Arena Commander entitlements
Usage: services.arenacommander.get_entitlements
services.charactercustomizerconfig.ltp.enabled description=true to persist and use persisted customizations
services.chat.grpc.retries description=the amount of retries for grpc messages
services.config.get.deadline description=Deadline for config queries in milliseconds
services.config.get.max.retries description=Maximum retries for config query
services.config.stream.reconnect.min description=Auto-reconnect stream after minumum of X milliseconds (+random range)
services.config.stream.reconnect.range description=Auto-reconnect additionional milliseconds
services.contractbroker.deadline description=gRPC deadline in ms
services.contractbroker.expiry description=(expiry in ms
services.contractbroker.expiry.buffer description=(expiry buffer for internal timeout in ms
services.contractbroker.max.items.per.page description=<=0: use service default, otherwise N items per page
services.contractbroker.num.retries description=0=enabled, otherwise N retries until failure
services.contractbroker.stream.deadline description=gRPC stream deadline in ms
services.contractbroker.stream.num.retries description=0=enabled, otherwise N retries until failure
services.contractgenerator.max.contract.instances.on.negative description=max contracts instances on negative
services.contractgenerator.max.contract.reconciliation.interval description=max interveral for contract reconciliation(in sec)
services.deps.mock.entity.graph description=Mock queuing to entity graph, used to load test deps
services.discipline.enforcement.eac.enable.initialisation.check description=Enable/Disable EAC Initialisation Enforcement.
0=Disabled, 1=Enabled
services.discipline.querySanctions description=Query the list of sanction from the current account
services.discipline.service.external.eac.bypass.mode description=EAC enforcement mode. Allow certain users to bypass EAC enforcement on server. 0 = Full (no bypass allowed), 1 = Strict (only eac bypass and GM badge), 2 = Relaxed (all dev badges)
services.discipline.service.external.use.platform.token.id description=true: use platform token id - false: use identity token id
services.entitycreator.delete.max.time.ms description=Expiry in ms for delete operation during character reset.
services.entitycreator.melt.max.time.ms description=Expiry in ms for melt operation during character repair.
services.entitycreator.use.new.move.all description=Enable/Disable usage of the new MoveAll gRPC.
services.entitycreator.var.service.enable.queue description=Enable/Disable usage of the VariableThrottelingManager Queue.
services.entitygraph.deadline description=(gRPC deadline in ms
services.entitygraph.entity.graph.stream.container.query.autoclose description=in milliseconds, stream will be closed automatically after N ms; 0=no autoclose
services.entitygraph.entity.graph.stream.container.query.autocloserange description=in milliseconds, stream closes randomly between 'autoclose' and 'autoclose + autocloseRange'; 0=no range
services.entitygraph.entity.graph.stream.container.query.deadline description=in milliseconds, deadline for the stream (stream ends once it is expired); 0=no deadline
services.entitygraph.entity.graph.stream.container.query.retries description=number of retries in case the stream fails. GRPC_STREAM_KEEPALIVE(-1) = keep stream alive until bCanceled, GRPC_RETRY_INDEFINITELY = retry on errors indefinitely
services.entitygraph.expiry description=(expiry in ms
services.entitygraph.expiry.buffer description=(expiry buffer for internal timeout in ms
services.entitygraph.max.concurrent.grpc.counts.for.seeding description=max number of entities per mutation
services.entitygraph.max.container.counts.per.mutation description=max number of entities per graph
services.entitygraph.max.create.command.counts.per.mutation description=max number of create commands per mutation
services.entitygraph.max.entity.counts.per.graph description=max number of entities per graph
services.entitygraph.max.graph.counts.per.create.command description=max number of graphs per create command
services.entitygraph.max.items.per.page description=<=0: use service default, otherwise N items per page
services.entitygraph.merge.activation.into.last.mutation description=merge activation into last mutation
services.entitygraph.num.retries description=(the number of gRPC retries
services.entitygraph.query.deadline description=(query deadline in ms
services.entitygraph.request.log.level description=0=disabled, 1=only on failure, otherwise, always
services.entitygraph.set.ownerid.in.activation description=1=enabled, otherwise, disabled
services.entitygraph.set.ownerid.only.on.aggregates description=1=enabled, otherwise, disabled
services.entitygraph.stow.expiry description=(stow expiry in ms
services.entitylocation.query description=Test QueryLocationId.
Usage: services.entitylocation.query[<EntityId> ...]
services.entitylocation.update description=Test UpdateLocationId.
Usage: services.entitylocation.update <EntityId> <locationId>
services.entitylocation.validation.level description=Validation before updating location id. 0=disabled, 1=check global, otherwise, check both global and shard
services.epic.online.services.logcategory description=Log Category
services.epic.online.services.loglevel description=Log Level
services.freeformvariable.enable.request.logging description=Track Free Form Variable Request/Responses
services.friends.grpc.retries description=the amount of retries for grpc messages
services.identity.external.grpc.retries description=the amount of retries for grpc messages
services.identity.external.token.refresh.rate description=Sets the grpc token refresh rate in seconds
services.identity.external.token.refresh.retry.rate description=Sets the grpc token refresh retry rate in seconds
services.identity.get_current_players description=Get the current player and JWT
services.identity.update_auth.token description=Updates the auth token
services.ledger.get_funds_external description=Get a specific ledger from the player
Usage: services.ledger.get_funds_external <ledger name>
services.login.cancel_login description=Cancel the login to the login service
services.login.initiate_login description=Initiate the login to the login service
services.metrics.instances description=Enable/Disable metrics for instance managing
services.metrics.module.ecs.timings description=Enable/Disable deep metrics for ECS components timings
services.metrics.module.ecs.timings.interval description=Interval in seconds to update ECS component timings gauges
services.metrics.module.rmq.per.connection description=Enable per connection metrics for RMQ; 0=disable, 1=servers only, 2=clients+servers
services.mission.deadline description=gRPC deadline in ms
services.mission.expiry description=(expiry in ms
services.mission.expiry.buffer description=(expiry buffer for internal timeout in ms
services.mission.num.retries description=0=enabled, otherwise N retries until failure
services.missionfactory.max.create.contracts.per.batch description=max create contracts sent per batch
services.missionscenario.deadline description=gRPC deadline in ms
services.missionscenario.max.creation.per.batch description=max creation send per batch
services.missionscenario.max.deletion.per.batch description=max deletion send per batch
services.missionscenario.max.items.per.page description=<=0: use service default, otherwise N items per page
services.missionscenario.num.retries description=0=enabled, otherwise N retries until failure
services.missiontoken.deadline description=gRPC deadline in ms
services.missiontoken.num.retries description=0=enabled, otherwise N retries until failure
services.offline.entitlement.delay.max description=Maximum delay for callback in seconds?
services.offline.entitlement.delay.min description=Minimum delay for callback in seconds?
services.otel.deadline description=RPC deadline in milliseconds
services.otel.enabled description=Enable/disable open telemetry data collection
services.otel.max.delay description=Maximum delay of sending telemetry data in milliseconds
services.otel.max.retries description=Maximum retries for rpc
services.otel.span.bulk.max description=Number of Spans we aim to send in bulk
services.otel.span.bulk.min description=Number of Spans we aim to send in bulk
services.presence.stream.autoclose description=Time in seconds after which the presence stream auto close. For load balancing.
services.presence.stream.autocloserange description=Added random time in seconds to autoclose.
services.presence.stream.close.timeout description=Time in milliseconds for the presence stream close timeout
services.presence.stream.heartbeat description=Time in seconds for the heartbeat update of the presence stream
services.push.deadline description=RPC deadline for publishing messages (in milliseconds)
services.push.enabled description=Enable/disable open telemetry data collection
services.push.max.retries description=Maximum retries for publishing messages
services.rental.external.deadline description=(gRPC deadline in ms
services.rental.external.max.items.per.page description=<=0: use service default, otherwise N items per page
services.rental.external.num.retries description=0=disabled, otherwise N retries until failure
services.rtc.grpc.retries description=the amount of retries for grpc messages
services.seeding.force.clear.contracts description=Enable/disable force clear contracts
services.seeding.force.reseed.clusters description=Enable/disable force reseed entity clusters
services.seeding.force.reseed.scenarios description=Enable/disable force reseed scenarios
services.seeding.max.create.cluster.members.per.batch description=max create cluster members sent per batch
services.shardsupervisor.connect.to.diffusion description=Should service connect to diffusion (the code to request connection to diffusion will only be run if CryNetwork is initialized)
services.shardsupervisor.enable.mesh.auto.connect description=<=0: use service default, otherwise N items per page
services.shardsupervisor.matchmaking.session.host description=Should service register with matchmaking as a game session host
services.shardsupervisor.shard.claim.dgs.labels description=Labels of dgs-mesh worker claims (empty=any labels)
services.shardsupervisor.shard.claim.timer description=Time to wait after we successfully claimed instance before we reconcile again
services.shardsupervisor.shard.health.lifetime.max description=The maximum amount of time (in seconds the server is connected to the replication layer) that will be factored into the replication layer's health check. Ideally this should be greater than the average amount of time it takes for a server to fully recover a server crash. Defaults to 300.0 (5 minutes)
services.shardsupervisor.shard.health.lifetime.scalar description=A value between 0 and 1 that determines how strongly a disconnecting server will pull the current lifetime average towards them. 0 is the weakest, and 1 is the strongest. Defaults to 0.25
services.shardsupervisor.shard.reconciliation.time description=Time between fleet service queries to make sure the shard has the correct number of mesh workers (in MS)
services.shardsupervisor.shard.required.mesh.worker description=Number of healthy dgs-mesh-worker required by shard. If set to negative value, hybrid will claim all available instances!
services.social.external.group.cache.update.activate description=Do we periodically update group cache
services.social.external.group.cache.update.max.sec description=The maximum timing we use to periodically update group cache
services.social.external.group.cache.update.min.sec description=The minimum timing we use to periodically update group cache
services.social.external.grpc.retries description=the amount of retries for grpc messages
services.voip.max.retry.delay description=the maximum delay interval in seconds we wait before retrying to connect on disconnection
services.voip.timeout.delay description=the delay for the websocket to timeout in seconds
setHomeLocation description=Usage: setHomeLocation <homeLocation: autocomplete/substring>

shopAlert_enableDebugLog description=Enable debug logging for the shop inventory alert tracker
shopAlert_enableNotifications description=Enable Commodity Journal notifications
shopAlert_expiryTime description=How long (in seconds) a shop inventory alert will remain since its last event was received from the shop service
shopAlert_minTimeBetweenNotifications description=Minimum time (in seconds) between notifications saying the shop alert journal entry has updated
shop_debug_draw description=Activate debug draw for shops: 1. Basic 2.Verbose
shop_debug_draw_dist description=Enter number for draw distance
shop_debug_draw_filter_kiosks description=Filter debug draw by type: Use the option in the Shop Debug mGUI instead.
shop_debug_draw_filter_purchasables description=Filter debug draw by type: Use the option in the Shop Debug mGUI instead.
shop_debug_draw_filter_racks description=Filter debug draw by type: Use the option in the Shop Debug mGUI instead.
shop_enable_tutorial_filtering description=Set to 1 to make non-tutorial relevant items not visible at kiosks during tutorials
shop_ignore_inventorytype_data_assert description=Set to 1 to disable the ShopInventoryType data assert
soc_debugClientLocation description=If set, current client player location will be shown on screen
soc_debugLogStreamingOverrideTagsInfo description=Allows logging the OCs found in the hierarchy with streaming override tags and the number of entities they contain
soc_debug_solarsystem_operations description=Logs solar system operations as info debug cigtrace logs
soc_dumpLocationActionAreas description=Logs out all currently registered location action areas
soc_enableCombinedGridParts description=If enabled, OCs with only grid parts can be combined into their zone host's physics grid
soc_exclusionsListName description=Sets the filename to use for lists of excluded locations
soc_skipOutdatedOCs description=If set, OCs older than s_minSupportedOCVersion_DataError will be skipped. Use g_debugDrawObjectContainers to draw skipped OCs.
soc_universe_hierarchy_precache_level_paths description=Precaches the level path on every SUniverseGraphHierachyNode on registration. Useful for debugging. 
social_EnableLogging description=If true, logging will be enabled for social/foip module
social_PrimaryChannelId description=Primary channel ID on social/foip server to join.
social_PrimaryHost description=Primary channel host of social/foip server.
social_PrimaryPortNumber description=Primary channel port number of social/foip server.
social_ProximityChannelId description=Proximity channel ID on social/foip server to join.
social_ProximityHost description=Proximity channel host of social/foip server.
social_ProximityPortNumber description=Proximity channel port number of social/foip server.
social_UseDefaultChannels description=If true, the default channels are joined at startup.
sortGotosByDistance description=Sorts gotoPoints by distance
Usage: sortGotoPointsByDistance <pointType 1=INDOOR, 2=SPACE, 4/ANY(default)>
<usePlayerAsStartPos (default=0)> <minDistance default=0.f>, <maxDistance default=FLT_MAX>
logPointIndices E.g. [n]->[m](default=0)

svPort description=Get the server's incoming connection port
sv_AISystem description=Load and use the AI system on the server
sv_OverridePlayerPersistSpawnLocation description=Server only: Override the spawn location for all players
sv_OverridePlayerSpawnSubLocation description=Server only: overrides the player resource slot for the next player having to respawn
sv_bind description=Set the game bind address that this instance will accept connections on
sv_dumpstats description=Enables/disables dumping of level and player statistics, positions, etc. to files
sv_dumpstatsperiod description=Time period of statistics dumping in milliseconds
sv_gamerules description=The game rules that the server should use
sv_gamerulesdefault description=The game rules that the server default to when disconnecting
sv_map description=The map the server should load
sv_megamapinstance description=The current mega map instance
sv_restrict_connections_to_prematch description=Restrict game to only allow player connections to prematch state. 
sv_servername description=Server name will be displayed in server list. If empty, machine name will be used.
sv_statsDumpEnabled description=When turned on, stats are dumped out locally.
sv_timeofdayenable description=Enables time of day simulation.
sv_timeofdaylength description=Sets time of day changing speed.
sv_timeofdaystart description=Sets time of day start time.
sys_AI description=Enables AI Update
sys_DeactivateConsole description=0: normal console behavior
1: hide the console
sys_LooseFileLookupCacheEnabled description=If set to 1, the P4K system will use a cache list of loose files to reduce the amount of kernel calls to improve loading time
sys_PakDisableNonLevelRelatedPaks description=Disables all paks that are not required by specific level; This is used with per level splitted assets.
sys_PakEnableInlcusionCheck description=Enables checking of inclusion files. Flags:0=disabled1=log invalid access (file open only)2=ignore files from FindFirst calls (folder search)4=prevent loading of files not in inclusion list
sys_PakInMemorySizeLimit description=Individual pak size limit for being loaded into memory (MB)
sys_PakLogInvalidFileAccess description=Log synchronous file access when in game
sys_PakLogMissingFiles description=If non-0, missing file names go to mastercd/MissingFilesX.log.
1) only resulting report
2) run-time report is ON, one entry per file
3) full run-time report
sys_PakMessageInvalidFileAccess description=Message Box synchronous file access when in game
sys_PakPriority description=If set to 1, tells CryPak to try to open the file in pak first, then go to file system
sys_PakReadSlice description=If non-0, means number of kilobytes to use to read files in portions. Should only be used on Win9x kernels
sys_PakTotalInMemorySizeLimit description=Total limit (in MB) for all in memory paks
sys_PakValidateFileHash description=Validate file hashes in pak files for collisions
sys_RestoreSpec description=Restore or test the cvar settings of game specific spec settings,
'test*' and 'info' log to the log file only
Usage: sys_RestoreSpec [test|test*|apply|info]
sys_Scale3DMouseYPR description=Scales rotation speed of supported 3DMouse devices.
sys_SimulateTask description=Simulate a task in System:Update which takes X ms
sys_TaskThread0_CPU description=Specifies the physical CPU index taskthread0 will run on
sys_TaskThread1_CPU description=Specifies the physical CPU index taskthread1 will run on
sys_TaskThread2_CPU description=Specifies the physical CPU index taskthread2 will run on
sys_TaskThread3_CPU description=Specifies the physical CPU index taskthread3 will run on
sys_TaskThread4_CPU description=Specifies the physical CPU index taskthread4 will run on
sys_TaskThread5_CPU description=Specifies the physical CPU index taskthread5 will run on
sys_UncachedStreamReads description=Enable stream reads via an uncached file handle
sys_XMLAllowCaseInsensitivity description=Enable XML case insensitivity functionality
sys_XMLCaseSensitivityAssert description=Enable on XML case sensitivity assert
sys_analytics_clock_drift_stats_send_interval description=Adjusts the interval in seconds between sends of the clock drift stats
sys_analytics_debug description=Enable/Disable Analytics debug logging
sys_analytics_disable description=Disable Analytics Gathering
sys_analytics_error_mode description=Set Analytics error handling: 0=ignore, 1=post error event, 2=assert in dev, fatal in shipping
sys_analytics_qa_tag description=String used to identify specific QA runs
sys_analytics_queue_full_interval description=Enable/disable sending of deprecated legacy fields
sys_analytics_queue_size description=Enable/disable sending of deprecated legacy fields
sys_analytics_send_leftovers description=Enable/disable sending of remaining Analytics events during shutdown
sys_analytics_test_conflicting_types description=Number of times per frame to conflicting type test events. 0 = disable
sys_analytics_test_duplicate_keys description=Number of times per frame to duplicate key test events. 0 = disable
sys_analytics_test_serialization description=Number of times per frame to send basic serialization test events. 0 = disable
sys_analytics_test_withstats description=Number of times per frame to send a dummy event with added stats. 0 = disable
sys_analytics_transfer_timeout description=The maximum time in seconds that you allow the analytics transfer operation to take. 0 (zero) means it never times out during transfer.
sys_analytics_use_test_endpoint description=0=use default Analytics endpoint, 1=use test Analytics endpoint
sys_analytics_withstats_queue_full_interval description=Enable/disable sending of deprecated legacy fields
sys_analytics_withstats_queue_size description=Enable/disable sending of deprecated legacy fields
sys_asserts description=Assert modes:
0 = Only log callstacks in the game log. No assert dialog will be presented.
1 = Enable asserts (assert dialog + logging callstacks in the game log)
2 = (Deprecated) Same as 0.
3 = Treat assert as Fatal Error.
4 = Handle assert via Trace Pipeline.
sys_asserts_use_legacy_dialog description=Set to 1 to force the legacy dialog when a debugger is present
sys_audio_disable description=Specifies whether to use the NULLAudioSystem in place of the regular AudioSystem
Usage: sys_audio_disable [0/1]
0: use regular AudioSystem.
1: use NullAudioSystem (disable all audio functionality).
Default: 0 (enable audio functionality)
sys_cig_audio_enable description=Specifies whether to enable the CIGAudio system
Usage: sys_cig_audio_enable [0/1]
0: disable CIGAudio.
1: enable CIGAudio.
Default: 1 (enable CIGAudio)
sys_crashtest description=Make the game crash
 1=Null pointer exception
 2=Floating point exception
 3=Memory allocation exception
 4=CryFatalError is called
 6=Assert
 7=__debugbreak
 8=10 mins sleep
 9=Invalid argument passed
10=Pure virtual function call
11=Stack overflow
12=(Fake) GPU crash
13=Crash in inlined function
14=Call to NULL
15=Fork and crash child (Linux only)
16=Report Bug
17=Data assert
18=cigError (cigTrace)
19=cigDataError (cigTrace)
20=cigCritical (cigTrace)
21=Silent shutdowns
22=Single threaded short time double free
23=Single threaded long time double free
24=Multi threaded short time double free
25=Detect write after free (1)
26=Detect write after free (2)

sys_data_p4k_file description=P4K filename
sys_data_split_p4k_file description=split main P4K filename
sys_datacore_enableexport description=Enable automatic exporting of DC data 0: Disable (except Editor) 1:Enable 2:User choice
sys_datacore_enableliveupdate description=Determines if live update is available (development only)
sys_datacore_use_datacore2 description=Enable DataCore2 for DCB re-export. 0: Use original 1: Use new
sys_devteam description=Set dev - team for user to customize debug tools. Expects full team name. Supports auto-complete.
sys_dll_game description=Game DLL filename
sys_dll_game_specific description=Game Specific DLL filename
sys_dump_type description=Specifies type of crash dump to create on windows.
0: Do not create a mini dump
1: Create a small mini dump (stack trace and registers)
2: Create a medium mini dump (stack trace, registers and some small portion of currently referenced heap)
3: Create a full mini dump (stack trace, registers and full heap)
4: Create a full mini dump for crashes matching digests found in [root]\known_digests.txt. Otherwise create a medium mini dump.
sys_enable_autotest_profiler description=Specifies whether to enable the AutotestProfiler
Usage: sys_enable_autotest_profiler [0/1]
0: disable the AutotestProfiler.
1: enable the AutotestProfiler.
Default: 0 (disable the AutotestProfiler)
sys_enable_profiling_during_init_and_load description=Enable engine initialization and loading profiler
sys_entities description=Enables Entities Update
sys_error_debugbreak description=__debugbreak() if a VALIDATOR_ERROR_DBGBREAK message is hit
sys_firstlaunch description=Indicates that the game was run for the first time.
sys_flash description=Enables/disables execution of flash files.
sys_flash_allow_reset_mesh_cache description=Allow programmatic mesh cache resets.
sys_flash_check_filemodtime description=Respect file modification time for Flash internal resource sharing.
Cached resources with same filepath but different file modification time are treated as unique entities.
sys_flash_curve_tess_error description=Controls curve tessellation. Larger values result in coarser, more angular curves.
sys_flash_debugdraw description=Enables debug drawing of Flash assets (1). Canvas area is drawn in bright green.
Also draw masks (2).
sys_flash_debuglog description=
sys_flash_edgeaa description=Enables/disables edge anti-aliased rendering of flash files.
sys_flash_log_options description=Enables logging of several flash related aspects (add them to combine logging)...
1) Flash loading                                                       : 1
2) Flash actions script execution                                      : 2
3) Flash related high-level calls inspected by the profiler (flash.log): 4
   Please note that for (3) the following cvars apply:
   * sys_flash_info
   * sys_flash_info_peak_exclude
sys_flash_pixels_per_meter description=The size (in pixels) of a 1 meter long Flash asset.
Usage: sys_flash_pixels_per_meter [n]
Default is 1000.0f
sys_flash_reset_mesh_cache description=Reset mesh cache through console (once).
sys_flash_static_pool_size description=Specifies the size (in kb) of the static memory pool for flash objects.
Set to zero to turn it off and use a dynamic pool instead.
sys_flash_stereo_maxparallax description=Maximum parallax when viewing Flash content in stereo 3D
sys_flash_taskman description=0 : Disable 1 : Enable GFx task manager for asynchronous asset processing
sys_flash_tasksleep description=Force sleep time in milliseconds
sys_flash_video_buffertime description=Sets buffer time for videos (in seconds)
sys_flash_video_buffertime_loading description=Sets buffer time for videos during loading (in seconds)
sys_flash_video_buffertime_startup description=Sets buffer time for videos during startup (in seconds)
sys_flash_video_soundvolume description=Sets volume of video's main sound track(0..1).
sys_flash_video_subaudiovolume description=Sets volume of video's sub audio sound track (0..1).
sys_flash_warning_level description=Sets verbosity level for CryEngine related warnings...
0) Omit warning
1) Log warning
2) Log warning and display message box
sys_float_exceptions description=Enables floating point exception checks.
sys_float_exceptions_mute_until description=Mutes floating point exceptions until EOD of specified date (in YYYYMMDD format). 0 = disable
sys_force_installtohdd_mode description=Forces install to HDD mode even when doing DVD emulation
sys_frameLimitMaxBusyWaitMS description=Maximum number of milliseconds frame rate limiting is allowed to busy-wait rather than sleep. Higher values can make frame rate limiting more accurate at the cost of keeping a core busy and higher power consumption.
sys_game_name description=Specifies the name to be displayed in the Launcher window title bar
sys_generate_v5 description=Generates a v5 uuid
sys_hardware_mouse_acceleration_deadzone description=Gamepad cursor movement acceleration deadzone
sys_hardware_mouse_acceleration_enable description=Enable acceleration for gamepad cursor movement [1 - enable, 0 - disable]
sys_hardware_mouse_acceleration_max description=Gamepad cursor maximum acceleration multiplier
sys_hardware_mouse_acceleration_rate description=Gamepad cursor acceleration rate multiplier
sys_hardware_mouse_deadzone description=Gamepad cursor movement deadzone
sys_hardware_mouse_hover_friction_element_size_threshold description=UI element size as a percentage of the screen when hover friction stops
sys_hardware_mouse_hover_friction_max description=Maximum friction when hovering the gamepad cursor
sys_hardware_mouse_pad_cursor_scale description=Emulated cursor draw scale
sys_hardware_mouse_pad_enable_navigation description=Enable dpad navigation events for gamepad cursor movement [1 - enable, 0 - disable]
sys_hardware_mouse_pad_use_default_cursor description=1 - draw default cursor, 0 - draw big cursor
sys_hardware_mouse_pad_wheel_deadzone description=Gamepad mouse wheel emulation deadzone
sys_hardware_mouse_pad_wheel_linear_time description=At this time, the mouse wheel is emulated linearly, without acceleration
sys_hardware_mouse_pad_wheel_second_step_cooldown description=Delay before second mouse wheel emulation event
sys_hardware_mouse_pad_wheel_speed description=Starting and linear speed of mouse wheel emulation
sys_hardware_mouse_pad_wheel_time_max description=Maximum time value use as base number in mouse wheel emulation, if 0.0 - then linear speed
sys_hardware_mouse_pad_wheel_time_value_multiplier description=Time value multiplier in mouse wheel emulation
sys_hardware_mouse_sensitivity description=Gamepad cursor movement sensitivity multiplier
sys_hardware_mouse_sensitivity_power description=Gamepad cursor movement sensitivity curve power
sys_initpreloadpacks description=Specifies the paks for an engine initialization
sys_internal_crash_handler description=Switches internal crash handler.
0: Old internal crash handler.
1: New internal crash handler (uses the error reporting pipeline).

sys_intromoviesduringinit description=Render the intro movies during game initialization
sys_job_system_enable_batchworker description=Enable Batchworker Threads
sys_keyboard description=Enables keyboard.
Usage: sys_keyboard [0/1]
Default is 1 (on).
sys_languages description=String list of available languages
sys_linux_auto_track_max_allowed_rss_usage_mb description=Enables auto in process memory tracking when more than X MB of RSS Memory is used (Linux Only)
sys_linux_track_rapid_mem_increase_allocations_mb description=Enables tracking when more than X MB of RSS Memory is allocated within sys_linux_track_rapid_mem_increase_timeframe_minutes. This enabled the in process memory tracking.
sys_linux_track_rapid_mem_increase_timeframe_minutes description=Configure the timeframe to track rapbid memory allocations in Minutes (Linux Only)
sys_linux_trap_max_allowed_rss_usage_mb description=Enables trapping when more than X MB of RSS Memory is used (Linux Only)
sys_localization_debug description=Toggles debugging of the Localization Manager.
Usage: sys_localization_debug [0..3]
1: outputs warnings
2: outputs extended information and warnings
3: outputs CRC32 hashes and strings to help detect clashes
Default is 0 (off).
sys_localization_encode description=Toggles encoding of translated text to save memory. REQUIRES RESTART.
Usage: sys_localization_encode [0..1]
0: No encoding, store as wide strings
1: Huffman encode translated text, saves approx 30% with a small runtime performance cost
Default is 0 (none).
sys_localization_folder description=Sets the folder where to look for localized data
This cvar allows for backwards compatibility so localized data under the game folder can still be found.
sys_localization_placeholder description=Enables [PH] prefixes for placeholder strings. Default is 0 (off).
sys_main_CPU description=Specifies the physical CPU index main will run on
sys_maxFps description=Limits the frame rate to the specified number.
If sys_maxFps <= 0 the game will run at the highest possible frame rate while not loading, in menu, or paused (default).
sys_maxIdleFps description=Limits the frame rate to the specified number while loading, in menu, or paused.
If sys_maxFps > 0 AND sys_maxIdleFps > 0 then the lowest of the two values will be used.
If sys_maxIdleFps <= 0 frame rate while loading, in menu, or paused will be controlled by value of sys_maxFps.
sys_max_physics_worker_threads description=Maximum physics worker threads (0=use engine default)
sys_max_step description=Specifies the maximum physics step in a separate thread
sys_max_worker_threads description=Maximum worker threads (0=use maximum cores available)
sys_memory_debug description=Enables to activate low memory situation is specific places in the code (argument defines which place), 0=off
sys_menupreloadpacks description=Specifies the paks for a main menu loading
sys_min_step description=Specifies the minimum physics step in a separate thread
sys_minimal_p4k_data description=Use minimal P4K data (saves RAM, some features disabled)
sys_no_crash_dialog description=
sys_noupdate description=Toggles updating of system with sys_script_debugger.
Usage: sys_noupdate [0/1]
Default is 0 (system updates during debug).
sys_physics description=Enables Physics Update
sys_physics_CPU description=Specifies the physical CPU index physics will run on
sys_physics_embed_step description=If non-zero, executes the physics step within the mainthread
sys_public_crash_handler description=Enables public crash handler.
0: Disable public crash handler
1: Enable Cloud Imperium Games' public crash handler
2: Enable Windows Error Reporting crash handler

sys_root description=
sys_runStressTest description=Runs a StressTest: usage: sys_runStressTest <TestName>
sys_scale3DMouseTranslation description=Scales translation speed of supported 3DMouse devices.
sys_screensaver_allowed description=Specifies if screen saver is allowed to start up while the game is running.
sys_serverRendererStyle description=Change the style the server renderer displays:
0) Hide the renderer window at startup, it will be displayed once watchplayer has been ran
1) Show the renderer window at startup
2) Minimize the renderer window at startup, it will be focused and restored once watch player is ran
sys_showLogin description=Show the development login dialog (login creator). 0=don't show, 1=always show, 2=only show if loginData.json is missing
sys_skipInactiveSleep description=Skip Sleeping if the window is not in focus (useful for profiling)
sys_skip_data_verification description=Set to 1 to allow skipping data verification when working with unsigned files (development only)
sys_social_disable description=Specifies whether to enable the CIGSocial (FOIP) system
Usage: sys_social_disable [0/1]
0: use CIGSocial.
1: disable CIGSocial.
Default: 1 (disable CIGSocial)
sys_spec description=Tells the system cfg spec. (0=custom, 1=low, 2=med, 3=high, 4=very high, 5=XBox360, 6=Playstation3, 7=XBoxOne, 8=PS4)
sys_split_game_folder description=split Game Data folder
sys_stressTestIndex description=Index to trigger stress tests.
sys_time_demo_snap_rate description=TimeDemo snap to recorded route (snap rate, in frames, 0-no snap, 1-every frame)
sys_trackview description=Enables TrackView Update
sys_trap_silent_shutdowns description=Enables trapping of silent shutdowns.
sys_update_profile_time description=Time to keep updates timings history for.
sys_usePlatformSavingAPI description=Use the platform APIs for saving and loading (complies with TRCs, but allocates lots of memory)
sys_use_batch_api description=Use Batch API
sys_use_hardware_decompression description=Use Hardware Decompression (if available)
sys_use_unbuffered_io description=Use unbuffered IO
sys_vectored_handler description=Enables vector handler.
sys_warnings description=Enables dialog box for system warnings & errors.
Usage: sys_warnings [0/1/2]
Where # enables dialog box:
	0: Never
	1: For warnings & errors
	2: For errors only
Default is 0 (off).
sys_watchdog_enable_dump_history description=Enable Opticks capture, this will dump the Opticks capture when there is a main thread stall.
sys_watchdog_enable_hard_timeout description=Enable hard timeouts, those cause a debug trap to crash the process.
sys_watchdog_fix description=0 - on
1 - off
Default is 1
sys_watchdog_hard_timeout description=Time in seconds main thread is allowed to stall before a hard timeout event is generated.
sys_watchdog_hard_timeout_loading description=Time in seconds main thread is allowed to stall during level (un)loading before a hard timeout event is generated.
sys_watchdog_soft_timeout description=Time in seconds main thread is allowed to stall before a soft timeout event is generated.
sys_xml_enable_string_reuse description=Enable XML string reuse
system.analytics.enable.new.analytics.service description=If true, use a new analytics service. Otherwise, use the legacy system
system.asserts.mode description=Assert modes:
0 = Only log callstacks in the game log. No assert dialog will be presented.
1 = Enable asserts (assert dialog + logging callstacks in the game log)
2 = (Deprecated) Same as 0.
3 = Treat assert as Fatal Error.
4 = Handle assert via Trace Pipeline.
system.asserts.use.legacy.dialog description=Set to 1 to force the legacy dialog when a debugger is present
system.datapipeline.datapipeline.config.path description=The file that contains processes for the DataPipeline
system.datapipeline.generate.debug.pbm description=If true, the DataPipeline will try to generate PBM images for debugging purposes
system.datapipeline.ignore.timestamp description=If true, the DataPipeline won't do any timestamp checking and won't trigger recompilations if the target file already exists.
system.datapipeline.resource.conversion.mode description=If less than 0 - resource conversions are disabled.
If 0 - the resource conversions will be blocking and run on same thread that it's called from without a limit on concurrent conversions.
Any number above 0 represents the number of concurrent conversions (non-blocking).
In the client this is always interpreted as 0 as we always want blocking conversions.
system.filesystem.p4k.filename description=P4K filename
system.filesystem.p4k.minimal.data description=Use minimal P4K data (saves RAM, some features disabled)
system.filesystem.split.p4k.filename description=split main P4K filename
system.filesystem.unbuffered.io description=Use unbuffered IO
system.filesystem.use.batch.api description=Use Batch API
system.filesystem.use.hw.decompression description=Use Hardware Decompression (if available)
system.game.dll.common description=Game DLL filename
system.game.dll.specific description=Game Specific DLL filename
system.game.localization.folder description=Sets the folder where to look for localized data
This cvar allows for backwards compatibility so localized data under the game folder can still be found.
system.game.split.data.folder description=split Game Data folder
system.game.time.demo.snap.rate description=TimeDemo snap to recorded route (snap rate, in frames, 0-no snap, 1-every frame)
system.game.user.folder description=Default user folder (if empty string, use engine default)
system.log.filter description=Filter by specified messages
defines general filter for log events
log_Filter="Foo" - will only log events that matches this filter ("Foo")
log_Filter="-Foo" - all events that matches this filter ("Foo") will be dropped
log_Filter="Foo|-Bar" - combine more filters
system.log.filter.mode description=Log Filter mode:
0=disabled
1=filter console
2=filter file
4=filter remote console
system.log.filter.module description=Filter by specified module
system.log.prepend.module description=Prepend logs with the module it's logged with
system.log.spam.delay description=Sets the minimum time interval between messages classified as spam
system.log.tick description=When not 0, writes tick log entry into the log file, every N seconds
system.log.timestamp description=Toggles time stamping of log entries. Modes: [0/1/2/3/4/5/6]
0=off
1=current time
2=relative time
3=current+relative time
4=absolute time in seconds since this mode was started
5=current time+server time
6=current time in T-Z format
system.log.timestamp.file description=Overwrites time stamping mode for log file-1: Inherit value from system.log.timestamp0..n: See system.log.timestamp for all other values
system.log.verbosity description=defines the verbosity level for log messages written to console
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments
system.log.verbosity.file description=defines the verbosity level for log messages written to files
-2=inherit log_verbosity
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments
system.log.verbosity.remote description=defines the verbosity level for remote console
-2=inherit log_verbosity
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments
system.log.verbosity.trace description=defines the verbosity level for log messages published to cigTrace
Requires trace filter to process legacy log
-1=suppress all logs (including eAlways)
0=suppress all logs(except eAlways)
1=additional errors
2=additional warnings
3=additional messages
4=additional comments
system.log.write.to.file description=toggle whether to write log to file
system.log.write.to.stdout description=Write all log information to std out (e.g. when running in Docker or Teamcity CI)
system.profile.loading.profile description=Enable engine initialization and loading profiler
system.services.default.deadline description=Default deadline for grpc calls in MS.
system.services.region.id description=Region id. 0:Any, 1:US, 2:Europe, 3:Oceania, 4: Asia, 5: Expansion (for further use)
system.startup.dev.team description=Set dev - team for user to customize debug tools. Expects full team name. Supports auto-complete.
system.startup.env.var.tag description=Optional Tag to apply to any metrics/trace/analytics event
system.startup.streaming.min.pixel description=Minimum number of pixels required to stream in objects
system.threads.max.physics.worker.threads description=Maximum physics worker threads (0=use engine default)
system.threads.max.worker.threads description=Maximum worker threads (0=use maximum cores available)
system.trace.enable.dump description=Enable/Disable cigTrace Dump support
system.trace.enable.log description=Enable/Disable cigTrace Log output
system.trace.enable.publish description=Enable/Disable cigTrace Event output
system.trace.enabled description=Fully Enable/disable cigTrace
system.trace.event description=Send an event
Usage:
 sys_trace_event <severity> <tag> <event> <message> [Fields...]
system.trace.output.auto.delete description=Automatically delete trace files older than X hours, even if not processed (0=disabled)
system.trace.output.io.error.retry description=In case of File IO error we wait X milliseconds before attempting to re-create a new trace file
system.trace.output.rotation.mb description=Automatically cycle trace files after certain size (0=disabled)
system.trace.reloadfilter description=Reload cigTrace Filter
system.trace.report.allow.bad.errors description=Allow reporting of bad errors via traces
system.trace.report.allow.full.dump description=Allow reporting full memory dumps
system.trace.report.custom.binaries description=Allow reporting trace errors via crash handler even if with local compiled binaries
system.trace.resetignore description=Reset cigTrace dialog ignore list
system.trace.service.enabled description=When enabled, trace messages are send to the trace service
system.trace.service.max.bulk description=Maximum number of traces sent per grpc stream message to service
system.trace.service.max.queue description=Maximum number of traces held in memory.
If messages cannot be offloaded fast enough to service traces will be lost once the queue is at max.
system.trace.service.reconnect.min description=Auto-reconnect stream after minumum of X milliseconds (+random range)
system.trace.service.reconnect.range description=Auto-reconnect additionional milliseconds
system.trace.spam.delay description=Spam delay in milliseconds
Delay before the spam detection starts to filter messages
system.trace.spam.enable.filter description=Enable/Disable cigTrace Spam Filter
system.trace.spam.eps description=Maximum events per seconds
Identical Massages exceeding this limit are filtered
system.trace.spam.report description=Spam report in milliseconds
Only report spammy traces every X milliseconds once they are filtered
t_debtFactor description=Proportion of game time debt to pay off each frame
t_debtLimit description=Maximum game time debt, in seconds, that can be accrued before being force reset to zero, causing game-wide desyncs
t_debtTolerance description=Minimum game time debt, in seconds, that can be paid off in a single frame
t_debug description=Timer debug: 0=off (default), 1=log, 2=on-screen, 3=both
t_enableLimitFrameRate description=If > 0 a minimum frame time will be enforced based on statistics of the execution time of previous frames. This helps maintain a consistent frame rate and can result in a smoother gameplay experience.
t_fixedStep description=Game updated with this fixed frame time
0=off, number specifies the frame time in seconds
e.g. 0.033333(30 fps), 0.1(10 fps), 0.01(100 fps)
t_realTimeSyncPoint description=Date and time that the universe clock started, as a string in ISO 8601 format (yyyy-mm-ddThh:mm:ss.sssZ)
t_scale description=Game time scaled by this - for variable slow motion
t_smoothingBlendFactor description=Frame/processing time smoothing factor [0, 1]
t_smoothingClampFactor description=Multiple of GetMaxTimeStep() with which to clamp time values passed into smoothing. Prevents smoothing from taking too long to recover after an unusually high value.
t_smoothingStandardDeviations description=How many standard deviations to include in frame/processing time smoothing (>= 0)
t_syncMaxDrift description=Number of seconds to use as the max time drift in server time regression
t_syncReset description=Reset server and system time regressions
t_syncSampleAgeRate description=Rate at which server time regression samples sample error increases. Higher values evict older samples in favour of new ones earlier
t_testCryGetTicks description=Measures the resolution of CryGetTicks and prints the result
t_testSystemClock description=Measures the resolution of the System Clock and prints the result
t_testTimeSyncs description=Simulate network and system time synchronization and write CSV files containing the results
t_universeTimeScale description=Universe time is 6 times faster than normal time
t_universeTimeSyncPoint description=Date and time that the Universe universe clock was synced with real clocks, as a string in ISO 8601 format (yyyy-mm-ddThh:mm:ss.sssZ)
test_playersBounds description=
test_profile description=
toggleserverrenderwindow description=If Server-viewport is enabled (-server3d), will toggle visibility of the render window without watching a particular player or actor
turret_vjoy_deadzone description=Pilots: Defines the size of the dead zone
turret_vjoy_max_angle_pitch description=Turrets: Defines the max angle the pitch vjoy is offset from the middle of the screen.
turret_vjoy_max_angle_yaw description=Turrets: Defines the max angle the yaw vjoy is offset from the middle of the screen.
ui_DebugDockItem description=If non-zero, enable various dock item reports on screen.
ui_DebugDockItemFilter description=If non-empty, dock item debugger will display info on DockItem and DockingSlot with matching tags
ui_DebugDockItemIDFilter description=If non-empty, dock item debugger will display info on DockItem matching ID
ui_ReloadColors description=Reload HUD color XML and refresh materials
ui_SaveMaterials description=Save HUD all Holo materials
ui_activate_areamap description=Activates the context component for the Area Map
ui_allow_ac_customization description=0: Disable 1: Enable Electronic Access AC/SM Loadout customization
ui_bindings.ChangeSpoofVariable description=Change a variable's spoofed value in an Entity's Bindings Vendor
ui_bindings.ReleaseSpoofVariable description=Release a variable which has been spoofed in an Entity's Bindings Vendor
ui_bindings.RetainSpoofVariable description=Spoof a variable in an Entity's Bindings Vendor
ui_bindings.cullDistance description=Distance to cull, disable with zero
ui_bindings.entityFilter description=Filter by entity name
ui_bindings.gui description=0:Disable 1:Enable DebugGUI
ui_bindings.variableFilter description=Filter by variable name
ui_bindings.watches description=1 : Variable watching is enabled | 0 Watched variables are all invisible | 2 Watched variables are all visible
ui_buildingBlocks.batchWorkInstances description=0: Building Blocks Instances are updated in ECUS 1: Instances updated in batch worker threads
ui_buildingBlocks.cullDistance description=Distance to cull, disable with zero
ui_buildingBlocks.cullingFlags description=0: None : 1 Inactive | 2 Invisible | 4 Clipped
ui_buildingBlocks.debugPadNavigation description=0:Disable : 1 Show Element | 2 Show all elements
ui_buildingBlocks.enableHelpers description=0:Disable : 1 Show Bounds | 2 Show Pivot | 4:Show Anchor | 8 Nine-slice | 16 Light Orient | 32 Light Radius | 64 Light Bulb Radius
ui_buildingBlocks.enableOperationChecking description=0: Disables check if a widget field is being modified by more than 1 operation | 1: Enables check if a widget field is being modified by more than 1 operation | 2: Enables and checks all nodes for multiple operations, even if they may have no operation targets.
ui_buildingBlocks.entityFilter description=Filter by Entity name
ui_buildingBlocks.forceNodeCulling description=0: Use Node definition 1:Force enable 2:Force disable
ui_buildingBlocks.grabControlsDebug description=0:Disable 1:Enable Debug for the GrabControls system
ui_buildingBlocks.gui description=0:Disable 1:Enable DebugGUI
ui_buildingBlocks.helperLineWidth description=Size in virtual coordinate size of thickness of helper lines
ui_buildingBlocks.helperSize description=Size in virtual coordinate size of the debug helpers
ui_buildingBlocks.hierarchyInfo description=Enable by types by comma separated string: Children,Performance,Type,Host
ui_buildingBlocks.jobManagerMode description=0:Immediate 1:Deferred
ui_buildingBlocks.logVerbosity description=0:Disable 1:Interactions
ui_buildingBlocks.optimizedStyles description=0: Use legacy method. 1-3: New methods of increasing aggression / complexity
ui_buildingBlocks.optimizedUpdates description=0: Disable : 1 Prepare | 2 Update | 4 Animate | 8 Components
ui_buildingBlocks.rayIntersectionScaleOffset description=Amount to scale up a primitive Pickable object for ray intersection, when it's rendered transform fails an intersection test. Default: 100.f
ui_buildingBlocks.transformAffectsSize description=0: Size is invalidated from only sizing related fields (optimal) | 1:Any transform including position and orientation also invalidates size (unoptimal)
ui_buildingBlocks.widgetFilter description=Filter by Widget name
ui_buildingblocks.callout description=Callout a specified Scene Node
ui_canvasDecalVars.useTextureStreaming description=Enable canvas decal objects to use texture streaming system for allocating and rendering the RTT object texture.
ui_conversation_icon_offsetZ description=The Z offset that will be added above the HeadBone to position the Conversation Icon
ui_conversation_screen_size_ratio description=Screen size ratio. Used to set the % of the screen used for conversation text
ui_conversation_text_mode description=0 - Disabled, 1 - Inner Thought, 2 - Building Blocks, 3 - Inner Thought + Building Blocks
ui_dashboardController.commsNearbyContactRefreshRate description=Rate (in seconds) to refresh nearby contacts in MFD Comms
ui_dashboardController.loggingEnabled description=Enable/disabling DashboardUIController Logging
ui_debug_error_codes description=Displays all blocking error pop-ups from <start error code>. Stop cycling by entering the error code -1.
ui_debug_object_data_bank_entry_tracker description=
ui_debug_object_data_bank_entry_tracker_highlight_registered description=
ui_debug_object_data_bank_entry_tracker_type_filter description=Filter tracked entity list by type:
0: Off.                     4: Missile.              8: Quantum Travel.       12: Turret.            16: Blob Contact.
1: Landing Area.            5: Mission.              9: Race Checkpoint.      13: Debris.
2: FPSMineable.             6: Navpoint              10: Transponder.         14: Actor.
3: Mineable.                7: Party Member          11: Vehicle.             15: Unknown.

ui_disableScreenFade description=Disable screen fade during respawn
ui_editor_allow_loading_starmap_levels description=0 = Default, 1 = Allow loading of starmap editor levels, this will prevent OC exporting so use with caution. Should always be 0 unless testing the starmap using the editor.
ui_emissionsHUD.showEmissionsText description=Show the emissions text
ui_enable_mobiglas_canvas description=0:Regular UI only  1:Canvas & Regular UI  2:Canvas only
ui_enable_visor_canvas description=Set to 1 for to allow for available Building Blocks canvas views on the Visor display
ui_entityservice.cullDistance description=0:Disable 1:Enable DebugGUI
ui_entityservice.entityFilter description=Filter by entity name
ui_entityservice.gui description=0:Disable 1:Enable DebugGUI
ui_entityservice.logVerbosity description=0:Disable 1:Enable
ui_entityservice.poolSize description=Number of unused entity wrappers to cache - 0 to disable
ui_frontend.activate_customizer description=Activates the character customizer feature
ui_frontend.setSpawnLocationExtraDevLocations description=Allow player to pick dev only spawn location from front end
ui_frontend.setSpawnLocationOverride description=Allow player to always pick spawn location from front end
ui_frontend.spectatormode_visible description=Spectator mode button visible in front end if != 0
ui_galacticmap.camera_blend_time_seconds_full description=Camera blend time seconds when focusing on a marker without a seesaw motion
ui_galacticmap.camera_blend_time_seconds_stepped description=Camera blend time seconds when focusing on a marker with a seesaw motion
ui_galacticmap.camera_pan_delay_fraction description=Fraction of total blend time to delay panning the camera to the new position
ui_galacticmap.camera_zoom_delay_fraction description=Fraction of total blend time to delay zooming the camera to the new position
ui_galacticmap.galactic_radius_mult description=Multiplier to the distance between the furthest galactic map markers to set the galactic radius.
ui_galacticmap.marker_radius_coordinate_space_ratio description=The radius of markers in the galactic map are this fraction of the total map height in pixels
ui_galacticmap.max_zoom_dist_additional_mult description=Multiply the max distance the camera can be zoomed out by this amount, must be > 1
ui_galacticmap.transition_max_distance_mult description=Multiplier to the maximum distance at which to stop the transition into the galactic map
ui_galacticmap.transition_min_distance_mult description=Multiplier to the transition distance to the galactic map to offset the camera distance
ui_hideFilter description=Hides the selected visibility Tag
ui_hitIndicator.maxHits description=Maximum number of hits
ui_hitIndicator.maxScale description=Maximum scale of hit indicator when maximum number of hits is reached
ui_hitIndicator.minScale description=Minimum scale of hit indicator when maximum number of hits is reached
ui_interiormap.aligned_edge_threshold description=Interior Map - Aligned edge threshold for calculating room label transforms
ui_interiormap.bottomface_area_threshold description=Interior Map - Bottom face area threshold for calculating room label transforms
ui_interiormap.bounds_hover_scale_offset description=Interior Map - Scale offset for evaluating if a point is inside a bounds or not
ui_interiormap.dangerousmarker_size_relative description=Interior Map - Size relative to the size ratio for dangerous markers
ui_interiormap.floor_intersect_hints_buffer_time description=Interior Map - Time in seconds when hovered off of a floor mesh before the hints related to floor cursor intersection (routing, pinning, etc.) disappear
ui_interiormap.floor_surface_hover_light_horizontal_radius description=Interior Map - When hovered over a floor surface, the size of the ping shader effect (simulating a light) horizontally
ui_interiormap.floor_surface_hover_light_vertical_radius description=Interior Map - When hovered over a floor surface, the size of the ping shader effect (simulating a light) horizontally
ui_interiormap.inputpan_speed_acceleration_time description=Interior Map - Input pan speed acceleration time
ui_interiormap.inputpan_speed_multiplier description=Interior Map - Input pan speed multiplier
ui_interiormap.inputpan_speed_vertical_multiplier description=Interior Map - Input pan speed multiplier for vertical traversal
ui_interiormap.lerp_time description=Interior Map - Section transition interpolation time
ui_interiormap.location_update_interval_seconds description=Interior Map - The update interval time for the incremental positional update (routing, location check, etc.)
ui_interiormap.lod_ratio description=Interior Map - LOD ratio of the objects in the interior map
ui_interiormap.min_camera_distance description=Interior Map - Minimum camera distance to current focus point
ui_interiormap.mouse_select_hold_time description=Interior Map - Time in seconds before a click is considered a drag in order to help prevent misselecting an object when the intent was to drag instead
ui_interiormap.nonuniform_up_vector_max_view_distance description=Interior Map - Max zoom distance when in nonuniform up vector mode (e.g. map host is a planet)
ui_interiormap.override_root_host_at_level description=Interior Map - The number of ancestors up the OC hierarchy graph to consider the root host
ui_interiormap.parallel_edge_threshold description=Interior Map - Parallel edge threshold for calculating room label transforms
ui_interiormap.require_zone_host_tag description=Interior Map - Require the interior map host tag to be set on the map entity's zone
ui_interiormap.routepath_extrusion_from_corner description=Interior Map - Max extrusion length (in meters) from corners when calculating route points (< 0 - use default value)
ui_interiormap.routepath_horizontal_check_segments description=Interior Map - The number of distributed points to check along each horizontal 'spoke' out from the evaluating center target point when calculating a route
ui_interiormap.routepath_horizontal_vertex_search_radius description=Interior Map - The horizontal radius buffer around the target / source point to search for the nearest nav mesh vertex when calculating a route path
ui_interiormap.routepath_incremental_update_distance description=Interior Map - The amount of distance the character must walk in order to trigger a route path update if the character is not currently along the path
ui_interiormap.routepath_line_animation_time_seconds description=Interior Map - Animation time in seconds of the drawing of the route path line once the waypoint is set.
ui_interiormap.routepath_num_path_requests_eval description=Interior Map - The maximum number of evaluated reachable target points to attempt to perform a pathfind to.
ui_interiormap.routepath_removed_journeysegment_buffer_radius description=Interior Map - Distance range on a removed journey segment, beyond which the map recalculates the full route for cross-zone routes if player is still within the same zone host
ui_interiormap.routepath_vertical_check_segments description=Interior Map - The number of distributed points to check along the vertical axis of the focus point when calculating a route to a target point
ui_interiormap.routepath_waypoint_arrival_radius description=Interior Map - Distance when approaching the waypoint marker for the marker to clear
ui_interiormap.section_cluster_distance_threshold description=Interior Map - The 2D distance threshold to consider a section to be within the same cluster of floors
ui_interiormap.sectionlabel_minsize_ratio description=Interior Map - Section label minimum size ratio relative to vertical camera frustum
ui_interiormap.sectionlabel_size_meters description=Interior Map - Section label size meters (height)
ui_interiormap.vertical_fade_distance description=Fade distance of visual cull box
ui_interiormap.zone_bounds_padding description=Padding for width and length of zone bounds
ui_itempreview_debug description=1. Enable Item Preview debug to show what's loaded & linked
ui_loadAlwaysUIViews description=Keep UI views loaded at all times, even if they're not in range. This will affect performance
ui_localizationDebug.lengthScalar description=String length multiplier
ui_localizationDebug.mode description=0:Disable 1:Use preset character 2:Random character 3:Lorem-ipsum 4:_translated_ Lorem-ipsum
ui_localizationDebug.presetCharacter description=Character to replace alphanumerics
ui_map.camera_fov description=Field of view of camera for map
ui_map.max_objectives_displayed description=Maximum number of objectives to display in the contracts panel
ui_map.transition_buffer_distance description=Zoom distance buffer for the map-to-map transitions
ui_map.use_new_overlay description=0 = original starmap UI overlay = 0, 1 = unified UI overlay
ui_markers.disable_fading description=Markers will never fade out (i.e. disable Visibility ability)
ui_markers.draw_marker_clip_area description=1 = draw marker clip area
ui_markers.ess_log_verbosity description=0 = Only log ESS errors, 1 = Log all ESS messages, 2 = Log all ESS and game messages.
ui_markers.focused_boxout_stays_alive description=1: In VEHICLES boxouts under interaction cursor or near centre of screen will stay on screen until you look away from them, even if the lifetime has expired
ui_markers.ignore_show_in_all_zones description=0 = Force navpoint markers to use ShowInAllZones, 1 = Game mode default, 2 = Force ignore ShowInAllZones for navpoint markers.
ui_markers.override_law_type description=Override the Marker Law type:

	 -1		: Disable override
	 0			: Lawful to attack
	 1			: Law enforcement
ui_markers.override_max_boxouts description=Override the max number of boxouts that can appear at once, set to -1 to use values from data. Used when initializing the lens, may need a restart to take effect.
ui_markers.override_reputation description=Override the Marker Reputation type:

	 -1		: Disable override
	  0		: Shot Me
	  1		: Party
	  2		: Positive
	  3		: Neutral
	  4		: Negative
ui_markers.override_same_mission description=Override the Same Mission type:

	 -1		: Disable override
	 0			: Not on same mission
	 1			: Is on same mission
ui_markers.setScalingIndex description=TEMPORARY: Set the index of the radical for the cosmetic scaling of markers, >= 1
ui_markers.show_bounds description=Show outline of bounding box (if exists)
ui_markers.show_boxouts description=0 = force off, 1 = use game rules, 2 = force on
ui_markers.show_max_boxouts description=1 = anything hit by a scan wave will show a boxout, up to the max set in data (or overridden by cvar)
ui_markers.use_label_sideways_flip description=Enable flipping marker labels sideways (making them face the bottom of the screen)
ui_markers.use_label_under_flip description=Enable flipping marker labels to face the camera when it's under them
ui_markers.use_linked_entity_bounds description=0 = Use the default bounds of the mission maker entity, 1 = Use the bounds of the mission linked entity
ui_markers.use_pu_objective_linking description=0 = Use S42 for linking objective markers, 1 = Game mode default, 2 = Use PU linking for objective markers (untested in S42).
ui_markers.use_standalone_objective_markers description=0 = Force objective markers take the form of the marker for the entity they track, 1 = Game mode default, 2 = Force use of standard generic objective markers
ui_markers.use_v2_provider description=Switch Provider system in favor of legacy Trackers.

	 -1     : Force Enable All
	 0      : Game Mode Dependent
	 2      : Grenades
	 4      : Player
	 8      : UnattendedVehicle
	 16     : VehicleEntrance
	 32     : ObjectDataBank
	 64     : NavigationWaypoints
ui_markers.use_v2_tracker_type description=Use ObjectDataBank Provider system in favor of legacy Trackers.

	 -1     : Force Enable All
	 0      : Game Mode Dependent
	 2      : LandingArea
	 4      : FPSMineable
	 8      : Mineable
	 16     : Missile
	 32     : Mission
	 64     : NavPoint
	 128    : PartyMember
	 256    : QuantumTravel
	 512    : RaceCheckpoint
	 1024   : Transponder
	 2048   : Vehicle
	 4096   : Turret
	 8192   : Debris
	 16384  : Actor
	 32768  : Unknown
	 65536  : BlobContact
	 131072 : InteractionPoint
	 262144 : Interactable
ui_primitiveRenderNode.debug description=Debug draw distances to PrimitiveRenderNodes.
ui_primitiveRenderNode.drawAABBs description=Debug draw bounding boxes around PrimitiveRenderNodes
1: Draw local bounds
2: Draw world AABB
3: Draw both local and world bounds

ui_primitives.cullDistance description=Distance to cull, disable with zero
ui_primitives.entityFilter description=Filter by entity name
ui_primitives.gui description=0:Disable 1:Enable DebugGUI
ui_rtt.debug description=0:Disable 1:Enable
ui_shipselector_optimization description=ASOP Terminal optimization mode - 0: safe 1: fast
ui_shopping.fake_currency_balance description=Fake the displayed currency balance (-1:disable)
ui_shopping.fake_purchase_price description=Fake the displayed purchase price (-1:disable)
ui_shopping.fake_purchase_result description=Fake purchase result returned by shopping service (0:disable | 1:success | <0:PurchaseResultCodes)
ui_showFilter description=Shows ONLY the selected visibility Tag
ui_spectatormode_enabled description=Pure spectator mode enabled if != 0
ui_starmap.boxout_outro_time description=Animation time in seconds for the boxout outro.
ui_starmap.camera_base_blend_time_seconds_max_transition description=Camera base blend time seconds for transition to/from galactic map, will be multiplied by the fraction of the max view distance that must be traversed
ui_starmap.camera_blend_time_seconds_full description=Camera blend time seconds full
ui_starmap.camera_blend_time_seconds_stepped description=Camera blend time seconds stepped
ui_starmap.camera_pan_delay_fraction description=Camera pan delay fraction
ui_starmap.camera_zoom_delay_fraction description=Camera zoom delay fraction
ui_starmap.childless_marker_radius_mult description=Childless marker radius multiplier
ui_starmap.culling_radius_pixels description=Culling radius pixels
ui_starmap.dropdown_recent_max description=Dropdown recent max
ui_starmap.enable_full_screen_toggle description=0 by default. 1: enable switching between small radar and full-screen version.
ui_starmap.focus_zoom_dist_mult description=Focus zoom distance multiplier
ui_starmap.framing_ratio_of_screen_size description=Framing ratio of screen size
ui_starmap.hovered_marker_maximum_amenities description=The maximum number of amenities that can appear on the hovered marker info panel.
ui_starmap.label_header_text_scale description=Label header text scale
ui_starmap.label_max_fade_offset description=Label max fade offset
ui_starmap.label_max_header_text_size description=Label max header text size
ui_starmap.label_max_size description=Label max size
ui_starmap.label_min_fade_offset description=Label min fade offset
ui_starmap.label_min_header_text_size description=Label min header text size
ui_starmap.label_min_size description=Label min size
ui_starmap.label_pos_offset_mult description=Label position offset multiplier
ui_starmap.label_sub_text_scale description=Label sub text scale
ui_starmap.max_scaling_dist_mult_has_parent description=Max scaling distance multiplier for markers that have parents
ui_starmap.max_scaling_dist_mult_no_parent description=Max scaling distance multiplier for markers that do not have parents
ui_starmap.max_zoom_dist_additional_mult description=Max zoom distance additional multiplier
ui_starmap.min_scaling_dist_mult description=Min scaling distance multiplier
ui_starmap.min_search_string_length_partial_match description=For strings that do not exactly match the start of the filter string, require at least this number of letters before checking elsewhere in the string for a match.
ui_starmap.navgrid_max_dust_particles description=Max dust particle count
ui_starmap.navgrid_scale_mult_in_2d_context description=Navigation grid scale multiplier when starmap is projected inside a 2D plane (e.g. primitive RTT)
ui_starmap.quantumpath_line_animation_time_seconds description=Animation time in seconds of the drawing of the quantum path line once the destination is set.
ui_starmap.radar_max_range description=Radar max range
ui_starmap.scaling_radius_max_dist_mult description=Multiplier for the marker radius at the maximum view distance when scaling
ui_starmap.smoothing_dist_mult description=Smoothing distance multiplier
ui_starmap.spring_max_mult description=Spring max multiplier
ui_starmap.spring_min_mult description=Spring min multiplier
ui_starmap.spring_smooth_time description=Spring smooth time
ui_starmap.spring_window_mult description=Spring window multiplier
ui_starmap.start_zoom_out_dist_additional_mult description=Zoom distance additional multiplier for triggering transition out to galactic map when player manually zooms out
ui_starmap.sun_boundary_offset_mult description=Sun boundary offset multiplier
ui_starmap.surface_label_max_alpha_distance_from_center description=Surface label max alpha distance from center - must be less than 'surface_label_min_alpha_distance_from_center'
ui_starmap.surface_label_min_alpha_distance_from_center description=Surface label min alpha distance from center
ui_starmap.surface_system_radius_mult description=Surface system radius multiplier
ui_starmap.surface_to_parent_size_ratio description=Surface to parent size ratio
ui_starmap.surface_to_volume_size_ratio description=Surface to volume size ratio
ui_starmap.window_edge_clip_bottom_right_x description=Bottom right x of the clip box for edge markers in the window version of the starmap
ui_starmap.window_edge_clip_bottom_right_y description=Bottom right y of the clip box for edge markers in the window version of the starmap
ui_starmap.window_edge_clip_top_left_x description=Top left x of the clip box for edge markers in the window version of the starmap
ui_starmap.window_edge_clip_top_left_y description=Top left y of the clip box for edge markers in the window version of the starmap
ui_textinput.inputRepeatDelay description=Controls the time to wait while holding a key before it repeats the input
ui_textinput.inputRepeatRate description=Controls the rate at which to input a button held event while holding a key after the delay has already happened
ui_useNewMarkers description=Toggle the new Building Blocks markers functionality. 0 = disabled, 1 = game mode dependent, 2 = force enable
ui_use_new_chat description=0: Disable, 1: Game mode default, 2: Force enable new chat
ui_use_visorlens description=0: Disable, 1: Game mode default, 2: Force Enable 'Visor/Lens' on lens and disable legacy Visor, 3: Force enable 'Visor/Lens' on lens and legacy Visor
ui_viewForAllUsers.disabled description=Disable UI views such as MFDs to be visible for all players, not only for the local client
ui_visorlens_headbob_mode description=0: Affect RTT camera 1: Affect Building Blocks Scene root
use_short_string_for_HUD_objectives description=If enabled, use the short string description if no HUD string is set
ut_runEditorTests description=Runs all editor unit tests.
ut_runTests description=Runs all unit tests.
v_DebrisCollisionGracePeriod description=The time debris ignore collisions with each other and the host, set to 0 to disable
v_InitialSpawn_DamageDelay description=Time in seconds the vehicle will be unable to take damage after being spawned.
v_TileSystem.subOcTileManagers description=Enable/Disable the use of sub OC containers to act as tile managers
v_aimSimulatedStickSensitivity description=(GAIN) Button aim (sticky look) input is multiplied by this value.
v_aimStickSensitivity description=(GAIN) Analogue aim (sticky look) input is multiplied by this value.
v_alertState description=Debug vehicle damage state: -1 = turn off debug vehicle damage state, 0 = default, 1 = emergency
v_analogueAimStickThreshold description=The amount of aim rotation at which the stick timer countdown is started or stopped.
v_analogueAimStickTime description=The time the head aim (sticky look) will stay in its current position before starting to re-centre. Mouse input currently ignores this value.
v_annunciator.log description=Enable/Disable Annunciator logging
v_antiFlipDelay description=If new anti-flip is used, this cvar speficies the delay between the moment when at least one side of the vehicle lost contact with the terrain and anti-flip kicking in.
v_antiFlipMode description=Switch between old (0) and new (1) anti-flip for wheeled vehicels.
v_autopilot.debug_action description=Enables the debug data of the autopilot, view current and queue actions.
v_autopilot.debug_fly_to description=Enables markers on positinoal goal targets and connecting lines if multiple linear position goal actions in a row.
v_autopilot.position_epsilon description=Sets the minimum positional offset that is used to detect whether the goals have been reached.
v_boundaryViolationGraceTime description=Time from vehicle triggering a boundary violation until it has to suffer the consequences
v_cockpit_warning_fuel_duration description=Time (seconds) to display cockpit fuel warnings for (-1 = use value from DataCore)
v_combatMarker_DisableUnfocusedMarkers description=Disable unfocused combat markers
v_combatMarker_ForceInitAnim description=Whether to force the Combat Marker to always play the intro animation
v_cull_lodMul description=Sets the LOD multiplier for vehicles' LOD culling. It has to be between 0 and 2.55
v_cull_minPixels description=Sets the minimum number of pixels for vehicles' screen space culling
v_debugMovementVehicle description=Enable movement output for the named vehicle
v_debugSounds description=Enable/disable vehicle sound debug drawing
v_debugSuspensionIK description=Debug draw the suspension ik
v_debugTreads description=Prints debug information about the vehicle treads to the screen
v_debug_services_ui_provider description=Turn on to enable logging for the Landing Services Screen (Warning: Logging will happen every frame, only use when needed)
v_debug_shop_box_sizes description=sets the box sizes all shops will use. Requires a shop service update to be populated. (g_shops.reload_inventory on DGS)
v_debug_shop_buy_force_owner description=Force the assigned legal owner when buying in Shops
v_debug_shop_buy_what_i_sell description=Shops buy what they sell
v_debug_shop_check_sell_item_types description=Don't perform check if items are allowed to sell in shops
v_debug_shop_operations description=Print shop operations as they occur for: 1. transactions, 2. everything
v_debug_shop_sell_what_i_buy description=Shops Sell what they buy
v_debug_usage description=Debug vehicle usage stats: 1 = basic debug info, 2 = also list ships
v_dedi_follow description=Set debug renderer pos to follow this vehicle (by index) on dedicated server
v_dedi_offset_x description=Set debug renderer x offset
v_dedi_offset_y description=Set debug renderer y offset
v_dedi_offset_z description=Set debug renderer z offset
v_defer_damage description=Enable/Disable deferred processing of vehicle hits for GameRulesSCDamageHandling. 0 - disabled, 1 - enabled
v_delayPreloadingThreshold description=If the total delay is above this level, it will begin preloading on vehicle destruction (rather than on low-health)
v_disable_hull description=Disable hull proxies
v_draw_slip description=Draw wheel slip status
v_draw_suspension description=Enables/disables display of wheel suspension, for the vehicle that has v_profileMovement enabled
v_enableControlInputAnims_clientOnly description=Enable the vehicle animation controller to listen to client control inputs (temp functionality that is not networked, won't work in releases!)
v_enable_experimental_armor_pen description=Enables/disables experimental armour penetration handling for vehicles
v_entrance_markers.debug description=Display the entrance marker vehicle bounds
v_entrance_markers.enabled description=Enable the entrance marker vehicle component
v_expensiveStepDeferredDeletionTime description=Time from vehicle triggering an expensive step response (no physics, destroyed) until the vehicle is deleted
v_exportPhysicsGridVoxelData description=If set, vehicle will export the voxel data from the physics grid when spawned in the editor
v_fixed_aim_assist_debug description=Fixed weapon assist debug.
v_fixed_aim_assist_default_angle_inner description=Innter threshold angle (in degrees) for fixed weapon assist for pilots, etc..
v_fixed_aim_assist_default_angle_outer description=Outer threshold angle (in degrees) for fixed weapon assist for pilots, etc..
v_fixed_aim_assist_enabled description=Fixed weapon assist enabled.
v_fixed_aim_assist_turret_angle_inner description=Inner threshold angle (in degrees) for fixed weapon assist for turrets. Only used if > 0.
v_fixed_aim_assist_turret_angle_outer description=Outer threshold angle (in degrees) for fixed weapon assist for turrets. Only used if > 0.
v_flightController.g_meter_includes_gravity description=If set to 1, the g-meter will included gravity. That means on earth it will show +1G hovering.
v_flightController.hud_tvi_magnification description=Sets the internal magnification of the TVIs.
v_flightController.hud_vsi_max description=This sets the maximum number for VSI normalization.
v_flightController.player_default_settings_advanced_hud_labels_enabled description=Player default options are set by the option menu. If set to 1, if the advanced HUD should show labels over icons.
v_flightController.player_default_settings_advanced_hud_nav_enabled description=Player default options are set by the option menu. If set to 1, if the advanced HUD should be visible in NAV mode.
v_flightController.player_default_settings_advanced_hud_scm_enabled description=Player default options are set by the option menu. If set to 1, if the advanced HUD should be visible in SCM mode.
v_flightController.player_default_settings_course_prediction_enabled description=Player default options are set by the option menu. If set to 1, if the course prediction AR on the dashboard should be enabled.
v_flightController.useProjOffset description=Use projection offset.
v_flightController.velocity_bar_scm_ticks description=Amount of ticks for the velocity bar.
v_flightController.velocity_indicator_display_type description=Display mode for the velocity indicator 0 - Always off; 1 - Fading; 2 - Always on.
v_force_static description=Force all vehicles to be static
v_gforce_animations description=Enable g-force passing out animations from vehicles
v_godMode description=Makes vehicles invincible (1 = no ships can take damage, 2 = only AI ships can take damage)
v_gravlev.debug description=Shows General Gravlev Debug Information; Has Waterplane, currently in use/on, average hoverheight, radar altitude, trapped bike factor
v_gravlev.debug_antifall description=Shows Gravlev antifall raycast and result. Set > 1 to enable Imgui watch vars.
v_gravlev.debug_hover_plane description=Shows Gravlev hover plane, springs and stabilizer axes
v_gravlev.debug_landing_springs description=Shows Gravlev Landing Spring Debug; Lengths, contacts, active, targets
v_gravlev.debug_player_height description=Shows Gravlev player height debug; acceleration, speed, stopping distance, min/max. Set > 1 to enable Imgui watch vars.
v_gravlev.debug_suspension description=Shows Gravlev Suspension Debug; Suspension length/relaxer, suspension spring values (constant, location, compression rates)
v_groundVehicleSpawnGroundHeight description=Set default height above ground for v_spawn debug commands on ground vehicles.
v_healthRatioPreloadThreshold description=Will begin preloading when the vehicle's health ratio rises above this level
v_ifcs2.ab_anti_spam_requires_repress description=If set to 1 boost button needs to be let go before it can be retriggered.
v_ifcs2.ab_capacitor description=Enables the afterburner capacitor feature
v_ifcs2.ab_capacitor_ang_accel_modifier description=Multiplier of angular acceleration magnitude to apply to drain rate (if not using percentage drain rate)
v_ifcs2.ab_capacitor_ang_percentage_drain_max_rate description=Max drain rate per second under angular motion if capacitor is using percentage of max thrust
v_ifcs2.ab_capacitor_base_cost_modifier description=Multiplier of acceleration magnitude to apply to drain rate (if not using percentage drain rate)
v_ifcs2.ab_capacitor_enable_base_cost description=Enables a minimum cost when using the afterburner capacitor
v_ifcs2.ab_capacitor_enable_percentage_drain description=Enables capacitor drain to be based on percentage of max thrust in the current direction
v_ifcs2.ab_capacitor_lin_accel_modifier description=Multiplier of linear acceleration magnitude to apply to drain rate (if not using percentage drain rate)
v_ifcs2.ab_capacitor_lin_percentage_drain_max_rate description=Max drain rate per second under linear motion if capacitor is using percentage of max thrust
v_ifcs2.ab_capacitor_regen_modifier description=Multiplier of afterburner capacitor regen rate
v_ifcs2.ab_capacitor_threshold_override description=If >= 0, overrides the minimum threshold required to enable afterburner
v_ifcs2.ab_predelay_time_override description=Time (s) between requesting afterburner and it turning on. If < 0, uses value from data instead
v_ifcs2.ab_ramp_value_affects_capacity_drain description=If set to 1 the capacitor drain on is modified by the current ramp value.
v_ifcs2.ab_rampdown_time_override description=Time (s) for afterburner to ramp down after being used.
v_ifcs2.ab_rampup_time_override description=Time (s) for afterburner to ramp up when being used.
v_ifcs2.ab_triggering_allowed_during_ramp_down description=If set to 1 boost may be re-triggered while it is in ramp down.
v_ifcs2.ab_triggering_allowed_during_regen_cooldown description=If set to 1 boost may be triggered while the ship is in regen cooldown.
v_ifcs2.acceleration_decay_angular_override description=If >= 0, overrides angular acceleration decay value from data (0 = disabled)
v_ifcs2.acceleration_decay_linear_override description=If >= 0, overrides linear acceleration decay value from data (0 = disabled)
v_ifcs2.control_surface_enable_for_ai description=If set to 0, control surfaces will not enable for non-player ships. This should be removed once the control surface tech is completed.
v_ifcs2.control_surface_overwrite_min_pressure description=If enabled will overwrite the min pressure for the control surface mode (before that point a mix will be used).
v_ifcs2.control_surface_overwrite_stall_threshold_modifier description=If enabled will overwrite stall threshold modifier for the control surface mode.
v_ifcs2.debug_accel_pool description=Acceleration pool debug, 1 for linear, 2 for angular
v_ifcs2.debug_aero description=Show drag vector currently affecting the ship
v_ifcs2.debug_afterburner description=Shows text about afterburner and thrust capacitor state.
v_ifcs2.debug_atmo description=If set to 1 draws debug numbers for the atmospheric directly on each vehicle. v_ifcs2.debug_world_distance is used as a distance filter.
v_ifcs2.debug_authored_motions description=If set to one shows the authored motions.
v_ifcs2.debug_backwash_volumes description=Shows volume of each thruster backwash
v_ifcs2.debug_control_surface_spline_control description=Shows the positional target passed into the control surface PID from the processed spline input
v_ifcs2.debug_core_states description=Debug core states.
v_ifcs2.debug_filter_name description=Filtered name when v_ifcs2.debug is used.
v_ifcs2.debug_fuel_usage description=Show fuel usage data for the whole ship
v_ifcs2.debug_gimbal_range description=Show the rotation range of each thruster's gimbal
v_ifcs2.debug_goal_positions description=Show debug positions and splines when the appropriate motion controller paths are used.
v_ifcs2.debug_ground_turbulence description=Shows debug text about ground turbulence.
v_ifcs2.debug_master_mode_control_accels description=Draw accels and accel limits for the ship, including them being reduced as part of master mode drag calculations. Set > 1 to draw text values as well
v_ifcs2.debug_misfires description=Show the strength and direction of the impulse applied when a thruster misfires
v_ifcs2.debug_override_atmospheric_density description=Overrides the atmospheric density. Only active >= 0.
v_ifcs2.debug_phantoms description=Will show the location and orientation of tracked phantom thrusters (thrusters that have been detached)
v_ifcs2.debug_power_usage description=Show power usage data for the whole ship
v_ifcs2.debug_proximity_assist description=Prints info about the proximity assist feature
v_ifcs2.debug_show_in_world description=If set to 1 draws acceleration numbers and sources directly into the world.
v_ifcs2.debug_thruster_efficiency description=Show atmospheric efficiency of each thruster
v_ifcs2.debug_thruster_locations description=Show where thrusters are located. 1 for relative to COM, 2, for relative to origin
v_ifcs2.debug_thruster_usage description=Show how much each thruster is being used
v_ifcs2.debug_thruster_usage_list description=Show how much each thruster is being used in a list on screen
v_ifcs2.debug_wind_turbulence description=Shows debug text about ground turbulence.
v_ifcs2.debug_world_distance description=If set to 1 draws acceleration numbers and sources directly into the world.
v_ifcs2.efficiency_curves description=Enables efficiency curves
v_ifcs2.enable_anti_precession_forces_DEPRECATED description=Enables / Disables Anti precession forces (new model only, it's enforced on the old one). Best to leave it on, it also makes decelerations a bit smoother.
v_ifcs2.enable_control_surface_ang_acceleration_limiter description=If set to 1 the ang accel limiter will be enabled for control surfaces.
v_ifcs2.enable_control_surface_include_wind description=If set to 1 the aerodynamics speed will include the wind.
v_ifcs2.enable_control_surface_jerk description=If set to 1 the control surface accelerations will use jerk.
v_ifcs2.enable_control_surface_mode description=Allows control surface mode to be accessed when on suitable atmospheric planets, 0 = disabled, 1 = enabled for all ships with controlsurfaces enabled in DF, 2 = force enabled for all ships
v_ifcs2.enable_control_surface_mode_mix_space_brake description=If set to 1, Using the space brake will move the surface mode mix to full thrusters.
v_ifcs2.enable_control_surface_pitch_limiter description=If set to 1 the pitch limiter for players is enabled.
v_ifcs2.enable_ground_turbulence description=Enables / Disables ground turbulence. -1: Params value, 0: forced off, 1: forced on. Only applies to control surfaces.
v_ifcs2.enable_thruster_backwash description=Enables backwash effects on thrusters
v_ifcs2.enable_wind_turbulence description=Enables / Disables wind turbulence. -1: Params value, 0: forced off, 1: forced on. Only applies to control surfaces.
v_ifcs2.legacy_aerodynamics_include_wind description=If set to 1 the current wind vector will be applied on top of the ship speed.
v_ifcs2.legacy_aerodynamics_max_accepted_wind_speed description=If set above or equal zero, sets the available wind speed.
v_ifcs2.limiters_linear_type description=Changed the used limiter type: 
-1: as defined 
0: NormalizedUniform (stable velocity vector - allows trichording)
1: NormalizedUniformWithMaxRadius (stable velocity vector, like 1 but with max radius - no trichording)
2: NormalizedUniformLateral (stable velocity vector, like 1 but with lateral priority - no trichording)
3: Ellipsoid (stronger cut back off accelerations (stable, strongest cut back on accels)
4  PerAxis (unstable, does not keep velocity vector, allows trichording) 
5  PerAxisWithMaxRadius (unstable, prefers longitudinal, no trichording) 
6: PerAxisLateral (unstable, prefers lateral, no trichording, if longitudinal axis is smaller than lateral axes, ellipsoid is used)
v_ifcs2.limiters_pitch_yaw_acceleration description=-1: as defined 
0: NormalizedUniform (allows 45s)
1: NormalizedUniformWithMaxRadius (stable velocity vector, like 1 but with max radius - no 45s)
2: NormalizedUniformLateral (stable velocity vector, like 1 but with lateral priority - no 45s)
3: Ellipsoid (stronger cut back off accelerations (stable, strongest cut back on accels)
4  PerAxis (unstable, does not keep velocity vector, allows trichording) 
5  PerAxisWithMaxRadius (unstable, prefers longitudinal, no trichording) 
6: PerAxisLateral (unstable, prefers lateral, no trichording. should not be used for pitch yaw)
v_ifcs2.limiters_pitch_yaw_velocity description=-1: as defined 
0: NormalizedUniform (allows 45s)
1: NormalizedUniformWithMaxRadius (stable velocity vector, like 1 but with max radius - no 45s)
2: NormalizedUniformLateral (stable velocity vector, like 1 but with lateral priority - no 45s)
3: Ellipsoid (stronger cut back off accelerations (stable, strongest cut back on accels)
4  PerAxis (unstable, does not keep velocity vector, allows trichording) 
5  PerAxisWithMaxRadius (unstable, prefers longitudinal, no trichording) 
6: PerAxisLateral (unstable, prefers lateral, no trichording, should not be used for pitch yaw)
v_ifcs2.master_modes_clamp_drag_by_inputs description=Clamp drag so that inputs in the same direction won't give you extra Gs
v_ifcs2.master_modes_max_drag_multiplier description=If >1, overrides Datacore value. Maximum drag that can be applied in SCM Master Mode, as a multiplier of max accelerations in each axis
v_ifcs2.master_modes_zero_drag_at_scm description=1 = zero drag at SCM, 0 = drag at SCM exactly counters max accelerations in opposite direction
v_ifcs2.new_model_aerodynamics_angular_anti_precession_enabled description=Calculates anti-precession forces with aerodynamics.
v_ifcs2.new_model_allow_disabling_core description=If set to 1 the game will allow changing the core state of IFCS including default options and MFDs.
v_ifcs2.new_model_anti_precession_calculate_globally description=If set to 1, calculates anti-precession forces for all update modes (best to minimize wobble).
v_ifcs2.new_model_control_surfaces_angular_anti_precession_enabled description=Calculates anti-precession forces with control surfaces.
v_ifcs2.new_model_control_surfaces_enable_pitch_limiter description=Enables pitch limiter for the new model.
v_ifcs2.new_model_core_boot_wait_time_override description=If 0 or larger, overwrites the wait time that IFCS needs to take to wait up after the core was disabled.
v_ifcs2.new_model_core_override_threshold_Gs description=Only enabled above 0. Defines the amount of Gs the ship can endure without going into IFCS core slapdown.
v_ifcs2.new_model_core_spool_up_time_override description=If 0 or larger, overwrites the spool up time that IFCS needs to take to spool up after the core was disabled.
v_ifcs2.new_model_debug description=Show on screen debug information.
v_ifcs2.new_model_debug_aerodynamics description=Show on screen debug information for aerodynamics.
v_ifcs2.new_model_debug_control_surfaces description=Show on screen debug information for control surfaces.
v_ifcs2.new_model_debug_thrusters description=Show on screen debug information for thrusters.
v_ifcs2.new_model_decoupled_gliding_core_off description=If set to 1, per direction speed limits during decoupled are only enforced while linear movement happens while the IFCS core is inactive. At 0 can you accelerate forward and turn around without speeds going down. Set via game mode.
v_ifcs2.new_model_decoupled_gliding_default description=If set to 1, per direction speed limits during decoupled are only enforced while linear movement happens while the IFCS core is active. At 0 can you accelerate forward and turn around without speeds going down. Set via game mode.
v_ifcs2.new_model_enabled description=Enables the new model for IFCS tuning if set to 1. Set via the game mode.
v_ifcs2.new_model_enabled_forced description=This allows enabling the new model via user.cfgs even if the game mode is set. Set to 1 to force on and 0 to force off. Default is -1.
v_ifcs2.new_model_linear_time_goal_overwrite description=Overwrites and uses time to max speed if above 0.
v_ifcs2.new_model_linear_velocity_stability_threshold description=Sets at what relative distance to the max allow speed we gradually fade into a stable limiter if an unstable is used.
v_ifcs2.new_model_proximity_assist_default_goal_smooth_time description=Sets the amount of smoothing for the proximity speed for normal flying.
v_ifcs2.new_model_proximity_assist_max_ray_length description=Sets the max ray length that is used for proximity assist (new model only!)
v_ifcs2.new_model_proximity_assist_rays_per_frame description=Sets the max amount of rays you can do per frame.
v_ifcs2.new_model_proximity_assist_velocity_goal_smooth_time description=Sets the amount of smoothing for the proximity speed when the velocity ray result is used.
v_ifcs2.new_model_proximity_assist_velocity_ray_time_hit_time description=Sets the amount of seconds that is used to calculate the allowed speed against the distance of the velocity ray.
v_ifcs2.new_model_rotation_modifier_global_pitch description=Modifies the raw rotation speed on pitch if above 0.
v_ifcs2.new_model_rotation_modifier_global_roll description=Modifies the raw rotation speed on roll if above 0.
v_ifcs2.new_model_rotation_modifier_global_yaw description=Modifies the raw rotation speed on yaw if above 0.
v_ifcs2.new_model_rotation_modifier_override_core_off description=If set to 1, forces rotation modifier based on linear acceleration.
v_ifcs2.new_model_rotation_modifier_override_linear_acceleration description=If set to 1, forces rotation modifier based on linear acceleration.
v_ifcs2.new_model_rotation_modifier_override_linear_speed description=If set to 1, forces rotation modifier based on linear acceleration.
v_ifcs2.new_model_spline_algorithm_lin description=The used algorithm for following on splines via linear movement. 0: Legacy, 1: One point look ahead.
v_ifcs2.new_model_spline_lookahead_time description=The amount of the time used to look ahead of the current spline based of the current spline speed.
v_ifcs2.new_model_thrusters_angular_anti_precession_enable_limiter description=If enabled will restrict the anti precession forces based on the current angular limiter.
v_ifcs2.new_model_thrusters_angular_anti_precession_enabled description=Calculates anti-precession forces with thrusters.
v_ifcs2.new_model_thrusters_angular_jerk_enabled description=Enables jerk for angular thruster movement.
v_ifcs2.new_model_thrusters_angular_jerk_overwriteAccelerationDecay description=Time to full acceleration in sec
v_ifcs2.new_model_thrusters_angular_jerk_overwriteTimeToFullAcceleration description=Time to full acceleration in sec
v_ifcs2.new_model_thrusters_linear_jerk_enabled description=Enables jerk for linear thruster movement.
v_ifcs2.new_model_thrusters_linear_jerk_overwriteAccelerationDecay description=Time to full acceleration in sec
v_ifcs2.new_model_thrusters_linear_jerk_overwriteTimeToFullAcceleration description=Time to full acceleration in sec
v_ifcs2.new_model_thrusters_linear_overwrite_time_to_full_speed description=Overwrites the time to full speed for thrusters which defines the max speed.
v_ifcs2.new_throttle_behaviour_enabled description=Swaps to the new throttle behaviour that changes the way how the speed limiter works.
v_ifcs2.new_throttle_scm_axis_position description=Axis position which is defined as the SCM border. Active with v_ifcs2.new_throttle_behaviour_enabled enabled.
v_ifcs2.new_throttle_scm_curve_exponent description=Exponent for the curve under the SCM border to allow more precision in low speeds. Active with v_ifcs2.new_throttle_behaviour_enabled enabled.
v_ifcs2.player_default_settings_auto_precision_mode_enabled description=Player default options are set by the option menu. Set to 1 if by default the auto precision mode is on.
v_ifcs2.player_default_settings_core_functionality_enabled description=Player default options are set by the option menu. Set to 1 if by default IFCS should be enabled.
v_ifcs2.player_default_settings_coupled_enabled description=Player default options are set by the option menu. Set to 1 if by default decoupled is on.
v_ifcs2.player_default_settings_esp_enabled description=Player default options are set by the option menu. Set to 1 if by default ESP is on.
v_ifcs2.player_default_settings_gravity_compensation_enabled description=Player default options are set by the option menu. Set to 1 if by default gravity compensation is on.
v_ifcs2.player_default_settings_gsafe_disabled_by_boost description=Player default options are set by the option menu. Set to 1 if by default gsafe disables boost.
v_ifcs2.player_default_settings_gsafe_enabled description=Player default options are set by the option menu. Set to 1 if by default gsafe is on.
v_ifcs2.player_default_settings_proximity_assist_default_enabled description=Player default options are set by the option menu. Set to 1 if by default proximity assist (default) should be enabled.
v_ifcs2.player_default_settings_proximity_assist_enabled_DEPRECATED description=Player default options are set by the option menu. Set to 1 if by default proximity assist should be enabled.
v_ifcs2.player_default_settings_proximity_assist_landing_enabled description=Player default options are set by the option menu. Set to 1 if by default proximity assist (landing only) should be enabled.
v_ifcs2.player_default_settings_spacebrake_enables_boost description=Player default options are set by the option menu. Set to 1 if by default the space brake enables boost.
v_ifcs2.player_default_settings_speed_limiter_enabled description=Player default options are set by the option menu. Set to 1 if by default the speed limiter is enabled.
v_ifcs2.player_default_settings_stability_enabled description=Player default options are set by the option menu. Set to 1 if by default stability should be enabled.
v_ifcs2.player_default_settings_sticky_throttle_enabled description=Player default options are set by the option menu. Set to 1 if by default cruise mode is on.
v_ifcs2.radar_altitude_max_length description=Defines the max amount of meters for the radar altitude check.
v_ifcs2.set_backwash_strength description=Set thruster backwash to be always active
v_ifcs2.set_flight_check_mode description=Sets the Flight Check mode of a vehicle
v_ifcs2.set_thruster_health description=Set the health of a thruster
v_ifcs2.stop_acceleration_update description=stop ship thruster acceleration. 1 all ships, 2: all but player.
v_ifcs2.throttle_default_to_sticky description=Set to 1 if the default should be the sticky throttle, otherwise 0.
v_ifcs2.thruster_direction_goal_smoothing description=Sets the smoothCD value to smooth out positional changes in thrusters. This is 0 by default.
v_ifcs2.thruster_strength_smoothing_type description=If set to 1, uses smooth CD smoothing which is a bit more reactive.
v_ifcs2.turbulence_ground_noise_lacunarity description=This is a pattern value for the noise. Low values produce uniformity, high values heterogeneity.Leave it at 2 when in doubt as that is the proposed default value of the fractal noise classes.
v_ifcs2.turbulence_ground_noise_octaves description=Defines the number of iterations the noise generator goes through on a single call. Use 3.0 when in doubt.
v_ifcs2.turbulence_overwrite_cloud_density_amplitude description=If set to zero or more, overwrites the used cloud density turbulence amplitude. Meant for quick iterations of ships.
v_ifcs2.turbulence_overwrite_ground_angular_acceleration description=If set to zero or more, overwrites the used ground turbulence amplitude. Meant for quick iterations of ships.
v_ifcs2.turbulence_overwrite_wind_speed_amplitude description=If set to zero or more, overwrites the used wind speed turbulence amplitude. Meant for quick iterations of ships.
v_ifcs2_input.accel_limiter_change_time_hold description=Changes the speed with which the accel limiter can be changed when deltas are used.
v_ifcs2_input.accel_limiter_increment_change description=Changes the speed with which the accel limiter can be changed when deltas are used.
v_ifcs2_input.combined_throttle_defaults_to_relative description=1: if enabled combined axis go to relative, otherwise absolute, use LALT+C to swap.
v_ifcs2_input.core_disabled_sensitivity_max description=Max power for the disabled IFCS core input. This is applied for both rotation and translation and should be above core_disabled_sensitity_min
v_ifcs2_input.core_disabled_sensitivity_min description=Min power for the disabled IFCS core input. This is applied for both rotation and translation and should not go below 1
v_ifcs2_input.core_disabled_sensitivity_rotation description=The power of sensitivity change when the IFCS core is enabled for rotations.
v_ifcs2_input.core_disabled_sensitivity_translation description=The power of sensitivity change when the IFCS core is enabled for translation.
v_ifcs2_input.debug_axes description=Show debug for all input axes for raw, simulated and used values.
v_ifcs2_input.debug_limiters description=Show speed and acceleration limiter debug view
v_ifcs2_input.enable_deflection_time description=Enables the movement simulation based on armor and other penalties.
v_ifcs2_input.esp_allow_in_auto_gimbal description=If set to 1, ESP is allowed during auto gimbal mode.
v_ifcs2_input.esp_allow_in_manual_gimbal description=If set to 1, ESP is allowed during manual gimbal mode.
v_ifcs2_input.esp_allow_with_relative_mouse_mode description=If set to 1, ESP is allowed during relative mouse mode.
v_ifcs2_input.esp_dampening description=ESP settings: Modifier for the ESP dampening set in the data.
v_ifcs2_input.esp_debug description=Shows ESP debug info.
v_ifcs2_input.esp_overwrite_dampeningCurvature description=Only active above 1. Overwrites the used damping locally.
v_ifcs2_input.esp_overwrite_innerZoneRatio description=Only active above 0. Overwrites the used inner zone ratio.
v_ifcs2_input.esp_overwrite_outerZoneSize description=Only active above 0. Overwrites the outer zone size.
v_ifcs2_input.esp_overwrite_pulling description=Overwrites whether pulling is used or not. Only active >=0.
v_ifcs2_input.esp_strength description=ESP settings: Modifier for the ESP strength set in the data.
v_ifcs2_input.esp_used_mode description=Applies for fixed only, 0: average, 1: weighted average, 2: closest position.
v_ifcs2_input.flip_inversion_on_yaw_swap description=When triggering yaw/roll swap, flip the pitch inversion
v_ifcs2_input.relative_throttle_speed description=How much the value can change per second.
v_ifcs2_input.relative_throttle_trap_threshold description=Relative throttle: The change input value below which the trap is ignored.
v_ifcs2_input.relative_throttle_trap_time description=Relative throttle: Time the throttle will stick in the middle when relative throttle is used.
v_ifcs2_input.relative_throttle_trap_type description=0: no trap, 1: to backwards, 2 to forwards, 3 both ways.
v_ifcs2_input.speed_limiter_change_time_hold description=Changes the speed with which the speed limiter can be changed when deltas are used.
v_ifcs2_input.speed_limiter_increment_change description=Changes the speed with which the speed limiter can be changed when deltas are used.
v_ifcs2_input.throttle_mode_swap_behavior description=Changes whether or not swapping to cruise mode keeps or resets the speed goal.
0: forward backward input will rest itself to zero when swapping to cruise mode. 
1: forward backward input will be set to the current vehicle speed (default).
v_ifcs2_input.thrustInvert_isToggle description=Thrust invert button is a toggle
v_invulnerableShopVehicles description=Shops ships can't be damaged/destroyed
v_landingSystem.areaGeom.debugLandingUI description=Show the bounding box of the landing corridor.
v_landingSystem.debug description=Show debug movement requests.
v_landingSystem.debugEntityName description=Enables debugging of non-player state machines
v_landingSystem.debugLandingMarkers description=Logs out calls for state changes in the UI markers for landing pads.
v_landingSystem.debugStateHierarchy description=Turn on CryState debugging.
v_landingSystem.disabled description=Disable landing system vehicle item (remains in idle state).
v_landingSystem.drawBounds description=Draw ship and landing area bounds (1 draws ship and area bounds, 2 includes physics bounds : non-Release)
v_landingSystem.drawRayCasts description=Draws autodocking raycasts
v_landingSystem.eventlog description=Log landing events.
v_landingSystem.netlog description=Log network requests.
v_landingSystem.simpleLanding.autotouchdown.enabled description=Enable autotouchdown.
v_landingSystem.simpleLanding.autotouchdown.height description=Height at which we kick-in auto-touchdown.
v_landingSystem.simpleLanding.debugArea description=Debug area processor state machine.
v_landingSystem.simpleLanding.dockingSystem.abortEnabled description=Enable/disable docking abort option.
v_landingSystem.simpleLanding.dockingSystem.autoDockEnabled description=Enable/disable autodocking option.
v_landingSystem.simpleLanding.dockingSystem.hoverTime description=Default hover time.
v_landingSystem.simpleLanding.dockingSystem.requirePlayerInteraction description=Requires player to press a button to advance hangar touchdown and post-takeoff.
v_landingSystem.simpleLanding.orientWithPlane description=Orientate the ship to align it's up vector with the landing plane.
v_landingSystem.simpleLanding.useLandingHelperNode description=Use landing helper node to calculate touchdown position (as opposed to ship bounds).
v_max_collisions description=Maximal number of logged collisions per frame.
v_mining.debugController description=Mining controller debug
v_mining.debugWeapon description=Mining weapon (fracture and extraction) debug
v_pa_surface description=Enables/disables vehicle surface particles
v_pitch_ladder_mixed_threshold description=Defines when the threshold between pitch ladder mixed appears
v_pitch_ladder_mixed_timeToSwap description=Defines how long it takes to swap from HUD to view and back in mixed mode
v_pitch_ladder_mode_preferred description=0: off, 1: forward only, 2: view only, 3: mixed
v_pitch_ladder_show description=Shows the pitch ladder HUD element
v_playPassBySoundOnPlayersShip description=Play pass by sound on vehicle regardless if player is a passenger
v_profileMovement description=Used to enable profiling of the current vehicle movement (1 to enable)
v_profile_graph description=Show a vehicle movement debug graph:
    slip-speed           :     show the average FOWARD slip of the wheels
    slip-speed-lateral   :     show the average SIDE slip of the wheels
    centrif              :     show the actual centrifugal force
    ideal-centrif        :     show ideal centrifugal force

v_qdrive.allow_spline_fx description=Render spline vfx.
v_qdrive.calibrate_after_spool description=Can only start calibrating after fully spooled. Enable on Server.
v_qdrive.debug description=Show state debug.
1 - Show state for all drives
2 - Show state for drives in a group
v_qdrive.detectSelectionObstructions description=Check for potential obstructions during target selection.
v_qdrive.disableOrbitalMarkers description=CVar to disable Orbital Markers from spawning
v_qdrive.disable_ai_qt_arrival_fixup description=Disable the fixup code when AI try to spawn via QT. To be disabled if the fixup starts becoming a performance issue.
v_qdrive.disable_fuel_burn description=Disable fuel burn during quantum. Drive will always think it has enough fuel. Enable on Server.
v_qdrive.disable_interdiction_check description=Interdiction will not occur even with services. Enable on Server.
v_qdrive.enableLocalRouting description=CVar to allow routing on client if the QT point does not exist on the server
v_qdrive.enable_fatals_for_null_envelope description=Turn on crashes when a travel envelope is null when expected to be valid.
v_qdrive.enable_leader_dependence description=Make followers dependent on leader. Disables minigame from followers and makes them drop out with leader.
v_qdrive.force_interdiction_halfway description=Force us to emulate an interdiction half way through a QT.
v_qdrive.ignore_atmosphere_restriction description=Ignore planet and moon atmospheres for qt restriction. Enable on Server.
v_qdrive.instant_qt description=Instantly complete any QT. Enable on Server.
v_qdrive.logging description=Enables logging to debug the current flow of the Quantum Drive
v_qdrive.maxArrivalDelta description=How far offset of the direct target we will arrive. Used to reduce collisions.
v_qdrive.maxArrivalDistanceForDelta description=Max distance where we will use all of maxArrivalDelta. If the arrival radius is smaller than this, we reduce the arrivaldelta accordingly.
v_qdrive.override_cooldown description=Cooldown no longer takes any time.
v_qdrive.resolver.debug description=Draw resolver debug.
v_qdrive.resolver.drawAllVehicles description=Draw all vehicles (still does a limiting radius check).
v_qdrive.resolver.drawContainer description=Draw resolver container capsule.
v_qdrive.resolver.drawSpheres description=Draw resolver obstacles.
v_qdrive.resolver.enabled description=Enable destination position resolver (solves multiple clients heading for same QT destination point).
v_qdrive.resolver.viewCameraRelative description=Transform debug view to be camera relative.
v_qdrive.resolver.viewRefresh description=Update debug view transform (if viewCameraRelative).
v_qdrive.resolver.viewType description=0 = top view, 1 = rear view, 2 = front view.
v_qdrive.show_target_spline description=Show target spline.
v_qdrive.towingFuelBurnMultiplier description=multiplier for amount of fuel reqired by the drive while towing, 1.0f is maintaining the same fuel consumption
v_qdrive.travelEnabled description=Enable/Disable engaging quantum travel (Can be overridden by game mode)
v_qdrive.travel_target_threshold_angle description=Set via game mode. Sets the global threshold at which a quantum target (navpoints, etc.) can be selected.
v_qdrive.use_building_blocks_hud description=Use the new building blocks HUD instead of legacy flash.
v_qdrive2.debug_disable_quantum_raycast description=If disabled, no quantum raycasts will be executed.
v_qdrive2.input_boosting_velocity_change_delta_time description=Time it takes to go from 0 to 1 on the Quantum velocity axis.
v_qdrive2.input_hold_time description=The amount of time in seconds players need to hold the quantum button for a state change.
v_qdrive2.quantumBoostAllowed description=Set via game mode. If enabled, allows quantum boosting (new quantum drive only).
v_qdrive2.quantumTravelAllowed description=Set via game mode. If enabled, allows quantum travel (new quantum drive only).
v_qdrive2.setting_3dhud_close_distance description=Distance in which the quantum HUD will rendered which is usally very close to the camera.
v_qdrive2.setting_3dhud_far_distance description=Distance in which the quantum HUD is supposed to rendered to avoid all parallax effects.
v_qdrive2.setting_3dhud_referenceAngle description=Degree size for the Quantum Boost HUD reference widget.
v_qdrive2.setting_3dhud_targets_distance description=Distance in which the quantum boost targets are painted.
v_qdrive2.setting_alignmentThreshold description=Threshold until Quantum Boost auto pilot during alignment is considered aligned.
v_qdrive2.setting_boostMinBaseRayLength description=The amount of time in seconds players need to hold the quantum button for a state change
v_qdrive2.setting_boost_relative_start_speed_goal description=Defines at which relative speed goal (between 0 and 1) the initial boost velocity goal is.
v_qdrive2.setting_cameraEffectsScale description=Just a modifier for the effects scale during Quantum
v_qdrive2.setting_cameraEffectsType description=0: off, 1: during charge and acceleration, 2: during charge only, 3: during acceleration only
v_qdrive2.setting_driveCircleUIWithIntegrity description=Breaks the circle apart with Bubble Integrity instead of alignment angle.
v_qdrive2.setting_dropoutTargetPositionEpsilon description=When positional slowdown is forced we check if the new target is more than that amount of distance away from the old one. If that is the case, the stop action is retriggered.
v_qdrive2.setting_enforceAIGroupQT description=Forces AI ships to Quantum with any player they're grouped with.
v_qdrive2.setting_enforceGroupQT description=Prevents QT if someone in your QT Group is not ready.
v_qdrive2.setting_ignoreBlockedBoost description=Set to 1 to ignore the blocked boost state on the QDrive, and allow boosting even if blocked.
v_qdrive2.setting_ignoreBlockedTravel description=Set to 1 to ignore the blocked travel state on the QDrive, and allow travelling even if blocked.
v_qdrive2.setting_quantumRaycastSafetyDistance description=That is the amount of meters the ship will be commanded to stop BEFORE a obstacle.
v_qdrive2.setting_showCalibrationUI description=Shows a small circle progress for calibration.
v_qdrive2.setting_showLockProgressText description=Shows the lock progress of the QDrive during QTravel.
v_qdrive2.setting_showUI description=Set to 0 if you want to hide the UI.
v_qdrive2.setting_targetLockAngSpeedThreshold description=Max ang velocity to start spooling
v_qdrive2.setting_targetLockAngleThreshold description=Angle threshold to automatically pick a suitable boost target.
v_qdrive2.setting_targetLockTimer description=Time until the system has readily picked a new target point.
v_qdrive2.setting_teleportDistanceThreshold description=The maximum distance a deceleration needs to take place over before we consider emergency teleporting the ship.
v_qdrive2.setting_teleportTimeStepThreshold description=The maximum number of physics timesteps a deceleration needs to take before we consider emergency teleporting the ship.
v_qdrive2.setting_turbulenceEnabled description=Set to 1 to enable rotation pull during boosting.
v_qdrive2.setting_turbulenceModifier description=Modifies the turbulence values
v_qdrive2.setting_useRotationInput description=Set to 1 to enable rotation input gameplay
v_qdrive2.setting_useRotationKick description=Set to 1 to enable random rotation kicks when the ship enters and exits the travel state. Set to 2 to use the current angular offset of the ship instead of a random offset.
v_qdrive2.setting_velocityAlignmentAngle description=Velocity alignment angle in deg before boost is allowed.
v_qdrive2.setting_vibrationsUseWithBoost description=Set to 1 to use vibrations during boosting
v_qdrive2.setting_vibrationsUseWithCancel description=Set to 1 to use vibrations during normal cancelling
v_qdrive2.setting_vibrationsUseWithCooldown description=Set to 1 to use vibrations during the cooldown phase
v_qdrive2.setting_vibrationsUseWithSpool description=Set to 1 to use vibrations during spool up
v_qdrive2.travel_target_threshold_angle description=Set via game mode. Sets the global threshold at which a quantum target (navpoints, etc.) can be selected.
v_quantum.DebugRaycasts description=Enables verbose logging of quantum raycasting. 0 = Disable, 1 = Enabled
v_radar.blob_debug_enabled description=Debug draw blobs on screen in world space
v_radar.clear_blobs_for_local_player description=Clear all blobs for the local player on this machine
v_radar.cross_section_uses_direction description=1 = Cross section calculation includes the detector orientation when comparing transforms, 0 = it doesn't
v_radar.debug_occlusion_checks description=Draw onscreen debug relating to the occlusion raycasts
v_radar.enable_audio_detection description=Enables detection of signals from explosions with audio contact type
v_radar.enable_delta_signatures description=Enable emission and detection of delta signatures. 0 - off, 1 - use GameRules param, 2 - on
v_radar.enable_experimental_mode description=Enables the experimental version of radar. 0 - off, 1 - use GameRules param, 2 - on
v_radar.enable_limited_slots description=Enable limited slots for designated contacts. 0 - off, 1 - on
v_radar.enable_quickscan_on_jammed_chargescan description=Automatically perform a quick scan when attempting to do a charge scan while jammed. 0 - off, 1 - on
v_radar.inflate_bounds_size description=inflates the bounds of entities detected by radar
v_radar.limited_slots_count description=Sets the maximum number of limited slots available i.e the number of markers of designated contacts allowable. Default: 150
v_radar.persist_blobs_until_boost description=Blobs are not cleared from the DataBank until the DB owner starts quantum boosting/travelling 0 - off, 1 - on
v_radar.ping_detected_highlight_enabled description=Enable outline highlighting of entities detected by the ping. 0 - off, 1 - on, 2 - on (using AR RTT)
v_radar.ping_wave_effect_force_360 description=Forces the ping wave effect to always use the 360 effect
v_radar.ping_wave_effect_force_attach description=Forces the ping wave effect to attach to the host
v_radar.ping_wave_use_lens_rtt description=Use RTT for ping wave effect
v_radar.room_graph description=Allow radar to use the room graph for detection. 0 - force off, 1 - record default, 2 - force on
v_radar.scan_blockout_enabled description=0 - off, 1 - on
v_radar.scan_mode_fps_enabled description=Allow scan mode on FPS radars. 0 - force off, 1 - game mode default, 2 - force on
v_radar.scan_target_highlight_enabled description=Enable outline highlighting of current scan target. 0 - off, 1 - on
v_radar.scan_wave_debug_enabled description=0 - off, >= 1 - adds various debug ui on screen
v_radar.tagging_fps_enabled description=Allow tagging from FPS radars. 0 - force off, 1 - game mode default, 2 - force on
v_refuel_system_debug description=Enable logging for refueling.
v_respawnPenalty_MaxMult description=Respawn time multiplier when ejecting at full health
v_respawnPenalty_Threshold description=Fraction of health above which a penalty is applied
v_rtt_vehicle_supersampling description=Supersampling factor for vehicle status RTTs to reduce aliasing
v_rtt_vehicle_visor_scale description=Resolution scale for the vehicle status RTTs to fix incorrect resolutions due to visor curvature
v_screen_rtt_bias description=Vehicle RTT screen texture bias 1 == no bias
v_separatePowerAndEngineStart description=Separates engine startup of vehicles from startup of the rest of the vehicles systems.
v_shipRecall.debug description=Enables ship recall debug -- 1+ : visual info about area checks and initial conditions 2+ : Braking distance info (only in EVA).
v_shipRecall.enabled description=Enables ship recall features (currently on supported for S42).
v_shipRecall.hoverNearby description=Enables ship recall when no landing area (in gravity) -- the recall ship will instead hover near the caller.
v_shipRecall.logging description=Enables ship recall debug log entries
v_show_inspector description=
v_slipFrictionModFront description=if non-zero, used as slip friction modifier (front wheels)
v_slipFrictionModRear description=if non-zero, used as slip friction modifier (rear wheels)
v_slipSlopeFront description=coefficient for slip friction slope calculation (front wheels)
v_slipSlopeRear description=coefficient for slip friction slope calculation (rear wheels)
v_soft_destruction_enable description=Enable vehicle soft destruction where the vehicle will die but keep the interior, oc, and actors alive (no ai ships)
0: Disabled
1: Enabled In PU
2: Enabled Everywhere

v_soft_destruction_part_buffer description=How much part health is brought back after soft destruction is reached...this allows us to downgrade to full destruction when it dies again. 0 = 0%, 1.0 = 100% 
v_spawnDistance description=Set minimum distance from player when v_spawning a ship/vehicle
v_stationDockingEnabled description=Station docking feature flag. Blocked at the ATC level
v_tankReverseInvertYaw description=When a tank goes in reverse, if this is enabled then the left/right controls will be inverted (same as with a wheeled vehicle)
v_target_auto_zoom_enabled description=Enables / disables auto zoom when a target is in view.
v_target_auto_zoom_strength description=Modifier for the max zoom strength when auto zoom is applied.
v_treadSprocketRotationMultiplier description=Sets the sprocket rotation multiplier for the vehicle treads
v_treadUVScrollMultiplier description=Sets the uv scroll multiplier for the vehicle treads
v_useLandingController description=Force newly spawned vehicles to use the landing controller instead of the vehiclelandinggearsystem
v_vehicle_quality description=Geometry/Physics quality (1-lowspec, 4-highspec)
v_vjoy_deadzone description=Pilots: Defines the size of the dead zone
v_vjoy_max_angle_pitch description=Pilots: Defines the max angle the pitch vjoy is offset from the middle of the screen.
v_vjoy_max_angle_yaw description=Pilots: Defines the max angle the yaw vjoy is offset from the middle of the screen.
v_vjoy_visibility description=Pilots: Defines conditions for showing vjoy: 0 - always off, 1 - on mouse input only, 2 - always on
v_vjoy_visibility_drawDeadzone description=Pilots: Draws the VJoy dead zone if visible.
v_weapon_auto_gimbal_uses_offbore_nudging description=Gives AGs nudging towards the target, even if the target is outside the snapping threshold.
v_weapon_mgv_manual_gimbal_mode_default description=Defines which manual gimbal mode the player uses for mgvs (0: Force VJoy, 1: Look direction
v_weapon_mgv_manual_gimbal_mode_freelook description=Defines which manual gimbal mode the player uses for mgvs (0: No override, 1: Force VJoy, 2: Force Look Direction) during freelook
v_weapon_spaceship_manual_gimbal_mode_default description=Defines which manual gimbal mode the player uses for ships (0: Force VJoy, 1: Look direction
v_weapon_spaceship_manual_gimbal_mode_freelook description=Defines which manual gimbal mode the player uses for ships (0: No override, 1: Force VJoy, 2: Force Look Direction) during freelook
v_weapon_turret_manual_gimbal_mode_default description=Defines which manual gimbal mode the player uses for turrets (0: Force VJoy, 1: Look direction
v_weapon_turret_manual_gimbal_mode_freelook description=Defines which manual gimbal mode the player uses for turrets (0: No override, 1: Force VJoy, 2: Force Look Direction) during freelook
v_wind_minspeed description=If non-zero, vehicle wind areas always set wind >= specified value
v_wingmanCommandsEnabled description=If bigger than 0, wingman commands are allowed.
version description=Shows game version number
w_BiomeBuilder.AllowScatteringPOD description=Allow/Disable POD for physics requests
w_BiomeBuilder.ForceFurtherGroundCover description=Force Groundcover to be shown further away
w_BiomeBuilder.ShowSpawnCells description=Show Spawn Cells, 1 = all, 2 = updated
w_BiomeBuilder.WaitForPool description=Always Wait for Pool Lock
w_BiomeBuilderCellRespawnOnInvalidation description=Same-frame object respawn when terrain is invalidated
w_BiomeBuilderCellsKeepSpawnedTicks description=How many ticks to keep regular Cells
w_BiomeBuilderMaxPEntsDeletedPerFrame description=Number of Physical Entities to delete per frame
w_BiomeBuilderPEntPoolSize description=Number of Physical Entities to keep in the p-ent pool - set to 0 to disable the pent pool
w_BiomeBuilderPODKeepSpawnedTicks description=How many ticks to keep POD-spawned Cells
w_BiomeBuilder_PEnt_Faster_Deletion_Begin_Threshold_Ticks description=Start deleting p-ents faster when it would take this number of ticks to cleanup at normal rate
w_BiomeBuilder_PEnt_Faster_Deletion_Multiplier description=When above the threshold, how much faster to delete pents
w_BiomeBuilder_ShowDebugInfo description=Show BiomeBuilder debug menu
w_BurySpawnedEntities description=Bury Spawned Entities by their EID instead of getting the ptr and destroying them
w_DebugDeletionPool description=Display the positions of pooled for deletion physical entities
w_DisableTreeUpdates description=Freeze the planet tree
w_DontUseDelayedCamera description=Don't use the 1 frame delayed 3DEngine camera
w_EnablePlanetComputeStage description=Enable the planet compute stage
w_GenerateReferencePositions description=Enable the generation of reference positions
w_GroundCoverObjectSize description=Size used to check ground cover spawns against planet hole OBBs
w_GroundCover_UsePersistentInstanceBuffers description=Use Persistent Instance buffers for brush groups
w_ManagedEntitySystem description=Toggle Managed Entity System on/off
w_ManagedEntitySystem_LogActions description=Log Managed Entity System actions
w_MaxGeomModOffsetPerVertex description=The maximum offset that geometry mods can apply to each vertex
w_MaxGeomModsPerVertex description=The maximum number of geometry mods that can apply to each vertex
w_MinTerrainHoleLevel description=Below this level terrain holes don't work, to avoid sorting huge numbers of holes on large patches
w_OfflineRendering_IncreasePlanetPatchSubdivision description=Activate the "ridiculous mode" patch subdivision, increasing the ratio of patches subdivision
w_OfflineRendering_PlanetObjectsMaxSpawnLevel description=BiomeBuilder spawns all objects at level 10
w_OfflineRendering_WaitForPlanetObjects description=Wait for WorldBuilder to finish spawning during offline renders
w_OfflineRendering_patchSubdivisionLevelThreshold description=Threshold above which the patch subdivision come back to normal when "Ridiculous mode" is activated
w_PlanetIntegrationMaterialName description=Material Used for planet integration decals
w_PlanetMinFogDensity description=Min Fog Density for Oceans and Rivers
w_PlanetUseVolumetricUnderwaterFog description=Should we use volumetric fog underwater
w_PlanetV4_GroundCoverPatchSize description=Ground Cover Patch Size
w_PlanetV5_ForceLoadPlanetAsV5HybridMode description=Force planets to load in v5 mode
w_Planet_ExportLocalDSTs description=Export all dst files for the current planet
w_PlanetsUseDistantImposter description=Planets use the imposter stage to appear at astronomic distances
w_PlanetsideEntitySpawning description=Turn on the planetside entity spawning system
w_PreventPODObjectSpawning description=Prevent physics submitting work to BiomeBuilder
w_ReferencePositionLevel description=Tree subdivision level at which reference positions are placed
w_RiverTestTool description=Turn on the river placement tool
w_ScatterPatch_DelayFrames description=Frames to delay cleanup of old brush groups
w_Scattering_BaseRegionSize description=Number of hierarchy levels to subdivide scatter patches
w_Scattering_FirstScatterRegionSize description=Frames to delay cleanup of old brush groups
w_Scattering_ProbabilityCurveMode description=What kind of curve affects the probability of spawn
w_Scattering_SubdivisionLevels description=Number of hierarchy levels to subdivide scatter patches
w_Scattering_ViabilityDebugMode description=Show viability debug points of spawned objects
w_ShowEcosystemDebugPanel description=Show the ecosystem debugging UI Panel
w_ShowEntityGrid description=View the grid in which entities are being spawned planet-side
w_ShowEntityLocations description=View locations of spawned entities
w_SpawnMoreCellsPerframe description=Use a high number of cells for per-frame spawning
w_SpawnRivers description=Enables/Disable Procedural Rivers
w_TerrainSafeDistanceThreshold description=Safe distance above terrain to skip object physicalization
w_UseOPRBlendProbability description=Turn on biomebuilder opr blend probability
w_UsePlanetTreeAlways description=Force use of the PlanetTree for all planets
w_UseWeatherWaterSim description=Enable water sim on GPU Puddles
w_V5Scatter_UsePersistentInstanceBuffers description=Use Persistent Instance buffers for brush groups in V5 Scattering
w_WorldBuilder_KeepGRDCMeshes_Metres description=How many metres to prevent de-spawn of ground cover
w_atmoRenderPriority description=Decide which method is picked to render the atmo. 0 is the biggest on screen, 1 is the closest, 2 is the biggest in general
w_client_server_state_request_cooldown description=After a client receives a state from the server, it is not allowed to request a new one until this cooldown expired (in seconds).
w_command_buffer_analytics_interval description=Each weapon will send a command buffer analytics event after the set amount of seconds while active.
w_command_buffer_snapshot_analytics_cooldown description=Time until a new report can be sent out after a command buffer snapshot analytics event has been sent out.
w_command_buffer_snapshot_analytics_threshold description=If the command buffer snapshot reaches this many commands, it will send out an analytics event.
w_crosshair_mode description=Sets the mode of the crosshair, 0=Disable, 1=Always Enabled. Crosshair needs to be enabled in Game Rules or using w_crosshair_enable=2.
w_crosshair_opacity description=Sets opacity of the crosshair
w_debug_commands_send_recv description=Debug weapon command sending and receiving.
w_debug_statebuilder description=Show logs for weapon state builder
w_enable_projectile_spawning_logging description=Enable projectile spawning error logging.
w_fCollectModifiersZFactor description=Multiplier applied to a chunk's obb's z component in order to 'catch' modifiers above or below it
w_fatal_on_invalid_helper_transform description=Added temporarily for RSI-416470
w_hitmarker_mode description=Sets the mode of the Hitmarker. 0=Disabled, 1=Enabled. Hitmarker needs to be enabled in Game Rules or using w_crosshair_hitmarker_enable=2.
w_max_weapon_updates_per_frame description=Determines how many fixed updates weapons can do each frame.
w_minimum_power_ratio_delta description=Minimum power ratio delta from the resource network. Prevents erratic behaviour with Ammo Regenerator.
w_network_history_buffer_time description=Time in seconds where clients will keep a history of the last executed commands on each weapon.
w_network_server_history_buffer_time description=Time in seconds where the server will keep a history of the last executed commands on each weapon.
w_network_tick_adjustment_threshold_time description=If the local and server weapon tick time is higher than this amount in seconds, it will snap to the new tick and request a rebuild
w_planetsideScatterLevelDist description=Planetside Scattering per-level Dist
w_planetsideSpawningOverrideDensity description=Override Spawning Per Km Density for ALL planetside spawned entities
w_regen_pool.enable_assignment_modifier_on_ammo_load description=Enables ammo load modifier based on capacitor assignments.
w_regen_pool.enable_assignment_modifier_on_regen description=Enables regen modifier based on capacitor assignments.
w_regen_pool.hack_pipe_value_modifier description=Hack value to multiply/divide pipe values by for weapon regen/ammo load, so errors are below an epsilon (0.001) and get ignored properly.
w_salvage_ammo_change_interval description=Time in seconds between ammo updates from the salvage / repair weapon action. Used to reduce bandwidth usage.
w_salvage_enable_item_repair description=Enables or disables salvage repair beams being able to repair the health of items without damage maps that have been set to be repairable in Dataforge.
w_send_duplicated_commands description=If 0, the weapon will not sync duplicated commands over the network. A command is marked as duplicated if it triggered in the same tick with the same data.
w_skip_local_simulation_threshold_time description=Skips ahead in the simulation if the last update tick older than this in seconds, if it is above zero.
w_tractor_maxQueryRange description=Every entity beyond that distance in meters will not be considered for port checks.
wait_frames description=Forces the console to wait for a given number of frames before the next deferred command is processed
Works only in deferred command mode
wait_seconds description=Forces the console to wait for a given number of seconds before the next deferred command is processed
Works only in deferred command mode
watch_enabled description=On-screen watch text is enabled/disabled
watch_text_render_fxscale description=Draw2d label to IFFont x scale value (for calcing sizes).
watch_text_render_lineSpacing description=On-screen watch text line spacing (to cram more text on screen without shrinking the font)
watch_text_render_size description=On-screen watch text render size
watch_text_render_start_pos_x description=On-screen watch text render start x position
watch_text_render_start_pos_y description=On-screen watch text render start y position
watchai description=If Server-viewport is enabled (-server3d) , will watch the AI actor with supplied identifier string (EntityID, Actor Name, or AI Index) -- no parameters stops watching and closes render window
watchplayer description=If Server-viewport is enabled (-server3d) , will watch the player with supplied identifier string (EntityID, Player Name, or Player Index) -- no parameters stops watching and closes render window
weapon_bob_override.debug description=Enable prototype weapon bob debug 1-enable 0-disable
weapon_bob_override.enable description=Enable prototype weapon bob which is in sync with foots 1-enable 0-disable
weapon_bob_override.footstepsCycleDelay description=prototype weapon bob footstepsCycleDelay
weapon_bob_override.maxSpeed description=Max speed for weapon sync
widget.chat.visor.init.retries description=The ammount of retries to initialize the visor chat
